{"version":3,"sources":["api/cafeApi.tsx","helpers/serviceLogin.tsx","context/AuthContext.tsx","pages/loginPage.tsx","helpers/serviceCategorias.tsx","hooks/useCafe.tsx","helpers/tableUtils.tsx","pages/categoriasPage.tsx","helpers/serviceMovimientos.tsx","helpers/servicePersonas.tsx","hooks/usePersona.tsx","helpers/serviceProductos.tsx","hooks/useProducto.tsx","components/cliente.tsx","pages/movimientosPage.tsx","hooks/useMovimiento.tsx","pages/productosPage.tsx","pages/clientesPage.tsx","Routers/AppRouter.tsx","pages/registerPage.tsx","Routers/PublicRoute.tsx","Routers/PrivateRoute.tsx","Routers/AuthRouter.tsx","index.tsx"],"names":["cafeApi","axios","create","baseURL","token","localStorage","getItem","postlogin","usuario","clave","a","post","correo","password","resp","data","renovartoken","get","headers","AuthContext","createContext","auth","uid","checking","logged","name","email","opciones","_id","ruta","titulo","login","verificaToken","logout","initialState","AuthProvider","children","useState","setAuth","setItem","console","log","nombre","useCallback","undefined","Provider","value","removeItem","LoginPage","useContext","onFinish","values","username","ok","labelCol","span","wrapperCol","initialValues","remember","onFinishFailed","errorInfo","autoComplete","Item","label","rules","required","message","Password","valuePropName","offset","type","htmlType","fetchcategorias","categorias","postcategoria","categoria","length","put","useCafe","isLoading","setIsLoading","setCategorias","useEffect","then","tableColumnTextFilterConfig","searchInputHolder","current","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","style","padding","ref","node","placeholder","onChange","e","target","onPressEnter","width","marginBottom","display","onClick","icon","SearchOutlined","size","marginRight","filterIcon","filtered","color","onFilterDropdownVisibleChange","visible","setTimeout","select","CategoriasPage","Form","useForm","Forma","columns","title","dataIndex","key","render","text","onFilter","record","toLowerCase","includes","toString","sorter","b","fixed","shape","EditOutlined","setformulario","setcategoria","setFieldsValue","formulario","gutter","PlusOutlined","orientation","tableLayout","loading","rowKey","pagination","defaultPageSize","showSizeChanger","pageSizeOptions","scroll","x","dataSource","height","onClose","bodyStyle","paddingBottom","placement","form","respuesta","map","ele","success","catch","error","SaveOutlined","fetchmovimientos","movimientos","fetchUltimoMovimiento","fetchelectronica","idx","fetchDescargar","responseType","window","open","URL","createObjectURL","postmovimiento","movimiento","fetchpersonas","personas","postpersona","persona","usePersona","setPersonas","fetchproductos","productos","idaux","getFileProducto","parametro","defaults","substr","lastIndexOf","postFileProducto","archivo","formData","FormData","append","postproducto","producto","id","useProducto","setProductos","ClienteComponente","setpersona","identificacion","direccion","telefono","correoelectronico","Option","Select","MovimientosPage","Formac","formularioc","setformularioc","procesando","setprocesando","codigo","valor","moment","format","setmovimiento","auxiliar","forEach","elemento","push","item","cantidad","precio","total","cliente","subtotal","iva","descuento","fecha","CloudUploadOutlined","resultado","mensajeActual","RespuestaRecepcionComprobante","comprobantes","comprobante","mensajes","mensaje","err","CloudDownloadOutlined","setMovimientos","useMovimiento","Date","parseInt","spinning","delay","tip","onValuesChange","_","rowsCopy","totalAuxiliar","fieldGroup","index","splice","Decimal","mul","toISOString","estado","clienteAuxiliar","filter","p","toDate","showSearch","optionFilterProp","onSearch","filterOption","input","option","indexOf","List","fields","add","remove","field","align","fieldKey","noStyle","disabled","MinusCircleOutlined","block","ProductosPage","src","img","setproducto","costo","minimo","setarchivo","auxiliarProductos","nombreCategoria","respuestaConFoto","elex","min","listType","maxCount","beforeUpload","UploadOutlined","ClientesPage","Header","Layout","Content","Footer","Sider","SubMenu","Menu","HeartSvg","fill","viewBox","d","HeartIcon","props","Icon","component","AppRouter","mostrarIcono","icono","UserOutlined","DollarOutlined","BarcodeOutlined","ShoppingCartOutlined","TeamOutlined","colapsado","setcolapsado","minHeight","collapsible","collapsed","onCollapse","className","theme","defaultSelectedKeys","mode","split","elementod","startsWith","opcion","to","elementoe","opcionx","SettingFilled","margin","exact","path","textAlign","formItemLayout","xs","sm","tailFormItemLayout","RegisterPage","residence","prefix","scrollToFirstError","hasFeedback","dependencies","getFieldValue","validator","Promise","reject","Error","resolve","tooltip","whitespace","PublicRoute","Component","isAuthenticated","rest","PrivateRoute","AuthRouter","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d43990d0.chunk.js","sourcesContent":["import axios from 'axios'\n\n\nexport const cafeApi = axios.create(\n    {\n        //baseURL: 'https://jomilimon.herokuapp.com/api'\n        baseURL: 'http://localhost:8080/api'\n        //baseURL: 'http://192.168.100.24:8080/api'\n    }\n)","import { cafeApi } from \"../api/cafeApi\"\nimport { PostLogin } from \"../interfaces/postLogin\";\n\nconst token = localStorage.getItem('token') || '';\n\nexport const postlogin= async (usuario: string, clave:string): Promise<PostLogin> =>{\n    let resp;\n    resp = await cafeApi.post<PostLogin>(`/auth/login`, { correo:usuario, password:clave } );\n    return resp.data;\n}\nexport const renovartoken = async ():Promise<PostLogin>=>{\n    let resp;\n    resp = await cafeApi.get<PostLogin>(`/auth`, { headers:{\n        'x-token':token\n    } } );\n    return resp.data;\n}","import React, { createContext, useCallback, useState } from 'react';\nimport { postlogin, renovartoken } from '../helpers/serviceLogin';\n\n\ntype TipoMetodo = (email: string, password:string) => Promise<boolean>;\ntype TipoMetodo2 = () => Promise<boolean>;\ntype TipoMetodo3 = () => boolean;\n\ninterface auth{  \n        uid?:string,\n        checking:boolean,\n        logged:boolean,\n        name?:string,\n        email?:string,\n        opciones?:\n            {\n                _id: string,\n                clave:string,\n                ruta:string,\n                titulo:string,\n            }[]\n        \n}\n\ninterface respuesta{\n    auth:auth,\n    login: TipoMetodo,\n    verificaToken: TipoMetodo2,\n    logout: TipoMetodo3\n}\n\nexport const AuthContext = createContext<respuesta>({auth: {uid: '',\nchecking: true,\nlogged: true,\nname: '',\nemail: '',\nopciones:[{_id:'',clave:'', ruta:'', titulo:''}]\n} \n, login: async (email:string, password:string)=>{return false;},\nverificaToken:  async () => {return false;}   ,\nlogout: ()=> {return true;} });\n\nconst initialState = {\n    uid: '',\n    checking: true,\n    logged: false,\n    name: '',\n    email: '',\n    opciones: [{_id:'',clave:'', ruta:'', titulo:''}]\n};\n\n\nexport const AuthProvider: React.FC = ({ children }) => {\n\n    const [ auth, setAuth ] = useState<auth>(initialState)\n\n    const login = async( email:string, password :string) => {\n\n\n        const resp = await postlogin(email, password );\n\n        if ( resp.usuario ) {\n            localStorage.setItem('token', resp.token );\n            const { usuario } = resp;\n\n            console.log(usuario.opciones)\n\n            setAuth({\n                uid: usuario.uid ,\n                checking: false,\n                logged: true,\n                name: usuario.nombre,\n                email: usuario.correo,\n                opciones: usuario.opciones,\n            });\n\n        }\n\n        return true;\n\n    }\n    const verificaToken = useCallback( async() => {\n\n        const token = localStorage.getItem('token');\n        // Si token no existe\n        if ( !token ) {\n            setAuth({\n                uid: undefined,\n                checking: false,\n                logged: false,\n                name: undefined,\n                email: undefined,\n                opciones:[]\n            })\n\n            return false;\n        }\n\n        const resp = await renovartoken();\n        if ( resp ) {\n            localStorage.setItem('token', resp.token );\n            const { usuario } = resp;\n\n            setAuth({\n                uid: usuario.uid,\n                checking: false,\n                logged: true,\n                name: usuario.nombre,\n                email: usuario.correo,\n                opciones: usuario.opciones\n            });\n\n            return true;\n        } else {\n            setAuth({\n                uid: undefined,\n                checking: false,\n                logged: false,\n                name: undefined,\n                email: undefined,\n            });\n\n            return false;\n        }\n\n    }, [])\n\n    const logout = () => {\n        localStorage.removeItem('token');\n        setAuth({\n            checking: false,\n            logged: false,\n        });\n        return true;\n    }\n\n\n    \n\n\n    return (\n        <AuthContext.Provider value ={{\n            auth,\n            login,\n            verificaToken,\n            logout\n        }}>\n            { children }\n        </AuthContext.Provider>\n    )\n}\n\n","import { Form, Input, Button, Checkbox } from 'antd';\nimport { useContext } from 'react';\nimport { AuthContext } from '../context/AuthContext';\n\n\nexport const LoginPage = ()=>{\n  const { login } = useContext( AuthContext );\n    const onFinish = async (values: any) =>  {\n      const ok = await login( values.username, values.password );\n      console.log(ok)\n    };\n    \n      const onFinishFailed = (errorInfo: any) => {\n        console.log('Failed:', errorInfo);\n      };\n    return (\n        <Form\n      name=\"basic\"\n      \n      labelCol={{ span:6 }}\n      wrapperCol={{ span: 8 }}\n      initialValues={{ remember: true }}\n      onFinish={onFinish}\n      onFinishFailed={onFinishFailed}\n      autoComplete=\"off\"\n    >\n      <Form.Item\n        label=\"Username\"\n        name=\"username\"\n        rules={[{ required: true, message: 'Please input your username!' }]}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item\n        label=\"Password\"\n        name=\"password\"\n        rules={[{ required: true, message: 'Please input your password!' }]}\n      >\n        <Input.Password />\n      </Form.Item>\n\n      <Form.Item name=\"remember\" valuePropName=\"checked\" wrapperCol={{ offset: 8, span: 16 }}>\n        <Checkbox>Remember me</Checkbox>\n      </Form.Item>\n\n      <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Submit\n        </Button>\n      </Form.Item>\n    </Form>\n    )\n\n}","import { cafeApi } from \"../api/cafeApi\"\nimport { Categoria, FetchCategorias } from \"../interfaces/fetchCategorias\";\nconst token = localStorage.getItem('token') || '';\n\nexport const fetchcategorias = async (): Promise<Categoria[]> =>{\n    const resp= await  cafeApi.get<FetchCategorias>('/categorias');\n    return resp.data.categorias;\n}\nexport const postcategoria= async (categoria: Categoria): Promise<Categoria> =>{\n    let resp;\n    if (categoria._id.length>0)\n    {\n         resp = await cafeApi.put<Categoria>(`/categorias/${categoria._id}`, categoria, { headers:{\n            'x-token':token\n        } } );\n    }\n    else\n    {\n         resp = await cafeApi.post<Categoria>('/categorias', categoria, { headers:{\n            'x-token':token\n        } } );\n    }\n    return resp.data;\n}","import { useEffect, useState } from \"react\"\nimport { fetchcategorias } from \"../helpers/serviceCategorias\";\nimport { Categoria } from \"../interfaces/fetchCategorias\";\n\nexport const useCafe=()=>{\n const [isLoading, setIsLoading]=    useState(true);\n const [categorias, setCategorias] = useState<Categoria[]>([]); \n useEffect(()=>{\n    fetchcategorias().then(categorias=>{\n        setIsLoading(false);\n        setCategorias(categorias);\n    });\n }, [] )\n return {\n    isLoading,\n    setIsLoading,\n    categorias,\n    setCategorias\n }\n}","import {SearchOutlined} from '@ant-design/icons';\nimport {Button, Input} from 'antd';\nimport {ColumnType} from 'antd/lib/table';\n\nexport function tableColumnTextFilterConfig<T>(): ColumnType<T> {\n  const searchInputHolder: { current: Input | null } = {current: null};\n\n  return {\n    filterDropdown: ({setSelectedKeys, selectedKeys, confirm, clearFilters}) => {\n      return <div style={{padding: 8}}>\n        <Input\n          ref={node => searchInputHolder.current = node}\n          placeholder={'Search'}\n          value={selectedKeys[0]}\n          onChange={(e) => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n          onPressEnter={()=>confirm}\n          style={{width: 188, marginBottom: 8, display: 'block'}}\n        />\n        <Button\n          type=\"primary\"\n          onClick={()=>confirm()}\n          icon={<SearchOutlined/>}\n          size=\"small\"\n          style={{width: 90, marginRight: 8}}>\n          Buscar\n        </Button>\n        <Button size=\"small\" style={{width: 90}} onClick={clearFilters}>\n          Resetear\n        </Button>\n      </div>\n    },\n    filterIcon: filtered => <SearchOutlined style={{color: filtered ? '#1890ff' : undefined}}/>,\n    onFilterDropdownVisibleChange: (visible) => {\n      if (visible) {\n        setTimeout(() => searchInputHolder.current?.select());\n      }\n    },\n  }\n}","import { Table, Drawer, Button, Form, Input, message, Row, Col, Divider } from \"antd\";\nimport { SaveOutlined, PlusOutlined, EditOutlined } from '@ant-design/icons';\nimport { useState } from \"react\";\nimport { useCafe } from \"../hooks/useCafe\";\nimport { postcategoria } from \"../helpers/serviceCategorias\";\nimport { Categoria } from \"../interfaces/fetchCategorias\";\nimport { tableColumnTextFilterConfig } from \"../helpers/tableUtils\"\n\n\nexport const CategoriasPage= ()=>{\n    const crearCategoria=()=>{\n      setformulario(true);\n      setcategoria({_id:\"\", nombre:\"\"});\n      Forma.setFieldsValue({\n        nombre: \"\"\n      })\n    }\n    const [Forma] = Form.useForm();\n\n    const columns = [\n        {\n          title: 'Nombre',\n          dataIndex: 'nombre',\n          key: 'nombre',\n          render: (text: string) => text,\n          ...tableColumnTextFilterConfig<Categoria>(),\n          onFilter: (value: {}, record: Categoria  ):boolean => {\n            return record.nombre.toLowerCase().includes(value.toString().toLowerCase())\n          },\n          sorter: (a:Categoria, b:Categoria) => a.nombre.length - b.nombre.length,\n        },\n        {\n          title: 'Usuario',\n          dataIndex: ['usuario','nombre'],\n          key: 'usuario',\n        },\n        {\n          title: 'Acciones',\n          key: 'acciones',\n          width:200,\n          fixed:'right' as 'right',\n          render: ( record: Categoria) => <Button type=\"primary\" shape=\"circle\" icon={ <EditOutlined/> } onClick=\n          { ()=>\n          \n            { \n              setformulario(true); \n              setcategoria(record);\n              Forma.setFieldsValue({\n                nombre: record.nombre\n              })\n              \n            } \n          }/>,\n        },\n      ];\n      const { categorias, setCategorias, isLoading } = useCafe();\n      const [categoria, setcategoria] = useState<Categoria>({_id:'', nombre:''});\n      const [formulario, setformulario] = useState(false);\n      const onFinish = (values: {nombre:string}) => {\n        setcategoria({\n          _id: categoria._id,\n          nombre: values.nombre\n        })\n        postcategoria({...values, _id:categoria._id }).then(respuesta=>{\n          if (categoria._id.length>0)\n            setCategorias( categorias.map(ele=>{ if (ele._id===categoria._id) return {...ele, nombre: values.nombre  } ; else return ele;}) )\n          else\n            setCategorias([...categorias, respuesta])\n          message.success(\"Se almacenó correctamente la categoría\");\n          setformulario(false);\n        }).catch(error=>{\n          message.error(\"Se presentaron errores al intentar almacenar las categorias\");\n        });\n      };\n    return (\n      <>\n        <Row gutter={12} >\n          <Col span={12} offset={12}>\n            <Button type=\"primary\" shape=\"circle\" icon={<PlusOutlined />} size={'large'} onClick={crearCategoria} />\n          </Col>\n        </Row>\n        <Divider orientation=\"left\">Categorias/Grupos</Divider>\n        <Row gutter= {[16, 24]}>\n        <Table tableLayout='fixed'\n           loading= {isLoading}\n           rowKey='_id'\n           pagination={{ defaultPageSize: 5, showSizeChanger: true,\n           pageSizeOptions: ['5','10', '20', '30']}} \n           scroll={{ x: 1300 }}\n           dataSource={categorias} columns={columns} />\n        </Row>\n        <Drawer\n          title=\"Categoría\"\n          width={720}\n          height={300}\n          onClose={()=>{ setformulario(false); }}\n          visible={formulario}\n          bodyStyle={{ paddingBottom: 120 }}\n          placement=\"bottom\"\n        >\n          <Form\n              form= {Forma}\n              name=\"formcategoria\"\n              labelCol={{ span: 4 }}\n              wrapperCol={{ span: 12 }}\n              initialValues={{ remember: true }}\n              onFinish={ onFinish }\n              onFinishFailed={()=>{}}\n              autoComplete=\"off\">\n                <Form.Item\n                  label=\"Descripción\"\n                  name=\"nombre\"\n                  rules={[{ required: true, message: 'Por favor ingrese la descripción' }]}>\n                  <Input />\n                </Form.Item>\n                <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n                  <Button type=\"primary\" htmlType=\"submit\" icon={<SaveOutlined />}>\n                    Guardar\n                  </Button>\n                </Form.Item>\n              </Form>\n        </Drawer>\n      </>\n    )\n}","import { cafeApi } from \"../api/cafeApi\"\nimport { Movimiento, FetchMovimientos } from \"../interfaces/fetchMovimientos\";\nimport { PostMovimiento } from \"../interfaces/postMovimiento\";\n\nconst token = localStorage.getItem('token') || '';\n\nexport const fetchmovimientos = async (): Promise<Movimiento[]> =>{\n    const resp= await  cafeApi.get<FetchMovimientos>('/movimientos');\n    return resp.data.movimientos;\n}\nexport const fetchUltimoMovimiento= async(): Promise<Movimiento>=>{\n    const resp= await cafeApi.get<Movimiento>('movimientos/ultimo');\n    return resp.data;\n}\n\nexport const fetchelectronica=async (idx:string): Promise<any>=>{\n    const resp = await cafeApi.get<any>(`/movimientos/electronica/${idx}`);\n    return resp;\n}\nexport const fetchDescargar=async (idx:string) : Promise<any> =>{\n    const resp =  await cafeApi.get<any>(`/uploads/facturas/${idx}`, {responseType:'blob'});\n    //console.log(resp)\n    window.open(URL.createObjectURL(resp.data));\n\n}\nexport const postmovimiento= async (idx: string, movimiento: PostMovimiento): Promise<Movimiento> =>{\n    //console.log(JSON.stringify(movimiento) )\n    let resp;\n    if (idx.length>0)\n    {\n         resp = await cafeApi.put<Movimiento>(`/movimientos/${idx}`, movimiento, { headers:{\n            'x-token':token\n        } } );\n    }\n    else\n    {\n         resp = await cafeApi.post<Movimiento>('/movimientos', movimiento, { headers:{\n            'x-token':token\n        } } );\n    }\n    return resp.data;\n}","import { cafeApi } from \"../api/cafeApi\"\nimport { Persona, FetchPersonas } from \"../interfaces/fetchPersonas\";\nconst token = localStorage.getItem('token') || '';\n\nexport const fetchpersonas = async (): Promise<Persona[]> =>{\n    const resp= await  cafeApi.get<FetchPersonas>('/personas');\n    return resp.data.personas;\n}\nexport const postpersona= async (persona: Persona): Promise<Persona> =>{\n    let resp;\n    if (persona._id.length>0)\n    {\n         resp = await cafeApi.put<Persona>(`/personas/${persona._id}`, persona, { headers:{\n            'x-token':token\n        } } );\n    }\n    else\n    {\n         resp = await cafeApi.post<Persona>('/personas', persona, { headers:{\n            'x-token':token\n        } } );\n    }\n    return resp.data;\n}","import { useEffect, useState } from \"react\"\nimport { fetchpersonas } from \"../helpers/servicePersonas\";\nimport { Persona } from \"../interfaces/fetchPersonas\";\n\nexport const usePersona=()=>{\n const [isLoading, setIsLoading]=    useState(true);\n const [personas, setPersonas] = useState<Persona[]>([]); \n useEffect(()=>{\n    fetchpersonas().then(personas=>{\n        setIsLoading(false);\n        setPersonas(personas);\n    });\n }, [] )\n return {\n    isLoading,\n    setIsLoading,\n    personas,\n    setPersonas\n }\n}","import { cafeApi } from \"../api/cafeApi\"\nimport { Producto, FetchProductos, ProductoPlano } from \"../interfaces/fetchProductos\";\n\nconst token = localStorage.getItem('token') || '';\n\nexport const fetchproductos = async (): Promise<Producto[]> =>{\n    const resp= await  cafeApi.get<FetchProductos>('/productos');\n    resp.data.productos.map(ele=>{\n        return ele.idaux= ele._id;\n    })\n    return resp.data.productos;\n}\nexport const getFileProducto = (parametro:string):string=>{\n    return  `${cafeApi.defaults.baseURL?.substr(0, cafeApi.defaults.baseURL?.lastIndexOf(\"/\")) }/uploads/productos/${parametro}`;\n}\n\nexport const postFileProducto = async (idx:string, archivo:File ): Promise<Producto>=>{\n    let formData = new FormData();\n    formData.append(\"archivo\", archivo);\n\n    const resp =  await cafeApi.put(`/uploads/productos/${idx}`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n    })\n    return resp.data;\n}\nexport const postproducto= async (producto: ProductoPlano): Promise<Producto> =>{\n    let resp;\n    console.log(producto);\n    if (producto.id.length>0)\n    {\n         resp = await cafeApi.put<Producto>(`/productos/${producto.id}`, producto, { headers:{\n            'x-token':token\n        } } );\n    }\n    else\n    {\n         resp = await cafeApi.post<Producto>('/productos', producto, { headers:{\n            'x-token':token\n        } } );\n    }\n    return resp.data;\n}","import { useEffect, useState } from \"react\"\nimport { fetchproductos } from \"../helpers/serviceProductos\";\nimport { Producto } from \"../interfaces/fetchProductos\";\n\nexport const useProducto=()=>{\n const [isLoading, setIsLoading]=    useState(true);\n const [productos, setProductos] = useState<Producto[]>([]); \n useEffect(()=>{\n    fetchproductos().then(productos=>{\n        setIsLoading(false);\n        setProductos(productos);\n    });\n }, [] )\n return {\n    isLoading,\n    setIsLoading,\n    productos,\n    setProductos\n }\n}","import {  Drawer, Button, Form, Input, message } from \"antd\";\nimport { SaveOutlined } from '@ant-design/icons';\nimport { postpersona } from \"../helpers/servicePersonas\";\nimport { Persona } from \"../interfaces/fetchPersonas\";\n\ntype PersonaProps = {\n    persona: any,\n    setpersona: any,\n    personas?:Persona[],\n    setPersonas?:any,\n    formulario:any,\n    setformulario:any,\n    Forma:any,\n  }\n\nexport const ClienteComponente= ({ Forma, persona, setpersona, personas=[], setPersonas,formulario, setformulario }: PersonaProps)=>{\n\n\n\n\nconst onFinish = (values: {identificacion:string,nombre:string,direccion:string, telefono:string, correoelectronico:string }) => {\n    setpersona({\n        _id: persona._id,\n        identificacion:values.identificacion,\n        nombre: values.nombre,\n        direccion:values.direccion,\n        telefono: values.telefono,\n        correoelectronico:values.correoelectronico,\n      })\n      postpersona({...values  ,  _id: persona._id }).then(respuesta=>{\n        if (persona._id.length>0)\n        {\n          setPersonas( \n            personas.map(ele=>{ if (ele._id===persona._id)\n               return {...ele, identificacion:values.identificacion,\n                 nombre: values.nombre, direccion: values.direccion,\n                  telefono:values.telefono, correoelectronico:values.correoelectronico ,\n                  } ; else return ele;}) )\n        }\n        else\n        {\n          console.log(respuesta)\n          setPersonas([...personas, respuesta])\n          console.log(personas)\n        }\n        message.success(\"Se almacenó correctamente el producto\");\n        setformulario(false);\n      }).catch(error=>{\n        message.error(\"Se presentaron errores al intentar almacenar los productos\");\n      });\n}\n\nreturn (\n<Drawer\n          title=\"Crear/Modificar Cliente\"\n          width={720}\n          height={400}\n          onClose={()=>{ setformulario(false); }}\n          visible={formulario}\n          bodyStyle={{ paddingBottom: 120 }}\n          placement=\"bottom\"\n        >\n          <Form\n              form= {Forma}\n              name=\"formcategoria\"\n              labelCol={{ span: 4 }}\n              wrapperCol={{ span: 12 }}\n              initialValues={{ remember: true }}\n              onFinish={ onFinish }\n              onFinishFailed={()=>{}}\n              autoComplete=\"off\">\n                <Form.Item\n                  label=\"Identificación\"\n                  name=\"identificacion\"\n                  rules={[{ required: true, message: 'Por favor ingrese la identificación' }]}>\n                  <Input />\n                </Form.Item>\n                <Form.Item\n                  label=\"Descripción\"\n                  name=\"nombre\"\n                  rules={[{ required: true, message: 'Por favor ingrese la descripción' }]}>\n                  <Input />\n                </Form.Item>\n                \n                <Form.Item\n                  label=\"Dirección\"\n                  name=\"direccion\"\n                  >\n                  <Input />\n                </Form.Item>\n                <Form.Item\n                  label=\"Teléfono\"\n                  name=\"telefono\"\n                  >\n                  <Input />\n                  </Form.Item>\n                  <Form.Item\n                  label=\"Correo Electrónico\"\n                  name=\"correoelectronico\"\n                  >\n                  <Input />\n                </Form.Item>\n                \n                <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n                  <Button type=\"primary\" htmlType=\"submit\" icon={<SaveOutlined />}>\n                    Guardar\n                  </Button>\n                </Form.Item>\n              </Form>\n        </Drawer>\n)\n}","import { Table, Drawer, Button, Form, Input, message, Row, \n  Col, Divider, DatePicker, Select, Space, InputNumber, Spin  } from \"antd\";\nimport { SaveOutlined, PlusOutlined, EditOutlined, MinusCircleOutlined, CloudUploadOutlined, CloudDownloadOutlined } from '@ant-design/icons';\nimport { useState } from \"react\";\nimport { useMovimiento } from \"../hooks/useMovimiento\";\nimport { fetchDescargar, fetchelectronica, fetchUltimoMovimiento, postmovimiento } from \"../helpers/serviceMovimientos\";\nimport {  Movimiento } from \"../interfaces/fetchMovimientos\";\nimport { tableColumnTextFilterConfig } from \"../helpers/tableUtils\"\nimport { usePersona } from \"../hooks/usePersona\";\nimport { useProducto } from \"../hooks/useProducto\";\nimport { Persona } from \"../interfaces/fetchPersonas\";\nimport { Producto } from \"../interfaces/fetchProductos\";\nimport { Producto as Productom } from \"../interfaces/fetchMovimientos\";\nimport {Decimal} from \"decimal.js-light\";\n\nimport { PostProducto } from \"../interfaces/postMovimiento\";\nimport moment, { Moment } from \"moment\";\nimport { ClienteComponente } from \"../components/cliente\";\n\nconst { Option } = Select;\n\nexport const MovimientosPage= ()=>{\n\n    const crearMovimiento=()=>{\n      fetchUltimoMovimiento().then(respuesta=>{\n        Forma.setFieldsValue({\n          codigo:parseInt(respuesta.codigo)+1\n        });\n      })\n      setformulario(true);\n      setmovimiento({_id:\"\", fecha: new Date() , codigo:\"\", subtotal:0, iva:0, total:0, descuento:0});\n      Forma.setFieldsValue({\n        cliente: \"\",\n        subtotal: 0,\n        iva: 0,\n        descuento: 0,\n        total: 0,\n        fecha: moment(new Date() , \"YYYY-MM-DD\"),\n        productos: [{ item:\"\" , cantidad:1, precio:0 }]\n      })\n    }\n    const calcularTotal=(_:any ,values:{productos:PostProducto[]})=>{\n      const rowsCopy = [...values.productos ];\n      let totalAuxiliar=0;\n      values.productos.forEach((fieldGroup, index) => {\n        if (fieldGroup && fieldGroup.cantidad && fieldGroup.precio) {\n          fieldGroup.total = fieldGroup.cantidad * fieldGroup.precio;\n          totalAuxiliar+= fieldGroup.total;\n          rowsCopy.splice(index, 1, fieldGroup)\n          Forma.setFieldsValue({ productos: rowsCopy })\n        }\n      });\n      let auxiliar =  new Decimal(totalAuxiliar);\n      Forma.setFieldsValue(\n        { \n          subtotal: auxiliar,\n          iva:  auxiliar.mul(0.12),\n          total: auxiliar.mul(1.12),\n        });\n    }\n    const [Forma] = Form.useForm();\n    const [Formac] = Form.useForm();\n    const [persona, setpersona] = useState<Persona>({_id:'', identificacion:'', nombre:'', direccion:'', telefono:'', correoelectronico:''});\n    const [formularioc, setformularioc] = useState(false);\n    const [procesando, setprocesando] = useState(false);\n\n    const crearPersona=()=>{\n      setformularioc(true);\n      setpersona({_id:\"\",identificacion:\"\", nombre:\"\", direccion:\"\", telefono:\"\", correoelectronico:\"\"});\n      Formac.setFieldsValue({\n        identificacion: \"\",\n        nombre: \"\",\n        direccion: \"\",\n        telefono: \"\",\n        correoelectronico: \"\",\n        \n      })\n    }\n\n    const columns = [\n        {\n          title: 'Código',\n          dataIndex: 'codigo',\n          key: 'codigo',\n          width:150,\n          render: (text: string) => text,\n          ...tableColumnTextFilterConfig<Movimiento>(),\n          onFilter: (value: {}, record: Movimiento  ):boolean => {\n            return record.codigo.toLowerCase().includes(value.toString().toLowerCase())\n          },\n          sorter: (a:Movimiento, b:Movimiento) => a.codigo.length - b.codigo.length,\n        },\n        {\n            title:'Fecha',\n            dataIndex:'fecha',\n            key:'fecha',\n            width:200,\n            render: (valor: any) =>  (typeof(valor)===\"string\")?valor.substr(0,10) : moment(valor).format(\"YYYY-MM-DD\")  ,\n        },\n        {\n          title: 'Cliente',\n          dataIndex: ['cliente','nombre'],\n          key: 'cliente',\n        },\n        {\n          title: 'Acciones',\n          key: 'acciones',\n          width:200,\n          fixed:'right' as 'right',\n          render: ( record: Movimiento) => \n          <Space>\n          <Button type=\"primary\" shape=\"circle\" icon={ <EditOutlined/> } onClick=\n          { ()=>\n            \n            {\n              setformulario(true); \n              setmovimiento(record);\n              let auxiliar: PostProducto[]=[] ;\n              record.productos?.forEach(\n                elemento=>{\n                  auxiliar.push({ item:elemento.item._id,\n                     cantidad: elemento.cantidad, precio: elemento.precio, total: elemento.cantidad*elemento.precio })\n                }\n              )\n              Forma.setFieldsValue({\n                codigo: record.codigo,\n                cliente: record.cliente?._id,\n                subtotal: record.subtotal,\n                iva: record.iva,\n                descuento: record.descuento,\n                total: record.total,\n                fecha: moment(record.fecha, \"YYYY-MM-DD\"),\n                productos: auxiliar\n              })\n              \n            } \n          }/>\n          \n          <Button type=\"primary\" shape=\"circle\" icon={ <CloudUploadOutlined /> } onClick={()=>{\n            setprocesando(true);\n            fetchelectronica(record._id).then(resultado=>{\n              console.log(resultado.data[0]);\n              const mensajeActual= resultado.data[0].RespuestaRecepcionComprobante.comprobantes.comprobante.mensajes.mensaje.mensaje;\n              setprocesando(false);\n              message.success(`Se presentaron los siguientes mensajes: ${mensajeActual} `);\n            }).catch(err=>{\n              console.log(err)\n              setprocesando(false);\n              message.error(\"Se presentaron los siguientes mensajes\");\n            })\n          } }/>\n          <Button type=\"primary\" shape=\"circle\" icon={ <CloudDownloadOutlined /> } onClick={()=>{\n            fetchDescargar(record._id).then(resultado=>{\n              console.log(resultado)\n            })\n          }}/>\n\n          </Space>,\n        },\n      ];\n      const { movimientos, setMovimientos, isLoading } = useMovimiento();\n      const [movimiento, setmovimiento] = useState<Movimiento>({_id:'', fecha: new Date() , iva:0, descuento:0, subtotal:0, total:0, codigo:\"\",  });\n      const { personas, setPersonas } = usePersona();\n      const { productos } = useProducto();\n      const [formulario, setformulario] = useState(false);\n      const onFinish = (values: {codigo:string, fecha:Moment, subtotal:number, iva:number, descuento:number, cliente:string ,total:number, productos: PostProducto[]}) => {\n        setmovimiento({\n          _id: movimiento._id,\n          codigo: values.codigo,\n          fecha: new Date(values.fecha.toISOString().substr(0,10) ) ,\n          subtotal:values.subtotal,\n          iva:values.iva,\n          descuento:values.descuento,\n          total:values.total\n        })\n        let auxiliar:Productom[]=[];\n        values.productos.forEach(ele=>{\n          auxiliar.push(\n            { \n              cantidad: ele.cantidad, precio: ele.precio,\n               item:{ _id:ele.item , nombre:\"\", categoria:\"\", precio:0, estado:true }  ,\n               _id:\"\" \n            })\n        })\n\n\n        let clienteAuxiliar:Persona= personas.filter(p=>{return p._id===values.cliente})[0];\n\n        postmovimiento( movimiento._id, { codigo: values.codigo , fecha: values.fecha.toISOString().substr(0,10)  , cliente: values.cliente, productos: values.productos, subtotal: values.subtotal , iva: values.iva, descuento:values.descuento, total: values.total   } ).then(respuesta=>{\n          if (movimiento._id.length>0)\n            setMovimientos( movimientos.map(ele=>{ if (ele._id===movimiento._id)\n               return {\n                      ...ele, codigo: values.codigo,\n                      fecha: moment(values.fecha, \"YYYY-MM-DD\").toDate() ,\n                      cliente: { _id: clienteAuxiliar._id, nombre: clienteAuxiliar.nombre\n                      ,direccion: clienteAuxiliar.direccion, telefono:clienteAuxiliar.telefono\n                    , identificacion: clienteAuxiliar.identificacion, correoelectronico: clienteAuxiliar.correoelectronico,\n                     estado:true  }  ,\n                      descuento: values.descuento ,\n                      iva: values.iva, \n                      subtotal: values.subtotal, \n                      total: values.total ,\n                      productos: auxiliar,\n                      } ; else return ele;}) )\n          else\n            setMovimientos([...movimientos, {...respuesta, cliente:{ _id: clienteAuxiliar._id, nombre: clienteAuxiliar.nombre\n              ,direccion: clienteAuxiliar.direccion, telefono:clienteAuxiliar.telefono\n            , identificacion: clienteAuxiliar.identificacion, correoelectronico: clienteAuxiliar.correoelectronico,\n             estado:true  }}])\n          message.success(\"Se almacenó correctamente el movimiento\");\n          setformulario(false);\n        }).catch(error=>{\n          message.error(\"Se presentaron errores al intentar almacenar los movimientos\");\n        });\n      };\n    return (\n      <>\n        <Row gutter={12} >\n          <Col span={12} offset={12}>\n            <Button type=\"primary\" shape=\"circle\" icon={<PlusOutlined />} size={'large'} onClick={crearMovimiento} />\n          </Col>\n        </Row>\n        <Divider orientation=\"left\">Movimientos</Divider>\n        <Spin spinning={procesando} delay={500} size=\"large\" tip=\"Procesando...\">\n          <Row gutter= {[16, 24]}>\n          <Table tableLayout='fixed' \n            loading= {isLoading}\n            rowKey='_id'\n            key=\"_id\"\n            pagination={{ defaultPageSize: 5, showSizeChanger: true,\n              pageSizeOptions: ['5','10', '20', '30']}} \n            scroll={{ x: 1300 }}\n            dataSource={movimientos} columns={columns} />\n          </Row>\n        </Spin>\n        <Drawer\n          title=\"Movimiento\"\n          width={720}\n          height={600}\n          onClose={()=>{ setformulario(false); }}\n          visible={formulario}\n          bodyStyle={{ paddingBottom: 120 }}\n          placement=\"bottom\"\n        >\n          <Form\n              form= {Forma}\n              name=\"formmovimiento\"\n              //labelCol={{ span: 2 }}\n              //wrapperCol={{ span: 6 }}\n              initialValues={{ remember: true }}\n              onValuesChange={calcularTotal}\n              onFinish={ onFinish }\n              onFinishFailed={()=>{}}\n              autoComplete=\"off\">\n                <Form.Item\n                  label=\"Código\"\n                  name=\"codigo\"\n                  style={{ width: 300 }}\n                  rules={[{ required: true, message: 'Por favor ingrese el código' }]}>\n                  <Input />\n                </Form.Item>\n                <Form.Item label=\"Fecha\" name=\"fecha\">\n                  <DatePicker/>\n                </Form.Item>\n                <Form.Item\n                  label=\"Cliente\"\n                  name=\"cliente\">\n                  <Select\n                    showSearch\n                    style={{ width: 400 }}\n                    placeholder=\"Selecciona una persona\"\n                    optionFilterProp=\"children\"\n                    onChange={()=>{}}\n                    onSearch={()=>{}}\n                    filterOption={(input, option) =>\n                      option?.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                    }>\n                    {\n                      personas.map(({ _id, nombre }: Persona) =>{\n                        return (\n                          <Option key={_id} value={_id}>{nombre}</Option>\n                        )\n                      })\n                    }\n                  </Select>\n                  \n                </Form.Item>\n                <Form.Item>\n                <Button type=\"dashed\" onClick={() => {  crearPersona() } }  icon={<PlusOutlined />}>\n                      Agregar\n                </Button>\n                </Form.Item>\n                \n                <Form.List name=\"productos\">\n                {(fields, { add, remove }) => (\n                <>\n                  {fields.map(field => (\n                    <Space key={field.key} style={{ display: 'flex', marginBottom: 8 }}  align=\"baseline\">\n                    <Form.Item\n                      name={[field.name, 'item']}\n                      fieldKey={[field.fieldKey, 'item']}\n                      >\n                      <Select\n                        showSearch\n                        style={{ width: 400 }}\n                        placeholder=\"Seleccione producto\"\n                        optionFilterProp=\"children\"\n                        onChange={()=>{}}\n                        onSearch={()=>{}}\n                        filterOption={(input, option) =>\n                          option?.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                        }>\n                        {\n                          productos.map(({ _id, nombre }: Producto) =>{\n                            return (\n                              <Option key={_id} value={_id}>{nombre}</Option>\n                            )\n                          })\n                        }\n                      </Select>\n                    </Form.Item>\n                    <Form.Item\n                      {...field}\n                      name={[field.name, 'cantidad']}\n                      fieldKey={[field.fieldKey, 'cantidad']}\n                      rules={[{ required: true, message: 'Debe ubicar el cantidad' }]}>\n                      <InputNumber placeholder=\"Cantidad\"  />\n                    </Form.Item>\n                    <Form.Item\n                      {...field}\n                      name={[field.name, 'precio']}\n                      fieldKey={[field.fieldKey, 'precio']}\n                      rules={[{ required: true, message: 'Debe ubicar el precio' }]}>\n                      <InputNumber placeholder=\"Precio\"  />\n                    </Form.Item>\n                    <Form.Item\n                    noStyle\n                    {...field}\n                    name={[field.name, 'total']}\n                    fieldKey={[field.fieldKey, 'total']}\n                  >\n                    <Input disabled placeholder=\"Total\" />\n                    </Form.Item>\n                    <MinusCircleOutlined onClick={() => {remove(field.name);  } } />\n                    </Space>\n                    ))}\n                    <Form.Item>\n                    <Button type=\"dashed\" onClick={() => add()} block icon={<PlusOutlined />}>\n                      Agregar\n                    </Button>\n                  </Form.Item>\n                </>\n                )}\n                </Form.List>\n                <Form.Item\n                  label=\"Subtotal\"\n                  name=\"subtotal\"\n                  style={{ width: 300 }}\n                  >\n                  <Input />\n                </Form.Item>\n                <Form.Item\n                  label=\"Iva\"\n                  name=\"iva\"\n                  style={{ width: 300 }}\n                  >\n                  <Input />\n                </Form.Item>\n                <Form.Item\n                  label=\"Descuento\"\n                  name=\"descuento\"\n                  style={{ width: 300 }}\n                  >\n                  <Input />\n                </Form.Item>\n                <Form.Item\n                  label=\"Total\"\n                  name=\"total\"\n                  style={{ width: 300 }}\n                  >\n                  <Input />\n                </Form.Item>\n                <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n                  <Button type=\"primary\" htmlType=\"submit\" icon={<SaveOutlined />}>\n                    Guardar\n                  </Button>\n                </Form.Item>\n          </Form>\n        </Drawer>\n        <ClienteComponente Forma={Formac}\n        persona={ persona} setpersona= {setpersona}\n        personas= {personas} setPersonas={setPersonas}\n         formulario={formularioc} setformulario={setformularioc}\n         />\n      </>\n    )\n}","import { useEffect, useState } from \"react\"\nimport { fetchmovimientos } from \"../helpers/serviceMovimientos\";\nimport { Movimiento } from \"../interfaces/fetchMovimientos\";\n\nexport const useMovimiento=()=>{\n const [isLoading, setIsLoading]=    useState(true);\n const [movimientos, setMovimientos] = useState<Movimiento[]>([]); \n useEffect(()=>{\n    fetchmovimientos().then(movimientos=>{\n        setIsLoading(false);\n        setMovimientos(movimientos);\n    });\n }, [] )\n return {\n    isLoading,\n    setIsLoading,\n    movimientos,\n    setMovimientos\n }\n}","import { Table, Drawer, Button, Form, Input, message, Row, Col, Divider, \n  InputNumber, Select, Upload, Avatar, Image } from \"antd\";\nimport { SaveOutlined, PlusOutlined, EditOutlined, UploadOutlined } from '@ant-design/icons';\nimport { useState } from \"react\";\nimport { getFileProducto, postFileProducto, postproducto } from \"../helpers/serviceProductos\";\nimport { Producto } from \"../interfaces/fetchProductos\";\nimport { tableColumnTextFilterConfig } from \"../helpers/tableUtils\"\nimport { useProducto } from \"../hooks/useProducto\";\nimport { Categoria } from \"../interfaces/fetchCategorias\";\nimport { useCafe } from \"../hooks/useCafe\";\nconst { Option } = Select;\n\n\nexport const ProductosPage= ()=>{\n  \n  const cambiarFotoBefore=( archivo: File )=>{\n    setarchivo(archivo);\n  }\n\n    \n    const crearProducto=()=>{\n      setformulario(true);\n      setproducto({_id:\"\", nombre:\"\", precio:0, costo:0, minimo:0, categoria:{_id:\"\", nombre:\"\"}});\n      Forma.setFieldsValue({\n        nombre: \"\",\n        precio:0,\n        costo:0,\n        minimo:0,\n        categoria:\"\"\n      })\n\n      setProductos( \n        productos.map(ele=>{ \n          return {...ele,  idaux: ele._id,  } ;\n          }));\n      \n    }\n    const [Forma] = Form.useForm();\n\n    const columns = [\n        {\n          title:'Foto',\n          key:'foto',\n          render: (record: Producto)=>  \n          <>\n            <Avatar key={record._id} src={getFileProducto( record.img||\"\" )} />\n          </>\n        },\n        {\n          title: 'Nombre',\n          dataIndex: 'nombre',\n          key: 'nombre',\n          render: (text: string) => text,\n          ...tableColumnTextFilterConfig<Producto>(),\n          onFilter: (value: {}, record: Producto  ):boolean => {\n            return record.nombre.toLowerCase().includes(value.toString().toLowerCase())\n          },\n          sorter: (a:Producto, b:Producto) => a.nombre.length - b.nombre.length,\n        },\n        {\n            title: 'Categoria',\n            dataIndex: ['categoria','nombre'],\n            key: 'categoria',\n        },\n        {\n          title: 'Precio',\n          dataIndex: 'precio',\n          key: 'precio',\n        },\n        {\n          title: 'Acciones',\n          key: 'acciones',\n          width:200,\n          fixed:'right' as 'right',\n          render: ( record: Producto) => <Button type=\"primary\" shape=\"circle\" icon={ <EditOutlined/> } onClick=\n          { ()=>\n          \n            { \n              setformulario(true); \n              setproducto(record);\n              Forma.setFieldsValue({\n                nombre: record.nombre,\n                precio: record.precio,\n                costo: record.costo,\n                minimo: record.minimo,\n                categoria: record.categoria._id\n              })\n              \n            } \n          }/>,\n        },\n      ];\n      const { productos, setProductos, isLoading } = useProducto();\n      const { categorias } = useCafe();\n      const [archivo, setarchivo] = useState<File>();\n      const [producto, setproducto] = useState<Producto>({_id:'', nombre:'', precio:0, categoria:{_id:\"\", nombre:\"\"}});\n      const [formulario, setformulario] = useState(false);\n      let auxiliarProductos:Producto[]=[];\n      const onFinish = async (values: {nombre:string, precio:number,costo:number, minimo:number, categoria: string}) => {\n        setproducto({\n          _id: producto._id,\n          nombre: values.nombre,\n          precio:values.precio,\n          costo: values.costo,\n          minimo:values.minimo,\n          categoria:{_id: values.categoria , nombre:\"\"}\n        })\n        let nombreCategoria=\"\";\n        if (values.categoria && values.categoria.length>0 )\n        {\n          nombreCategoria= categorias.filter(ele=>{\n            return ele._id=== values.categoria;\n          })[0].nombre;\n        }\n        let respuesta = await postproducto({...values , categoria :values.categoria ,  id:producto._id });\n          if (producto._id.length>0)\n          {\n            auxiliarProductos=\n              productos.map(ele=>{ \n                if (ele._id===producto._id)\n                return {...ele, nombre: values.nombre, precio: values.precio, \n                  costo:values.costo, minimo:values.minimo , idaux:\"\", img: respuesta.img,\n                  categoria: {_id:values.categoria, nombre:nombreCategoria}  } ; \n                  else\n                return ele;});\n            \n            \n\n          }\n          else\n          {\n            auxiliarProductos=   [...productos, respuesta] ;\n          }\n          let respuestaConFoto= await postFileProducto(respuesta._id , archivo! );\n          \n           auxiliarProductos = auxiliarProductos.map(elex=>{\n             if ( elex._id===respuestaConFoto._id ) return { ...elex, img: respuestaConFoto.img  }\n             else return elex;\n           })\n\n          setProductos(auxiliarProductos);\n          message.success(\"Se almacenó correctamente el producto\");\n          setformulario(false);\n      };\n      \n      \n    return (\n      <>\n        <Row gutter={12} >\n          <Col span={12} offset={12}>\n            <Button type=\"primary\" shape=\"circle\" icon={<PlusOutlined />} size={'large'} onClick={crearProducto} />\n          </Col>\n        </Row>\n        <Divider orientation=\"left\">Productos</Divider>\n        <Row gutter= {[16, 24]}>\n        <Table tableLayout='fixed'\n           loading= {isLoading}\n           rowKey='_id'\n           key=\"_id\"\n           pagination={{ defaultPageSize: 5, showSizeChanger: true,\n           pageSizeOptions: ['5','10', '20', '30']}} \n           scroll={{ x: 1300 }}\n           dataSource={productos} columns={columns} />\n        </Row>\n        <Drawer\n          title=\"Items\"\n          width={720}\n          height={400}\n          onClose={()=>{ setformulario(false); }}\n          visible={formulario}\n          bodyStyle={{ paddingBottom: 120 }}\n          placement=\"bottom\"\n        >\n          <Form\n              form= {Forma}\n              name=\"formcategoria\"\n              labelCol={{ span: 4 }}\n              wrapperCol={{ span: 12 }}\n              initialValues={{ remember: true }}\n              onFinish={ onFinish }\n              onFinishFailed={()=>{}}\n              autoComplete=\"off\">\n                <Form.Item\n                  label=\"Descripción\"\n                  name=\"nombre\"\n                  rules={[{ required: true, message: 'Por favor ingrese la descripción' }]}>\n                  <Input />\n                </Form.Item>\n                <Form.Item label=\"Costo\" name=\"costo\">\n                    <InputNumber/>\n                </Form.Item>\n                <Form.Item label=\"Mínimo\" name=\"minimo\">\n                    <InputNumber />\n                </Form.Item>\n                <Form.Item label=\"Precio\" name=\"precio\">\n                    <InputNumber min=\"0.01\"/>\n                </Form.Item>\n                <Form.Item label=\"Categoria\" name=\"categoria\">\n                <Select\n                    showSearch\n                    style={{ width: 400 }}\n                    placeholder=\"Select a person\"\n                    optionFilterProp=\"children\"\n                    onChange={()=>{}}\n                    onSearch={()=>{}}\n                    filterOption={(input, option) =>\n                      option?.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                    }>\n                    {\n                      categorias.map(({ _id, nombre }: Categoria) =>{\n                        return (\n                          <Option key={_id} value={_id}>{nombre}</Option>\n                        )\n                      })\n                    }\n                  </Select>\n                  \n                  </Form.Item>\n                  <Form.Item label=\"Foto\" name=\"foto\">\n                    <Upload\n                      listType=\"picture\"\n                      maxCount={1}\n                      beforeUpload= {cambiarFotoBefore}\n                      >\n                      <Button icon={<UploadOutlined />}>Subir (Max: 1)</Button>\n                    </Upload>\n                  </Form.Item>\n                  {\n                    producto.img && \n                    <Form.Item>\n                      <Image\n                        width={200}\n                        src={  getFileProducto(producto.img)  }\n                      />\n                    </Form.Item>\n                  }\n                  \n                  <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n                  <Button type=\"primary\" htmlType=\"submit\" icon={<SaveOutlined />}>\n                    Guardar\n                  </Button>\n                </Form.Item>\n          </Form>\n        </Drawer>\n      </>\n    )\n}","import { Table, Button, Form, Row, Col, Divider } from \"antd\";\nimport {  PlusOutlined, EditOutlined } from '@ant-design/icons';\nimport { usePersona } from \"../hooks/usePersona\";\nimport { Persona } from \"../interfaces/fetchPersonas\";\nimport { tableColumnTextFilterConfig } from \"../helpers/tableUtils\";\nimport { useState } from \"react\";\nimport { ClienteComponente } from \"../components/cliente\";\n\n\nexport const ClientesPage= ( )=>{\n\n    const [Forma] = Form.useForm();\n\n    const crearPersona=()=>{\n        setformulario(true);\n        setpersona({_id:\"\",identificacion:\"\", nombre:\"\", direccion:\"\", telefono:\"\", correoelectronico:\"\"});\n        Forma.setFieldsValue({\n         \n          identificacion: \"\",\n          nombre: \"\",\n          direccion: \"\",\n          telefono: \"\",\n          correoelectronico: \"\",\n          \n        })\n      }\n\n    const columns = [\n        {\n          title: 'Nombre',\n          dataIndex: 'nombre',\n          key: 'nombre',\n          render: (text: string) => text,\n          ...tableColumnTextFilterConfig<Persona>(),\n          onFilter: (value: {}, record: Persona  ):boolean => {\n            return record.nombre.toLowerCase().includes(value.toString().toLowerCase())\n          },\n          sorter: (a:Persona, b:Persona) => a.nombre.length - b.nombre.length,\n        },\n        {\n          title: 'Usuario',\n          dataIndex: ['usuario','nombre'],\n          key: 'usuario',\n        },\n        {\n          title: 'Acciones',\n          key: 'acciones',\n          width:200,\n          fixed:'right' as 'right',\n          render: ( record: Persona) => <Button type=\"primary\" shape=\"circle\" icon={ <EditOutlined/> } onClick=\n          { ()=>\n          \n            { \n              setformulario(true); \n              setpersona(record);\n              Forma.setFieldsValue({\n                identificacion: record.identificacion,\n                nombre: record.nombre,\n                direccion: record.direccion,\n                telefono: record.telefono,\n                correoelectronico: record.correoelectronico,\n              })\n              \n            } \n          }/>,\n        },\n      ];\n\n    const {  isLoading,personas, setPersonas } = usePersona();\n    const [persona, setpersona] = useState<Persona>({_id:'', identificacion:'', nombre:'', direccion:'', telefono:'', correoelectronico:''});\n    const [formulario, setformulario] = useState(false);\n    \n    return (\n        <>\n        <Row gutter={12} >\n          <Col span={12} offset={12}>\n            <Button type=\"primary\" shape=\"circle\" icon={<PlusOutlined />} size={'large'} onClick={crearPersona} />\n          </Col>\n        </Row>\n        <Divider orientation=\"left\">Clientes</Divider>\n        <Row gutter= {[16, 24]}>\n        <Table tableLayout='fixed'\n           loading= {isLoading}\n           rowKey='_id'\n           pagination={{ defaultPageSize: 5, showSizeChanger: true,\n           pageSizeOptions: ['5','10', '20', '30']}} \n           scroll={{ x: 1300 }}\n           dataSource={personas} columns={columns} />\n        </Row>\n        <ClienteComponente Forma={Forma}\n        persona={ persona} setpersona= {setpersona}\n         personas = {personas} setPersonas={setPersonas} \n         formulario={formulario} setformulario={setformulario}\n         />\n        \n      </>\n    )\n}","import Icon from '@ant-design/icons';\n\nimport { Layout, Menu,  } from 'antd';\nimport {\n    BrowserRouter as Router,\n    Link\n  } from 'react-router-dom';\n\nimport {\n  TeamOutlined,\n  UserOutlined,\n  DollarOutlined,\n  SettingFilled,\n  //CloseCircleOutlined,\n  BarcodeOutlined,\n  ShoppingCartOutlined,\n} from '@ant-design/icons';\n\n\nimport {    ReactNode, SetStateAction, useContext, useEffect, useState } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom'\nimport { CategoriasPage } from '../pages/categoriasPage';\nimport { MovimientosPage } from '../pages/movimientosPage';\nimport { ProductosPage } from '../pages/productosPage';\nimport { ClientesPage } from '../pages/clientesPage';\nimport { AuthContext } from '../context/AuthContext';\n\n\nconst { Header, Content, Footer, Sider } = Layout;\nconst { SubMenu } = Menu;\n\n\nconst HeartSvg = () => (\n  <svg width=\"1em\" height=\"1em\" fill=\"currentColor\" viewBox=\"0 0 1024 1024\">\n    <path d=\"M923 283.6c-13.4-31.1-32.6-58.9-56.9-82.8-24.3-23.8-52.5-42.4-84-55.5-32.5-13.5-66.9-20.3-102.4-20.3-49.3 0-97.4 13.5-139.2 39-10 6.1-19.5 12.8-28.5 20.1-9-7.3-18.5-14-28.5-20.1-41.8-25.5-89.9-39-139.2-39-35.5 0-69.9 6.8-102.4 20.3-31.4 13-59.7 31.7-84 55.5-24.4 23.9-43.5 51.7-56.9 82.8-13.9 32.3-21 66.6-21 101.9 0 33.3 6.8 68 20.3 103.3 11.3 29.5 27.5 60.1 48.2 91 32.8 48.9 77.9 99.9 133.9 151.6 92.8 85.7 184.7 144.9 188.6 147.3l23.7 15.2c10.5 6.7 24 6.7 34.5 0l23.7-15.2c3.9-2.5 95.7-61.6 188.6-147.3 56-51.7 101.1-102.7 133.9-151.6 20.7-30.9 37-61.5 48.2-91 13.5-35.3 20.3-70 20.3-103.3 0.1-35.3-7-69.6-20.9-101.9z\" />\n  </svg>\n);\nconst HeartIcon = (props: ReactNode ) => <Icon component={HeartSvg} style={{ color: 'hotpink' }}   />;\n\nexport const AppRouter=()=>{\n  \n  const mostrarIcono=(icono:string):ReactNode=>{\n    switch (icono) {\n      case \"UserOutlined\":\n        return <UserOutlined/>    \n      case \"DollarOutlined\":\n        return <DollarOutlined/>\n      case \"BarcodeOutlined\":\n        return <BarcodeOutlined />\n      case \"ShoppingCartOutlined\":\n        return <ShoppingCartOutlined />\n      default:\n        return <TeamOutlined/>\n    }\n    \n  }\n  const { logout, auth } = useContext( AuthContext );\n  useEffect(()=>{\n    console.log(auth)\n }, [auth] )\n    const salirApp=()=>{\n      logout();\n    }\n    const [colapsado, setcolapsado] = useState(false);\n    const onCollapse = (collapsed:SetStateAction<boolean>) => {\n        setcolapsado(collapsed );\n      };\n    return (\n        <Router>\n        <Layout style={{ minHeight: '100vh' }}>\n          <Sider collapsible collapsed={colapsado} onCollapse={onCollapse}>\n            <div className=\"logo\" />\n            <Menu theme=\"dark\" defaultSelectedKeys={['1']} mode=\"inline\">\n            {\n            auth.opciones?.map((elemento)=>{\n              return (elemento.clave.split(\"_\").length===1) &&\n              <SubMenu key={elemento.clave} icon= { mostrarIcono(elemento.ruta) } title={elemento.titulo }>\n                {\n                  auth.opciones?.filter(elementod=>{\n                    return elementod.clave.startsWith(elemento.clave+'_');\n                  }).map(opcion=>{\n                    if (opcion.clave.split(\"_\").length===2) \n                    {\n                      if (opcion.ruta.includes(\"/\")) \n                      { \n                        return <Menu.Item key={opcion.clave}><Link to={opcion.ruta}>{opcion.titulo}</Link></Menu.Item>\n                      }\n                      else\n                      { \n                        return <SubMenu key={opcion.clave} icon= { mostrarIcono(opcion.ruta) } title={opcion.titulo }>\n                          {\n                          auth.opciones?.filter(elementoe=>{\n                            return elementoe.clave.startsWith(opcion.clave+'_');\n                          })\n                          .map(opcionx=>{\n                            return <Menu.Item key={opcionx.clave}><Link to={opcionx.ruta}>{opcionx.titulo}</Link></Menu.Item>\n                          })\n                          }\n                        </SubMenu>\n                      }\n                    }\n                    return <h1>ok</h1>\n                  })\n                }\n              </SubMenu>\n              \n            })\n            }\n            <SubMenu key=\"sub3\" icon={<SettingFilled />} title=\"Configurar\">\n              <Menu.Item key=\"11\" onClick={salirApp} icon={<HeartIcon   />} >Salir de la App </Menu.Item>\n            </SubMenu>\n          </Menu>\n          </Sider>\n          <Layout className=\"site-layout\">\n            <Header className=\"site-layout-background\" style={{ padding: 0 }} />\n            <Content style={{ margin: '16px 16px' }}>\n                <Switch>\n                    <Route exact path=\"/app/categorias\" component={CategoriasPage }/>\n                    <Route exact path=\"/app/productos\" component={ProductosPage }/>\n                    <Route exact path=\"/app/clientes\" component={ClientesPage }/>\n                    <Route exact path=\"/app/movimientos\" component={MovimientosPage }/>\n                    <Redirect to =\"/app/movimientos\"/>\n                </Switch>\n            </Content>\n            <Footer style={{ textAlign: 'center' }}>Software Manta ©2018 Created by ManTalents</Footer>\n          </Layout>\n        </Layout>\n        </Router>\n    )\n}","import {\n  Form,\n  Input,\n  Button,\n} from 'antd';\nconst formItemLayout = {\n    labelCol: {\n      xs: { span: 24 },\n      sm: { span: 8 },\n    },\n    wrapperCol: {\n      xs: { span: 24 },\n      sm: { span: 16 },\n    },\n  };\n  const tailFormItemLayout = {\n    wrapperCol: {\n      xs: {\n        span: 24,\n        offset: 0,\n      },\n      sm: {\n        span: 16,\n        offset: 8,\n      },\n    },\n  };\n\nexport const RegisterPage = ()=>{\n    const [form] = Form.useForm();\n\n    const onFinish = (values: any) => {\n        console.log('Received values of form: ', values);\n    };\n\n    return (\n        <Form\n          {...formItemLayout}\n          form={form}\n          name=\"register\"\n          onFinish={onFinish}\n          initialValues={{\n            residence: ['zhejiang', 'hangzhou', 'xihu'],\n            prefix: '86',\n          }}\n          scrollToFirstError\n        >\n          <Form.Item\n            name=\"email\"\n            label=\"E-mail\"\n            rules={[\n              {\n                type: 'email',\n                message: 'The input is not valid E-mail!',\n              },\n              {\n                required: true,\n                message: 'Please input your E-mail!',\n              },\n            ]}\n          >\n            <Input />\n          </Form.Item>\n    \n          <Form.Item\n            name=\"password\"\n            label=\"Password\"\n            rules={[\n              {\n                required: true,\n                message: 'Please input your password!',\n              },\n            ]}\n            hasFeedback\n          >\n            <Input.Password />\n          </Form.Item>\n    \n          <Form.Item\n            name=\"confirm\"\n            label=\"Confirm Password\"\n            dependencies={['password']}\n            hasFeedback\n            rules={[\n              {\n                required: true,\n                message: 'Please confirm your password!',\n              },\n              ({ getFieldValue }) => ({\n                validator(_, value) {\n                  if (!value || getFieldValue('password') === value) {\n                    return Promise.resolve();\n                  }\n                  return Promise.reject(new Error('The two passwords that you entered do not match!'));\n                },\n              }),\n            ]}\n          >\n            <Input.Password />\n          </Form.Item>\n    \n          <Form.Item\n            name=\"nickname\"\n            label=\"Nickname\"\n            tooltip=\"What do you want others to call you?\"\n            rules={[{ required: true, message: 'Please input your nickname!', whitespace: true }]}\n          >\n            <Input />\n          </Form.Item>\n          <Form.Item {...tailFormItemLayout}>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Register\n            </Button>\n          </Form.Item>\n        </Form>\n      );\n}","import { Redirect, Route, RouteProps } from 'react-router-dom'\n\ninterface PublicRouteProps extends RouteProps {\n    isAuthenticated: boolean;\n    component: any;\n}\n\n\nexport const PublicRoute = (props: PublicRouteProps) => {\n    const { component: Component, isAuthenticated, ...rest } = props;\n    return (\n        <Route { ...rest }\n            render={ (props) => (\n                ( !isAuthenticated )\n                    ? <Component { ...props } />\n                    : <Redirect to=\"/app\" />\n            )} \n        />\n    )\n}\n\n\n\n","import { Redirect, Route, RouteProps } from 'react-router-dom'\n\ninterface PrivateRouteProps extends RouteProps {\n    isAuthenticated: boolean;\n    component: any;\n}\n\n\nexport const PrivateRoute = (props: PrivateRouteProps) => {\n    const { component: Component, isAuthenticated, ...rest } = props;\n    return (\n        <Route { ...rest }\n            render={ (props) => (\n                ( isAuthenticated )\n                    ? <Component { ...props } />\n                    : <Redirect to=\"/auth\" />\n            )} \n        />\n    )\n}\n\n\n\n","import {  Switch, Redirect } from 'react-router-dom'\nimport { LoginPage } from '../pages/loginPage';\nimport { AppRouter } from './AppRouter';\nimport {\n    BrowserRouter as Router,\n  } from 'react-router-dom';\nimport { RegisterPage } from '../pages/registerPage';\nimport { PublicRoute } from './PublicRoute';\nimport { PrivateRoute } from './PrivateRoute';\nimport { useContext, useEffect } from 'react';\nimport { AuthContext } from '../context/AuthContext';\n\nexport const AuthRouter=()=>{\n    const { auth, verificaToken } = useContext( AuthContext );\n\n\n    useEffect( () => {\n        verificaToken();\n    },[verificaToken])\n\n    \n    return (\n        <Router>\n            <Switch>\n                <PrivateRoute isAuthenticated={auth.logged }  path=\"/app\" component={AppRouter }/ >\n                <PublicRoute isAuthenticated={auth.logged} exact path=\"/auth/login\" component={LoginPage }/>\n                <PublicRoute isAuthenticated={auth.logged} exact path=\"/auth/register\" component={RegisterPage }/>\n                <Redirect to =\"/auth/login\"/>\n            </Switch>\n        </Router>\n    )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { AuthProvider } from './context/AuthContext';\nimport './index.css';\nimport { AuthRouter } from './Routers/AuthRouter';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AuthProvider>\n    <AuthRouter />\n    </AuthProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}