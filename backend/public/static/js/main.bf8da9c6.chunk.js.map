{"version":3,"sources":["api/cafeApi.tsx","helpers/serviceLogin.tsx","context/AuthContext.tsx","pages/loginPage.tsx","helpers/serviceCategorias.tsx","hooks/useCafe.tsx","helpers/tableUtils.tsx","pages/categoriasPage.tsx","helpers/serviceMovimientos.tsx","helpers/servicePersonas.tsx","hooks/usePersona.tsx","helpers/serviceProductos.tsx","hooks/useProducto.tsx","components/cliente.tsx","pages/movimientosPage.tsx","hooks/useMovimiento.tsx","pages/productosPage.tsx","pages/clientesPage.tsx","helpers/servicePacientes.tsx","hooks/usePaciente.tsx","components/consulta.tsx","pages/pacientesPage.tsx","pages/homePage.tsx","helpers/calendarMessagesEs.tsx","components/calendarEvent.tsx","helpers/serviceCitasprevias.tsx","pages/calendarioPage.tsx","hooks/useCitaprevia.tsx","Routers/AppRouter.tsx","pages/registerPage.tsx","Routers/PublicRoute.tsx","Routers/PrivateRoute.tsx","Routers/AuthRouter.tsx","index.tsx"],"names":["cafeApi","axios","create","baseURL","postlogin","usuario","clave","a","post","correo","password","resp","data","renovartoken","token","localStorage","getItem","get","headers","AuthContext","createContext","auth","uid","checking","logged","name","email","opciones","_id","ruta","titulo","login","verificaToken","logout","initialState","AuthProvider","children","useState","setAuth","setItem","nombre","useCallback","undefined","Provider","value","removeItem","LoginPage","useContext","onFinish","values","username","ok","console","log","labelCol","span","wrapperCol","initialValues","remember","onFinishFailed","errorInfo","autoComplete","Item","label","rules","required","message","Password","valuePropName","offset","type","htmlType","fetchcategorias","categorias","postcategoria","categoria","length","put","useCafe","isLoading","setIsLoading","setCategorias","useEffect","then","tableColumnTextFilterConfig","searchInputHolder","current","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","style","padding","ref","node","placeholder","onChange","e","target","onPressEnter","width","marginBottom","display","onClick","icon","SearchOutlined","size","marginRight","filterIcon","filtered","color","onFilterDropdownVisibleChange","visible","setTimeout","select","CategoriasPage","Form","useForm","Forma","columns","title","dataIndex","key","render","text","onFilter","record","toLowerCase","includes","toString","sorter","b","fixed","shape","EditOutlined","setformulario","setcategoria","setFieldsValue","formulario","gutter","PlusOutlined","orientation","tableLayout","loading","rowKey","pagination","defaultPageSize","showSizeChanger","pageSizeOptions","scroll","x","dataSource","height","onClose","bodyStyle","paddingBottom","placement","form","respuesta","map","ele","success","catch","error","SaveOutlined","fetchmovimientos","movimientos","fetchUltimoMovimiento","fetchelectronica","idx","fetchDescargar","responseType","window","open","URL","createObjectURL","postmovimiento","movimiento","fetchpersonas","personas","postpersona","persona","usePersona","setPersonas","fetchproductos","productos","idaux","getFileProducto","parametro","defaults","substr","lastIndexOf","postFileProducto","archivo","formData","FormData","append","postproducto","producto","id","useProducto","setProductos","ClienteComponente","setpersona","identificacion","direccion","telefono","correoelectronico","Option","Select","MovimientosPage","Formac","formularioc","setformularioc","procesando","setprocesando","codigo","valor","moment","format","setmovimiento","auxiliar","forEach","elemento","push","item","cantidad","precio","total","cliente","subtotal","iva","descuento","fecha","CloudUploadOutlined","resultado","mensajeActual","RespuestaRecepcionComprobante","comprobantes","comprobante","mensajes","mensaje","RespuestaAutorizacionComprobante","autorizaciones","autorizacion","numeroAutorizacion","err","CloudDownloadOutlined","setMovimientos","useMovimiento","Date","parseInt","spinning","delay","tip","onValuesChange","_","rowsCopy","totalAuxiliar","fieldGroup","index","splice","Decimal","mul","toISOString","estado","clienteAuxiliar","filter","p","toDate","showSearch","optionFilterProp","onSearch","filterOption","input","option","indexOf","List","fields","add","remove","field","align","fieldKey","noStyle","disabled","MinusCircleOutlined","block","ProductosPage","src","img","setproducto","costo","minimo","setarchivo","auxiliarProductos","nombreCategoria","respuestaConFoto","elex","min","listType","maxCount","beforeUpload","UploadOutlined","ClientesPage","fetchpacientes","pacientes","fetchPacienteCita","idcitax","basej","replace","postpaciente","paciente","getFilePaciente","getFileCita","postFilePaciente","postFileCita","postcita","cita","idpacientex","usePaciente","setPacientes","citas","setCitas","TextArea","Input","ConsultaComponente","citaactual","setcita","FormaCita","onFinishCita","cambiarAdjuntoBefore","xs","sm","md","lg","xl","showTime","showUploadList","href","PacientesPage","adjunto","setadjunto","rut","fechanacimiento","alergia","sexo","nacionalidad","previsionsalud","otrosdatos","estadocivil","setpaciente","anamnesis","diagnostico","estatura","fechaproximaatencion","imc","medicamento","peso","presionalterial","pulso","temperatura","tratamiento","hemo","motivo","saturacion","setcitaactual","idcita","setidcita","citax","respuestaConAdjunto","eled","pacientex","columnsc","resetFields","DownloadOutlined","edad","year","lineHeight","textAlign","textTransform","edadActual","getFullYear","ChartJS","register","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","options","responsive","plugins","legend","position","labels","datasets","backgroundColor","HomePage","messages","allDay","previous","next","today","month","week","day","agenda","date","time","event","noEventsInRange","showMore","CalendarEvent","fetchcitasprevias","citasprevias","postcitaprevia","citaprevia","localizer","momentLocalizer","locale","vistaActual","toUpperCase","Views","WEEK","MONTH","AGENDA","WORK_WEEK","DAY","CalendarioPage","FormaCitaf","citav","setcitav","citav2","setcitav2","setCitasprevias","useCitaprevia","cita2","desde","hasta","setCitaprevia","eventlist","seteventlist","auxeventos","start","end","bgcolor","lastview","setlastview","onFinishConsulta","citap","getFieldValue","className","events","startAccessor","endAccessor","eventPropGetter","isSelected","borderRadius","opacity","onDoubleClickEvent","onSelectEvent","find","onView","view","components","clone","hidden","SolutionOutlined","Header","Layout","Content","Footer","Sider","SubMenu","Menu","HeartSvg","fill","viewBox","d","HeartIcon","props","Icon","component","AppRouter","mostrarIcono","icono","UserOutlined","DollarOutlined","BarcodeOutlined","ShoppingCartOutlined","MedicineBoxOutlined","HomeOutlined","TeamOutlined","colapsado","setcolapsado","minHeight","collapsible","collapsed","onCollapse","theme","defaultSelectedKeys","mode","split","elementod","startsWith","opcion","to","elementoe","opcionx","SettingFilled","margin","exact","path","formItemLayout","tailFormItemLayout","RegisterPage","residence","prefix","scrollToFirstError","hasFeedback","dependencies","validator","Promise","reject","Error","resolve","tooltip","whitespace","PublicRoute","Component","isAuthenticated","rest","PrivateRoute","AuthRouter","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bf8da9c6.chunk.js","sourcesContent":["import axios from 'axios'\n\n\nexport const cafeApi = axios.create(\n    {\n        //baseURL: 'http://192.168.100.24:8080/api'\n        //baseURL: 'https://jomilimon.herokuapp.com/api'\n        //baseURL: 'http://localhost:80/api'\n        baseURL: 'http://167.71.26.102:80/api'\n    }\n)","import { cafeApi } from \"../api/cafeApi\"\nimport { PostLogin } from \"../interfaces/postLogin\";\n\n\n\nexport const postlogin= async (usuario: string, clave:string): Promise<PostLogin> =>{\n    let resp;\n    resp = await cafeApi.post<PostLogin>(`/auth/login`, { correo:usuario, password:clave } );\n    return resp.data;\n}\nexport const renovartoken = async ():Promise<PostLogin>=>{\n    const token = localStorage.getItem('token') || '';\n    let resp;\n    resp = await cafeApi.get<PostLogin>(`/auth`, { headers:{\n        'x-token':token\n    } } );\n    return resp.data;\n}","import React, { createContext, useCallback, useState } from 'react';\nimport { postlogin, renovartoken } from '../helpers/serviceLogin';\n\n\ntype TipoMetodo = (email: string, password:string) => Promise<boolean>;\ntype TipoMetodo2 = () => Promise<boolean>;\ntype TipoMetodo3 = () => boolean;\n\ninterface auth{  \n        uid?:string,\n        checking:boolean,\n        logged:boolean,\n        name?:string,\n        email?:string,\n        opciones?:\n            {\n                _id: string,\n                clave:string,\n                ruta:string,\n                titulo:string,\n            }[]\n        \n}\n\ninterface respuesta{\n    auth:auth,\n    login: TipoMetodo,\n    verificaToken: TipoMetodo2,\n    logout: TipoMetodo3\n}\n\nexport const AuthContext = createContext<respuesta>({auth: {uid: '',\nchecking: true,\nlogged: true,\nname: '',\nemail: '',\nopciones:[{_id:'',clave:'', ruta:'', titulo:''}]\n} \n, login: async (email:string, password:string)=>{return false;},\nverificaToken:  async () => {return false;}   ,\nlogout: ()=> {return true;} });\n\nconst initialState = {\n    uid: '',\n    checking: true,\n    logged: false,\n    name: '',\n    email: '',\n    opciones: [{_id:'',clave:'', ruta:'', titulo:''}]\n};\n\n\nexport const AuthProvider: React.FC = ({ children }) => {\n\n    const [ auth, setAuth ] = useState<auth>(initialState)\n\n    const login = async( email:string, password :string) => {\n        const resp = await postlogin(email, password );\n        if ( resp.usuario ) {\n            localStorage.setItem('token', resp.token );\n            const { usuario } = resp;\n            setAuth({\n                uid: usuario.uid ,\n                checking: false,\n                logged: true,\n                name: usuario.nombre,\n                email: usuario.correo,\n                opciones: usuario.opciones,\n            });\n\n        }\n\n        return true;\n\n    }\n    const verificaToken = useCallback( async() => {\n\n        const token = localStorage.getItem('token');\n        // Si token no existe\n        if ( !token ) {\n            setAuth({\n                uid: undefined,\n                checking: false,\n                logged: false,\n                name: undefined,\n                email: undefined,\n                opciones:[]\n            })\n\n            return false;\n        }\n\n        const resp = await renovartoken();\n        if ( resp ) {\n            localStorage.setItem('token', resp.token );\n            const { usuario } = resp;\n\n            setAuth({\n                uid: usuario.uid,\n                checking: false,\n                logged: true,\n                name: usuario.nombre,\n                email: usuario.correo,\n                opciones: usuario.opciones\n            });\n\n            return true;\n        } else {\n            setAuth({\n                uid: undefined,\n                checking: false,\n                logged: false,\n                name: undefined,\n                email: undefined,\n            });\n\n            return false;\n        }\n\n    }, [])\n\n    const logout = () => {\n        localStorage.removeItem('token');\n        setAuth({\n            checking: false,\n            logged: false,\n        });\n        return true;\n    }\n\n\n    \n\n\n    return (\n        <AuthContext.Provider value ={{\n            auth,\n            login,\n            verificaToken,\n            logout\n        }}>\n            { children }\n        </AuthContext.Provider>\n    )\n}\n\n","import { Form, Input, Button, Checkbox } from 'antd';\nimport { useContext } from 'react';\nimport { AuthContext } from '../context/AuthContext';\n\n\nexport const LoginPage = ()=>{\n  const { login } = useContext( AuthContext );\n    const onFinish = async (values: any) =>  {\n      const ok = await login( values.username, values.password );\n      console.log(ok)\n    };\n    \n      const onFinishFailed = (errorInfo: any) => {\n        console.log('Failed:', errorInfo);\n      };\n    return (\n        <Form\n      name=\"basic\"\n      \n      labelCol={{ span:6 }}\n      wrapperCol={{ span: 8 }}\n      initialValues={{ remember: true }}\n      onFinish={onFinish}\n      onFinishFailed={onFinishFailed}\n      autoComplete=\"off\"\n    >\n      <Form.Item\n        label=\"Username\"\n        name=\"username\"\n        rules={[{ required: true, message: 'Please input your username!' }]}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item\n        label=\"Password\"\n        name=\"password\"\n        rules={[{ required: true, message: 'Please input your password!' }]}\n      >\n        <Input.Password />\n      </Form.Item>\n\n      <Form.Item name=\"remember\" valuePropName=\"checked\" wrapperCol={{ offset: 8, span: 16 }}>\n        <Checkbox>Remember me</Checkbox>\n      </Form.Item>\n\n      <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Submit\n        </Button>\n      </Form.Item>\n    </Form>\n    )\n\n}","import { cafeApi } from \"../api/cafeApi\"\nimport { Categoria, FetchCategorias } from \"../interfaces/fetchCategorias\";\n\n\nexport const fetchcategorias = async (): Promise<Categoria[]> =>{\n    const resp= await  cafeApi.get<FetchCategorias>('/categorias');\n    return resp.data.categorias;\n}\nexport const postcategoria= async (categoria: Categoria): Promise<Categoria> =>{\n    const token = localStorage.getItem('token') || '';\n    let resp;\n    if (categoria._id.length>0)\n    {\n         resp = await cafeApi.put<Categoria>(`/categorias/${categoria._id}`, categoria, { headers:{\n            'x-token':token\n        } } );\n    }\n    else\n    {\n         resp = await cafeApi.post<Categoria>('/categorias', categoria, { headers:{\n            'x-token':token\n        } } );\n    }\n    return resp.data;\n}","import { useEffect, useState } from \"react\"\nimport { fetchcategorias } from \"../helpers/serviceCategorias\";\nimport { Categoria } from \"../interfaces/fetchCategorias\";\n\nexport const useCafe=()=>{\n const [isLoading, setIsLoading]=    useState(true);\n const [categorias, setCategorias] = useState<Categoria[]>([]); \n useEffect(()=>{\n    fetchcategorias().then(categorias=>{\n        setIsLoading(false);\n        setCategorias(categorias);\n    });\n }, [] )\n return {\n    isLoading,\n    setIsLoading,\n    categorias,\n    setCategorias\n }\n}","import {SearchOutlined} from '@ant-design/icons';\nimport {Button, Input} from 'antd';\nimport {ColumnType} from 'antd/lib/table';\n\nexport function tableColumnTextFilterConfig<T>(): ColumnType<T> {\n  const searchInputHolder: { current: Input | null } = {current: null};\n\n  return {\n    filterDropdown: ({setSelectedKeys, selectedKeys, confirm, clearFilters}) => {\n      return <div style={{padding: 8}}>\n        <Input\n          ref={node => searchInputHolder.current = node}\n          placeholder={'Search'}\n          value={selectedKeys[0]}\n          onChange={(e) => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n          onPressEnter={()=>confirm}\n          style={{width: 188, marginBottom: 8, display: 'block'}}\n        />\n        <Button\n          type=\"primary\"\n          onClick={()=>confirm()}\n          icon={<SearchOutlined/>}\n          size=\"small\"\n          style={{width: 90, marginRight: 8}}>\n          Buscar\n        </Button>\n        <Button size=\"small\" style={{width: 90}} onClick={clearFilters}>\n          Resetear\n        </Button>\n      </div>\n    },\n    filterIcon: filtered => <SearchOutlined style={{color: filtered ? '#1890ff' : undefined}}/>,\n    onFilterDropdownVisibleChange: (visible) => {\n      if (visible) {\n        setTimeout(() => searchInputHolder.current?.select());\n      }\n    },\n  }\n}","import { Table, Drawer, Button, Form, Input, message, Row, Col, Divider } from \"antd\";\nimport { SaveOutlined, PlusOutlined, EditOutlined } from '@ant-design/icons';\nimport { useState } from \"react\";\nimport { useCafe } from \"../hooks/useCafe\";\nimport { postcategoria } from \"../helpers/serviceCategorias\";\nimport { Categoria } from \"../interfaces/fetchCategorias\";\nimport { tableColumnTextFilterConfig } from \"../helpers/tableUtils\"\n\n\nexport const CategoriasPage= ()=>{\n    const crearCategoria=()=>{\n      setformulario(true);\n      setcategoria({_id:\"\", nombre:\"\"});\n      Forma.setFieldsValue({\n        nombre: \"\"\n      })\n    }\n    const [Forma] = Form.useForm();\n\n    const columns = [\n        {\n          title: 'Nombre',\n          dataIndex: 'nombre',\n          key: 'nombre',\n          render: (text: string) => text,\n          ...tableColumnTextFilterConfig<Categoria>(),\n          onFilter: (value: {}, record: Categoria  ):boolean => {\n            return record.nombre.toLowerCase().includes(value.toString().toLowerCase())\n          },\n          sorter: (a:Categoria, b:Categoria) => a.nombre.length - b.nombre.length,\n        },\n        {\n          title: 'Usuario',\n          dataIndex: ['usuario','nombre'],\n          key: 'usuario',\n        },\n        {\n          title: 'Acciones',\n          key: 'acciones',\n          width:200,\n          fixed:'right' as 'right',\n          render: ( record: Categoria) => <Button type=\"primary\" shape=\"circle\" icon={ <EditOutlined/> } onClick=\n          { ()=>\n          \n            { \n              setformulario(true); \n              setcategoria(record);\n              Forma.setFieldsValue({\n                nombre: record.nombre\n              })\n              \n            } \n          }/>,\n        },\n      ];\n      const { categorias, setCategorias, isLoading } = useCafe();\n      const [categoria, setcategoria] = useState<Categoria>({_id:'', nombre:''});\n      const [formulario, setformulario] = useState(false);\n      const onFinish = (values: {nombre:string}) => {\n        setcategoria({\n          _id: categoria._id,\n          nombre: values.nombre\n        })\n        postcategoria({...values, _id:categoria._id }).then(respuesta=>{\n          if (categoria._id.length>0)\n            setCategorias( categorias.map(ele=>{ if (ele._id===categoria._id) return {...ele, nombre: values.nombre  } ; else return ele;}) )\n          else\n            setCategorias([...categorias, respuesta])\n          message.success(\"Se almacenó correctamente la categoría\");\n          setformulario(false);\n        }).catch(error=>{\n          message.error(\"Se presentaron errores al intentar almacenar las categorias\");\n        });\n      };\n    return (\n      <>\n        <Row gutter={12} >\n          <Col span={12} offset={12}>\n            <Button type=\"primary\" shape=\"circle\" icon={<PlusOutlined />} size={'large'} onClick={crearCategoria} />\n          </Col>\n        </Row>\n        <Divider orientation=\"left\">Categorias/Grupos</Divider>\n        <Row gutter= {[16, 24]}>\n        <Table tableLayout='fixed'\n           loading= {isLoading}\n           rowKey='_id'\n           pagination={{ defaultPageSize: 5, showSizeChanger: true,\n           pageSizeOptions: ['5','10', '20', '30']}} \n           scroll={{ x: 1300 }}\n           dataSource={categorias} columns={columns} />\n        </Row>\n        <Drawer\n          title=\"Categoría\"\n          width={720}\n          height={300}\n          onClose={()=>{ setformulario(false); }}\n          visible={formulario}\n          bodyStyle={{ paddingBottom: 120 }}\n          placement=\"bottom\"\n        >\n          <Form\n              form= {Forma}\n              name=\"formcategoria\"\n              labelCol={{ span: 4 }}\n              wrapperCol={{ span: 12 }}\n              initialValues={{ remember: true }}\n              onFinish={ onFinish }\n              onFinishFailed={()=>{}}\n              autoComplete=\"off\">\n                <Form.Item\n                  label=\"Descripción\"\n                  name=\"nombre\"\n                  rules={[{ required: true, message: 'Por favor ingrese la descripción' }]}>\n                  <Input />\n                </Form.Item>\n                <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n                  <Button type=\"primary\" htmlType=\"submit\" icon={<SaveOutlined />}>\n                    Guardar\n                  </Button>\n                </Form.Item>\n              </Form>\n        </Drawer>\n      </>\n    )\n}","import { cafeApi } from \"../api/cafeApi\"\nimport { Movimiento, FetchMovimientos } from \"../interfaces/fetchMovimientos\";\nimport { PostMovimiento } from \"../interfaces/postMovimiento\";\n\n\n\nexport const fetchmovimientos = async (): Promise<Movimiento[]> =>{\n    const resp= await  cafeApi.get<FetchMovimientos>('/movimientos');\n    return resp.data.movimientos;\n}\nexport const fetchUltimoMovimiento= async(): Promise<Movimiento>=>{\n    const resp= await cafeApi.get<Movimiento>('movimientos/ultimo');\n    return resp.data;\n}\n\nexport const fetchelectronica=async (idx:string): Promise<any>=>{\n    const resp = await cafeApi.get<any>(`/movimientos/electronica/${idx}`);\n    return resp;\n}\nexport const fetchDescargar=async (idx:string) : Promise<any> =>{\n    const resp =  await cafeApi.get<any>(`/uploads/facturas/${idx}`, {responseType:'blob'});\n    //console.log(resp)\n    window.open(URL.createObjectURL(resp.data));\n\n}\nexport const postmovimiento= async (idx: string, movimiento: PostMovimiento): Promise<Movimiento> =>{\n    const token = localStorage.getItem('token') || '';\n    let resp;\n    if (idx.length>0)\n    {\n         resp = await cafeApi.put<Movimiento>(`/movimientos/${idx}`, movimiento, { headers:{\n            'x-token':token\n        } } );\n    }\n    else\n    {\n         resp = await cafeApi.post<Movimiento>('/movimientos', movimiento, { headers:{\n            'x-token':token\n        } } );\n    }\n    return resp.data;\n}","import { cafeApi } from \"../api/cafeApi\"\nimport { Persona, FetchPersonas } from \"../interfaces/fetchPersonas\";\n\n\nexport const fetchpersonas = async (): Promise<Persona[]> =>{\n    const resp= await  cafeApi.get<FetchPersonas>('/personas');\n    return resp.data.personas;\n}\nexport const postpersona= async (persona: Persona): Promise<Persona> =>{\n    const token = localStorage.getItem('token') || '';\n    let resp;\n    if (persona._id.length>0)\n    {\n         resp = await cafeApi.put<Persona>(`/personas/${persona._id}`, persona, { headers:{\n            'x-token':token\n        } } );\n    }\n    else\n    {\n         resp = await cafeApi.post<Persona>('/personas', persona, { headers:{\n            'x-token':token\n        } } );\n    }\n    return resp.data;\n}","import { useEffect, useState } from \"react\"\nimport { fetchpersonas } from \"../helpers/servicePersonas\";\nimport { Persona } from \"../interfaces/fetchPersonas\";\n\nexport const usePersona=()=>{\n const [isLoading, setIsLoading]=    useState(true);\n const [personas, setPersonas] = useState<Persona[]>([]); \n useEffect(()=>{\n    fetchpersonas().then(personas=>{\n        setIsLoading(false);\n        setPersonas(personas);\n    });\n }, [] )\n return {\n    isLoading,\n    setIsLoading,\n    personas,\n    setPersonas\n }\n}","import { cafeApi } from \"../api/cafeApi\"\nimport { Producto, FetchProductos, ProductoPlano } from \"../interfaces/fetchProductos\";\n\n\n\nexport const fetchproductos = async (): Promise<Producto[]> =>{\n    const resp= await  cafeApi.get<FetchProductos>('/productos');\n    resp.data.productos.map(ele=>{\n        return ele.idaux= ele._id;\n    })\n    return resp.data.productos;\n}\nexport const getFileProducto = (parametro:string):string=>{\n    return  `${cafeApi.defaults.baseURL?.substr(0, cafeApi.defaults.baseURL?.lastIndexOf(\"/\")) }/uploads/productos/${parametro}`;\n}\n\nexport const postFileProducto = async (idx:string, archivo:File ): Promise<Producto>=>{\n    let formData = new FormData();\n    formData.append(\"archivo\", archivo);\n    const resp =  await cafeApi.put(`/uploads/productos/${idx}`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n    })\n    return resp.data;\n}\nexport const postproducto= async (producto: ProductoPlano): Promise<Producto> =>{\n    const token = localStorage.getItem('token') || '';\n    let resp;\n    console.log(producto);\n    if (producto.id.length>0)\n    {\n         resp = await cafeApi.put<Producto>(`/productos/${producto.id}`, producto, { headers:{\n            'x-token':token\n        } } );\n    }\n    else\n    {\n         resp = await cafeApi.post<Producto>('/productos', producto, { headers:{\n            'x-token':token\n        } } );\n    }\n    return resp.data;\n}","import { useEffect, useState } from \"react\"\nimport { fetchproductos } from \"../helpers/serviceProductos\";\nimport { Producto } from \"../interfaces/fetchProductos\";\n\nexport const useProducto=()=>{\n const [isLoading, setIsLoading]=    useState(true);\n const [productos, setProductos] = useState<Producto[]>([]); \n useEffect(()=>{\n    fetchproductos().then(productos=>{\n        setIsLoading(false);\n        setProductos(productos);\n    });\n }, [] )\n return {\n    isLoading,\n    setIsLoading,\n    productos,\n    setProductos\n }\n}","import {  Drawer, Button, Form, Input, message } from \"antd\";\nimport { SaveOutlined } from '@ant-design/icons';\nimport { postpersona } from \"../helpers/servicePersonas\";\nimport { Persona } from \"../interfaces/fetchPersonas\";\n\ntype PersonaProps = {\n    persona: any,\n    setpersona: any,\n    personas?:Persona[],\n    setPersonas?:any,\n    formulario:any,\n    setformulario:any,\n    Forma:any,\n  }\n\nexport const ClienteComponente= ({ Forma, persona, setpersona, personas=[], setPersonas,formulario, setformulario }: PersonaProps)=>{\n\n\n\n\nconst onFinish = (values: {identificacion:string,nombre:string,direccion:string, telefono:string, correoelectronico:string }) => {\n    setpersona({\n        _id: persona._id,\n        identificacion:values.identificacion,\n        nombre: values.nombre,\n        direccion:values.direccion,\n        telefono: values.telefono,\n        correoelectronico:values.correoelectronico,\n      })\n      postpersona({...values  ,  _id: persona._id }).then(respuesta=>{\n        if (persona._id.length>0)\n        {\n          setPersonas( \n            personas.map(ele=>{ if (ele._id===persona._id)\n               return {...ele, identificacion:values.identificacion,\n                 nombre: values.nombre, direccion: values.direccion,\n                  telefono:values.telefono, correoelectronico:values.correoelectronico ,\n                  } ; else return ele;}) )\n        }\n        else\n        {\n          console.log(respuesta)\n          setPersonas([...personas, respuesta])\n          console.log(personas)\n        }\n        message.success(\"Se almacenó correctamente el producto\");\n        setformulario(false);\n      }).catch(error=>{\n        message.error(\"Se presentaron errores al intentar almacenar los productos\");\n      });\n}\n\nreturn (\n<Drawer\n          title=\"Crear/Modificar Cliente\"\n          width={720}\n          height={400}\n          onClose={()=>{ setformulario(false); }}\n          visible={formulario}\n          bodyStyle={{ paddingBottom: 120 }}\n          placement=\"bottom\"\n        >\n          <Form\n              form= {Forma}\n              name=\"formcategoria\"\n              labelCol={{ span: 4 }}\n              wrapperCol={{ span: 12 }}\n              initialValues={{ remember: true }}\n              onFinish={ onFinish }\n              onFinishFailed={()=>{}}\n              autoComplete=\"off\">\n                <Form.Item\n                  label=\"Identificación\"\n                  name=\"identificacion\"\n                  rules={[{ required: true, message: 'Por favor ingrese la identificación' }]}>\n                  <Input />\n                </Form.Item>\n                <Form.Item\n                  label=\"Descripción\"\n                  name=\"nombre\"\n                  rules={[{ required: true, message: 'Por favor ingrese la descripción' }]}>\n                  <Input />\n                </Form.Item>\n                \n                <Form.Item\n                  label=\"Dirección\"\n                  name=\"direccion\"\n                  >\n                  <Input />\n                </Form.Item>\n                <Form.Item\n                  label=\"Teléfono\"\n                  name=\"telefono\"\n                  >\n                  <Input />\n                  </Form.Item>\n                  <Form.Item\n                  label=\"Correo Electrónico\"\n                  name=\"correoelectronico\"\n                  >\n                  <Input />\n                </Form.Item>\n                \n                <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n                  <Button type=\"primary\" htmlType=\"submit\" icon={<SaveOutlined />}>\n                    Guardar\n                  </Button>\n                </Form.Item>\n              </Form>\n        </Drawer>\n)\n}","import { Table, Drawer, Button, Form, Input, message, Row, \n  Col, Divider, DatePicker, Select, Space, InputNumber, Spin  } from \"antd\";\nimport { SaveOutlined, PlusOutlined, EditOutlined, MinusCircleOutlined, CloudUploadOutlined, CloudDownloadOutlined } from '@ant-design/icons';\nimport { useState } from \"react\";\nimport { useMovimiento } from \"../hooks/useMovimiento\";\nimport { fetchDescargar, fetchelectronica, fetchUltimoMovimiento, postmovimiento } from \"../helpers/serviceMovimientos\";\nimport {  Movimiento } from \"../interfaces/fetchMovimientos\";\nimport { tableColumnTextFilterConfig } from \"../helpers/tableUtils\"\nimport { usePersona } from \"../hooks/usePersona\";\nimport { useProducto } from \"../hooks/useProducto\";\nimport { Persona } from \"../interfaces/fetchPersonas\";\nimport { Producto } from \"../interfaces/fetchProductos\";\nimport { Producto as Productom } from \"../interfaces/fetchMovimientos\";\nimport {Decimal} from \"decimal.js-light\";\nimport { PostProducto } from \"../interfaces/postMovimiento\";\nimport moment, { Moment } from \"moment\";\nimport { ClienteComponente } from \"../components/cliente\";\n\nconst { Option } = Select;\n\nexport const MovimientosPage= ()=>{\n\n    const crearMovimiento=()=>{\n      fetchUltimoMovimiento().then(respuesta=>{\n        Forma.setFieldsValue({\n          codigo:parseInt(respuesta.codigo)+1\n        });\n      })\n      setformulario(true);\n      setmovimiento({_id:\"\", fecha: new Date() , codigo:\"\", subtotal:0, iva:0, total:0, descuento:0});\n      Forma.setFieldsValue({\n        cliente: \"\",\n        subtotal: 0,\n        iva: 0,\n        descuento: 0,\n        total: 0,\n        fecha: moment(new Date() , \"YYYY-MM-DD\") ,\n        productos: [{ item:\"\" , cantidad:1, precio:0 }]\n      })\n    }\n    const calcularTotal=(_:any ,values:{productos:PostProducto[]})=>{\n      const rowsCopy = [...values.productos ];\n      let totalAuxiliar=0;\n      values.productos.forEach((fieldGroup, index) => {\n        if (fieldGroup && fieldGroup.cantidad && fieldGroup.precio) {\n          fieldGroup.total = fieldGroup.cantidad * fieldGroup.precio;\n          totalAuxiliar+= fieldGroup.total;\n          rowsCopy.splice(index, 1, fieldGroup)\n          Forma.setFieldsValue({ productos: rowsCopy })\n        }\n      });\n      let auxiliar =  new Decimal(totalAuxiliar);\n      Forma.setFieldsValue(\n        { \n          subtotal: auxiliar,\n          iva:  auxiliar.mul(0.12),\n          total: auxiliar.mul(1.12),\n        });\n    }\n    const [Forma] = Form.useForm();\n    const [Formac] = Form.useForm();\n    const [persona, setpersona] = useState<Persona>({_id:'', identificacion:'', nombre:'', direccion:'', telefono:'', correoelectronico:''});\n    const [formularioc, setformularioc] = useState(false);\n    const [procesando, setprocesando] = useState(false);\n\n    const crearPersona=()=>{\n      setformularioc(true);\n      setpersona({_id:\"\",identificacion:\"\", nombre:\"\", direccion:\"\", telefono:\"\", correoelectronico:\"\"});\n      Formac.setFieldsValue({\n        identificacion: \"\",\n        nombre: \"\",\n        direccion: \"\",\n        telefono: \"\",\n        correoelectronico: \"\",\n        \n      })\n    }\n\n    const columns = [\n        {\n          title: 'Código',\n          dataIndex: 'codigo',\n          key: 'codigo',\n          width:150,\n          render: (text: string) => text,\n          ...tableColumnTextFilterConfig<Movimiento>(),\n          onFilter: (value: {}, record: Movimiento  ):boolean => {\n            return record.codigo.toLowerCase().includes(value.toString().toLowerCase())\n          },\n          sorter: (a:Movimiento, b:Movimiento) => a.codigo.length - b.codigo.length,\n        },\n        {\n            title:'Fecha',\n            dataIndex:'fecha',\n            key:'fecha',\n            width:200,\n            render: (valor: any) =>  (typeof(valor)===\"string\")?valor.substr(0,10) : moment(valor).format(\"YYYY-MM-DD\")  ,\n        },\n        {\n          title: 'Cliente',\n          dataIndex: ['cliente','nombre'],\n          key: 'cliente',\n        },\n        {\n          title: 'Acciones',\n          key: 'acciones',\n          width:200,\n          fixed:'right' as 'right',\n          render: ( record: Movimiento) => \n          <Space>\n          <Button type=\"primary\" shape=\"circle\" icon={ <EditOutlined/> } onClick=\n          { ()=>\n            \n            {\n              setformulario(true); \n              setmovimiento(record);\n              let auxiliar: PostProducto[]=[] ;\n              record.productos?.forEach(\n                elemento=>{\n                  auxiliar.push({ item:elemento.item._id,\n                     cantidad: elemento.cantidad, precio: elemento.precio, total: elemento.cantidad*elemento.precio })\n                }\n              )\n              Forma.setFieldsValue({\n                codigo: record.codigo,\n                cliente: record.cliente?._id,\n                subtotal: record.subtotal,\n                iva: record.iva,\n                descuento: record.descuento,\n                total: record.total,\n                fecha: moment(record.fecha, \"YYYY-MM-DD\"),\n                productos: auxiliar\n              })\n              \n            } \n          }/>\n          \n          <Button type=\"primary\" shape=\"circle\" icon={ <CloudUploadOutlined /> } onClick={()=>{\n            setprocesando(true);\n            fetchelectronica(record._id).then(resultado=>{\n              console.log(resultado.data[0]);\n              let mensajeActual=\"\"\n              if (resultado.data[0].RespuestaRecepcionComprobante)\n              {\n                mensajeActual= resultado.data[0].RespuestaRecepcionComprobante.comprobantes.comprobante.mensajes.mensaje.mensaje;\n              }\n              else\n              {\n                mensajeActual= resultado.data[0].RespuestaAutorizacionComprobante.autorizaciones.autorizacion.numeroAutorizacion;\n              }\n              setprocesando(false);\n              message.success(`Se presentaron los siguientes mensajes: ${mensajeActual} `);\n            }).catch(err=>{\n              console.log(err)\n              setprocesando(false);\n              message.error(\"Se presentaron los siguientes mensajes\");\n            })\n          } }/>\n          <Button type=\"primary\" shape=\"circle\" icon={ <CloudDownloadOutlined /> } onClick={()=>{\n            fetchDescargar(record._id).then(resultado=>{\n              console.log(resultado)\n            })\n          }}/>\n\n          </Space>,\n        },\n      ];\n      const { movimientos, setMovimientos, isLoading } = useMovimiento();\n      const [movimiento, setmovimiento] = useState<Movimiento>({_id:'', fecha: new Date() , iva:0, descuento:0, subtotal:0, total:0, codigo:\"\",  });\n      const { personas, setPersonas } = usePersona();\n      const { productos } = useProducto();\n      const [formulario, setformulario] = useState(false);\n      const onFinish = (values: {codigo:string, fecha:Moment, subtotal:number, iva:number, descuento:number, cliente:string ,total:number, productos: PostProducto[]}) => {\n\n\n        setmovimiento({\n          _id: movimiento._id,\n          codigo: values.codigo,\n          fecha: new Date(values.fecha.toISOString().substr(0,10) ) ,\n          subtotal:values.subtotal,\n          iva:values.iva,\n          descuento:values.descuento,\n          total:values.total\n        })\n        let auxiliar:Productom[]=[];\n        values.productos.forEach(ele=>{\n          auxiliar.push(\n            { \n              cantidad: ele.cantidad, precio: ele.precio,\n               item:{ _id:ele.item , nombre:\"\", categoria:\"\", precio:0, estado:true }  ,\n               _id:\"\" \n            })\n        })\n\n\n        let clienteAuxiliar:Persona= personas.filter(p=>{return p._id===values.cliente})[0];\n\n        postmovimiento( movimiento._id, { codigo: values.codigo , fecha: values.fecha.format(\"YYYY-MM-DD\")  , cliente: values.cliente, productos: values.productos, subtotal: values.subtotal , iva: values.iva, descuento:values.descuento, total: values.total   } ).then(respuesta=>{\n          if (movimiento._id.length>0)\n            setMovimientos( movimientos.map(ele=>{ if (ele._id===movimiento._id)\n               return {\n                      ...ele, codigo: values.codigo,\n                      fecha: moment(values.fecha, \"YYYY-MM-DD\").toDate() ,\n                      cliente: { _id: clienteAuxiliar._id, nombre: clienteAuxiliar.nombre\n                      ,direccion: clienteAuxiliar.direccion, telefono:clienteAuxiliar.telefono\n                    , identificacion: clienteAuxiliar.identificacion, correoelectronico: clienteAuxiliar.correoelectronico,\n                     estado:true  }  ,\n                      descuento: values.descuento ,\n                      iva: values.iva, \n                      subtotal: values.subtotal, \n                      total: values.total ,\n                      productos: auxiliar,\n                      } ; else return ele;}) )\n          else\n            setMovimientos([...movimientos, {...respuesta, cliente:{ _id: clienteAuxiliar._id, nombre: clienteAuxiliar.nombre\n              ,direccion: clienteAuxiliar.direccion, telefono:clienteAuxiliar.telefono\n            , identificacion: clienteAuxiliar.identificacion, correoelectronico: clienteAuxiliar.correoelectronico,\n             estado:true  }}])\n          message.success(\"Se almacenó correctamente el movimiento\");\n          setformulario(false);\n        }).catch(error=>{\n          message.error(\"Se presentaron errores al intentar almacenar los movimientos\");\n        });\n      };\n    return (\n      <>\n        <Row gutter={12} >\n          <Col span={12} offset={12}>\n            <Button type=\"primary\" shape=\"circle\" icon={<PlusOutlined />} size={'large'} onClick={crearMovimiento} />\n          </Col>\n        </Row>\n        <Divider orientation=\"left\">Movimientos</Divider>\n        <Spin spinning={procesando} delay={500} size=\"large\" tip=\"Procesando...\">\n          <Row gutter= {[16, 24]}>\n          <Table tableLayout='fixed' \n            loading= {isLoading}\n            rowKey='_id'\n            key=\"_id\"\n            pagination={{ defaultPageSize: 5, showSizeChanger: true,\n              pageSizeOptions: ['5','10', '20', '30']}} \n            scroll={{ x: 1300 }}\n            dataSource={movimientos} columns={columns} />\n          </Row>\n        </Spin>\n        <Drawer\n          title=\"Movimiento\"\n          width={720}\n          height={600}\n          onClose={()=>{ setformulario(false); }}\n          visible={formulario}\n          bodyStyle={{ paddingBottom: 120 }}\n          placement=\"bottom\"\n        >\n          <Form\n              form= {Forma}\n              name=\"formmovimiento\"\n              //labelCol={{ span: 2 }}\n              //wrapperCol={{ span: 6 }}\n              initialValues={{ remember: true }}\n              onValuesChange={calcularTotal}\n              onFinish={ onFinish }\n              onFinishFailed={()=>{}}\n              autoComplete=\"off\">\n                <Form.Item\n                  label=\"Código\"\n                  name=\"codigo\"\n                  style={{ width: 300 }}\n                  rules={[{ required: true, message: 'Por favor ingrese el código' }]}>\n                  <Input />\n                </Form.Item>\n                <Form.Item label=\"Fecha\" name=\"fecha\">\n                  <DatePicker/>\n                </Form.Item>\n                <Form.Item\n                  label=\"Cliente\"\n                  name=\"cliente\">\n                  <Select\n                    showSearch\n                    style={{ width: 400 }}\n                    placeholder=\"Selecciona una persona\"\n                    optionFilterProp=\"children\"\n                    onChange={()=>{}}\n                    onSearch={()=>{}}\n                    filterOption={(input, option) =>\n                      option?.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                    }>\n                    {\n                      personas.map(({ _id, nombre }: Persona) =>{\n                        return (\n                          <Option key={_id} value={_id}>{nombre}</Option>\n                        )\n                      })\n                    }\n                  </Select>\n                  \n                </Form.Item>\n                <Form.Item>\n                <Button type=\"dashed\" onClick={() => {  crearPersona() } }  icon={<PlusOutlined />}>\n                      Agregar\n                </Button>\n                </Form.Item>\n                \n                <Form.List name=\"productos\">\n                {(fields, { add, remove }) => (\n                <>\n                  {fields.map(field => (\n                    <Space key={field.key} style={{ display: 'flex', marginBottom: 8 }}  align=\"baseline\">\n                    <Form.Item\n                      name={[field.name, 'item']}\n                      fieldKey={[field.fieldKey, 'item']}\n                      >\n                      <Select\n                        showSearch\n                        style={{ width: 400 }}\n                        placeholder=\"Seleccione producto\"\n                        optionFilterProp=\"children\"\n                        onChange={()=>{}}\n                        onSearch={()=>{}}\n                        filterOption={(input, option) =>\n                          option?.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                        }>\n                        {\n                          productos.map(({ _id, nombre }: Producto) =>{\n                            return (\n                              <Option key={_id} value={_id}>{nombre}</Option>\n                            )\n                          })\n                        }\n                      </Select>\n                    </Form.Item>\n                    <Form.Item\n                      {...field}\n                      name={[field.name, 'cantidad']}\n                      fieldKey={[field.fieldKey, 'cantidad']}\n                      rules={[{ required: true, message: 'Debe ubicar el cantidad' }]}>\n                      <InputNumber placeholder=\"Cantidad\"  />\n                    </Form.Item>\n                    <Form.Item\n                      {...field}\n                      name={[field.name, 'precio']}\n                      fieldKey={[field.fieldKey, 'precio']}\n                      rules={[{ required: true, message: 'Debe ubicar el precio' }]}>\n                      <InputNumber placeholder=\"Precio\"  />\n                    </Form.Item>\n                    <Form.Item\n                    noStyle\n                    {...field}\n                    name={[field.name, 'total']}\n                    fieldKey={[field.fieldKey, 'total']}\n                  >\n                    <Input disabled placeholder=\"Total\" />\n                    </Form.Item>\n                    <MinusCircleOutlined onClick={() => {remove(field.name);  } } />\n                    </Space>\n                    ))}\n                    <Form.Item>\n                    <Button type=\"dashed\" onClick={() => add()} block icon={<PlusOutlined />}>\n                      Agregar\n                    </Button>\n                  </Form.Item>\n                </>\n                )}\n                </Form.List>\n                <Form.Item\n                  label=\"Subtotal\"\n                  name=\"subtotal\"\n                  style={{ width: 300 }}\n                  >\n                  <Input />\n                </Form.Item>\n                <Form.Item\n                  label=\"Iva\"\n                  name=\"iva\"\n                  style={{ width: 300 }}\n                  >\n                  <Input />\n                </Form.Item>\n                <Form.Item\n                  label=\"Descuento\"\n                  name=\"descuento\"\n                  style={{ width: 300 }}\n                  >\n                  <Input />\n                </Form.Item>\n                <Form.Item\n                  label=\"Total\"\n                  name=\"total\"\n                  style={{ width: 300 }}\n                  >\n                  <Input />\n                </Form.Item>\n                <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n                  <Button type=\"primary\" htmlType=\"submit\" icon={<SaveOutlined />}>\n                    Guardar\n                  </Button>\n                </Form.Item>\n          </Form>\n        </Drawer>\n        <ClienteComponente Forma={Formac}\n        persona={ persona} setpersona= {setpersona}\n        personas= {personas} setPersonas={setPersonas}\n         formulario={formularioc} setformulario={setformularioc}\n         />\n      </>\n    )\n}","import { useEffect, useState } from \"react\"\nimport { fetchmovimientos } from \"../helpers/serviceMovimientos\";\nimport { Movimiento } from \"../interfaces/fetchMovimientos\";\n\nexport const useMovimiento=()=>{\n const [isLoading, setIsLoading]=    useState(true);\n const [movimientos, setMovimientos] = useState<Movimiento[]>([]); \n useEffect(()=>{\n    fetchmovimientos().then(movimientos=>{\n        setIsLoading(false);\n        setMovimientos(movimientos);\n    });\n }, [] )\n return {\n    isLoading,\n    setIsLoading,\n    movimientos,\n    setMovimientos\n }\n}","import { Table, Drawer, Button, Form, Input, message, Row, Col, Divider, \n  InputNumber, Select, Upload, Avatar, Image } from \"antd\";\nimport { SaveOutlined, PlusOutlined, EditOutlined, UploadOutlined } from '@ant-design/icons';\nimport { useState } from \"react\";\nimport { getFileProducto, postFileProducto, postproducto } from \"../helpers/serviceProductos\";\nimport { Producto } from \"../interfaces/fetchProductos\";\nimport { tableColumnTextFilterConfig } from \"../helpers/tableUtils\"\nimport { useProducto } from \"../hooks/useProducto\";\nimport { Categoria } from \"../interfaces/fetchCategorias\";\nimport { useCafe } from \"../hooks/useCafe\";\nconst { Option } = Select;\n\n\nexport const ProductosPage= ()=>{\n  \n  const cambiarFotoBefore=( archivo: File )=>{\n    setarchivo(archivo);\n  }\n\n    \n    const crearProducto=()=>{\n      setformulario(true);\n      setproducto({_id:\"\", nombre:\"\", precio:0, costo:0, minimo:0, categoria:{_id:\"\", nombre:\"\"}});\n      Forma.setFieldsValue({\n        nombre: \"\",\n        precio:0,\n        costo:0,\n        minimo:0,\n        categoria:\"\"\n      })\n\n      setProductos( \n        productos.map(ele=>{ \n          return {...ele,  idaux: ele._id,  } ;\n          }));\n      \n    }\n    const [Forma] = Form.useForm();\n\n    const columns = [\n        {\n          title:'Foto',\n          key:'foto',\n          render: (record: Producto)=>  \n          <>\n            <Avatar key={record._id} src={getFileProducto( record.img||\"\" )} />\n          </>\n        },\n        {\n          title: 'Nombre',\n          dataIndex: 'nombre',\n          key: 'nombre',\n          render: (text: string) => text,\n          ...tableColumnTextFilterConfig<Producto>(),\n          onFilter: (value: {}, record: Producto  ):boolean => {\n            return record.nombre.toLowerCase().includes(value.toString().toLowerCase())\n          },\n          sorter: (a:Producto, b:Producto) => a.nombre.length - b.nombre.length,\n        },\n        {\n            title: 'Categoria',\n            dataIndex: ['categoria','nombre'],\n            key: 'categoria',\n        },\n        {\n          title: 'Precio',\n          dataIndex: 'precio',\n          key: 'precio',\n        },\n        {\n          title: 'Acciones',\n          key: 'acciones',\n          width:200,\n          fixed:'right' as 'right',\n          render: ( record: Producto) => <Button type=\"primary\" shape=\"circle\" icon={ <EditOutlined/> } onClick=\n          { ()=>\n          \n            { \n              setformulario(true); \n              setproducto(record);\n              Forma.setFieldsValue({\n                nombre: record.nombre,\n                precio: record.precio,\n                costo: record.costo,\n                minimo: record.minimo,\n                categoria: record.categoria._id\n              })\n              \n            } \n          }/>,\n        },\n      ];\n      const { productos, setProductos, isLoading } = useProducto();\n      const { categorias } = useCafe();\n      const [archivo, setarchivo] = useState<File>();\n      const [producto, setproducto] = useState<Producto>({_id:'', nombre:'', precio:0, categoria:{_id:\"\", nombre:\"\"}});\n      const [formulario, setformulario] = useState(false);\n      let auxiliarProductos:Producto[]=[];\n      const onFinish = async (values: {nombre:string, precio:number,costo:number, minimo:number, categoria: string}) => {\n        setproducto({\n          _id: producto._id,\n          nombre: values.nombre,\n          precio:values.precio,\n          costo: values.costo,\n          minimo:values.minimo,\n          categoria:{_id: values.categoria , nombre:\"\"}\n        })\n        let nombreCategoria=\"\";\n        if (values.categoria && values.categoria.length>0 )\n        {\n          nombreCategoria= categorias.filter(ele=>{\n            return ele._id=== values.categoria;\n          })[0].nombre;\n        }\n        let respuesta = await postproducto({...values , categoria :values.categoria ,  id:producto._id });\n          if (producto._id.length>0)\n          {\n            auxiliarProductos=\n              productos.map(ele=>{ \n                if (ele._id===producto._id)\n                return {...ele, nombre: values.nombre, precio: values.precio, \n                  costo:values.costo, minimo:values.minimo , idaux:\"\", img: respuesta.img,\n                  categoria: {_id:values.categoria, nombre:nombreCategoria}  } ; \n                  else\n                return ele;});\n            \n            \n\n          }\n          else\n          {\n            auxiliarProductos=   [...productos, respuesta] ;\n          }\n          let respuestaConFoto= await postFileProducto(respuesta._id , archivo! );\n          \n           auxiliarProductos = auxiliarProductos.map(elex=>{\n             if ( elex._id===respuestaConFoto._id ) return { ...elex, img: respuestaConFoto.img  }\n             else return elex;\n           })\n\n          setProductos(auxiliarProductos);\n          message.success(\"Se almacenó correctamente el producto\");\n          setformulario(false);\n      };\n      \n      \n    return (\n      <>\n        <Row gutter={12} >\n          <Col span={12} offset={12}>\n            <Button type=\"primary\" shape=\"circle\" icon={<PlusOutlined />} size={'large'} onClick={crearProducto} />\n          </Col>\n        </Row>\n        <Divider orientation=\"left\">Productos</Divider>\n        <Row gutter= {[16, 24]}>\n        <Table tableLayout='fixed'\n           loading= {isLoading}\n           rowKey='_id'\n           key=\"_id\"\n           pagination={{ defaultPageSize: 5, showSizeChanger: true,\n           pageSizeOptions: ['5','10', '20', '30']}} \n           scroll={{ x: 1300 }}\n           dataSource={productos} columns={columns} />\n        </Row>\n        <Drawer\n          title=\"Items\"\n          width={720}\n          height={400}\n          onClose={()=>{ setformulario(false); }}\n          visible={formulario}\n          bodyStyle={{ paddingBottom: 120 }}\n          placement=\"bottom\"\n        >\n          <Form\n              form= {Forma}\n              name=\"formcategoria\"\n              labelCol={{ span: 4 }}\n              wrapperCol={{ span: 12 }}\n              initialValues={{ remember: true }}\n              onFinish={ onFinish }\n              onFinishFailed={()=>{}}\n              autoComplete=\"off\">\n                <Form.Item\n                  label=\"Descripción\"\n                  name=\"nombre\"\n                  rules={[{ required: true, message: 'Por favor ingrese la descripción' }]}>\n                  <Input />\n                </Form.Item>\n                <Form.Item label=\"Costo\" name=\"costo\">\n                    <InputNumber/>\n                </Form.Item>\n                <Form.Item label=\"Mínimo\" name=\"minimo\">\n                    <InputNumber />\n                </Form.Item>\n                <Form.Item label=\"Precio\" name=\"precio\">\n                    <InputNumber min=\"0.01\"/>\n                </Form.Item>\n                <Form.Item label=\"Categoria\" name=\"categoria\">\n                <Select\n                    showSearch\n                    style={{ width: 400 }}\n                    placeholder=\"Select a person\"\n                    optionFilterProp=\"children\"\n                    onChange={()=>{}}\n                    onSearch={()=>{}}\n                    filterOption={(input, option) =>\n                      option?.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                    }>\n                    {\n                      categorias.map(({ _id, nombre }: Categoria) =>{\n                        return (\n                          <Option key={_id} value={_id}>{nombre}</Option>\n                        )\n                      })\n                    }\n                  </Select>\n                  \n                  </Form.Item>\n                  <Form.Item label=\"Foto\" name=\"foto\">\n                    <Upload\n                      listType=\"picture\"\n                      maxCount={1}\n                      beforeUpload= {cambiarFotoBefore}\n                      >\n                      <Button icon={<UploadOutlined />}>Subir (Max: 1)</Button>\n                    </Upload>\n                  </Form.Item>\n                  {\n                    producto.img && \n                    <Form.Item>\n                      <Image\n                        width={200}\n                        src={  getFileProducto(producto.img)  }\n                      />\n                    </Form.Item>\n                  }\n                  \n                  <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n                  <Button type=\"primary\" htmlType=\"submit\" icon={<SaveOutlined />}>\n                    Guardar\n                  </Button>\n                </Form.Item>\n          </Form>\n        </Drawer>\n      </>\n    )\n}","import { Table, Button, Form, Row, Col, Divider } from \"antd\";\nimport {  PlusOutlined, EditOutlined } from '@ant-design/icons';\nimport { usePersona } from \"../hooks/usePersona\";\nimport { Persona } from \"../interfaces/fetchPersonas\";\nimport { tableColumnTextFilterConfig } from \"../helpers/tableUtils\";\nimport { useState } from \"react\";\nimport { ClienteComponente } from \"../components/cliente\";\n\n\nexport const ClientesPage= ( )=>{\n\n    const [Forma] = Form.useForm();\n\n    const crearPersona=()=>{\n        setformulario(true);\n        setpersona({_id:\"\",identificacion:\"\", nombre:\"\", direccion:\"\", telefono:\"\", correoelectronico:\"\"});\n        Forma.setFieldsValue({\n         \n          identificacion: \"\",\n          nombre: \"\",\n          direccion: \"\",\n          telefono: \"\",\n          correoelectronico: \"\",\n          \n        })\n      }\n\n    const columns = [\n        {\n          title: 'Nombre',\n          dataIndex: 'nombre',\n          key: 'nombre',\n          render: (text: string) => text,\n          ...tableColumnTextFilterConfig<Persona>(),\n          onFilter: (value: {}, record: Persona  ):boolean => {\n            return record.nombre.toLowerCase().includes(value.toString().toLowerCase())\n          },\n          sorter: (a:Persona, b:Persona) => a.nombre.length - b.nombre.length,\n        },\n        {\n          title: 'Usuario',\n          dataIndex: ['usuario','nombre'],\n          key: 'usuario',\n        },\n        {\n          title: 'Acciones',\n          key: 'acciones',\n          width:200,\n          fixed:'right' as 'right',\n          render: ( record: Persona) => <Button type=\"primary\" shape=\"circle\" icon={ <EditOutlined/> } onClick=\n          { ()=>\n          \n            { \n              setformulario(true); \n              setpersona(record);\n              Forma.setFieldsValue({\n                identificacion: record.identificacion,\n                nombre: record.nombre,\n                direccion: record.direccion,\n                telefono: record.telefono,\n                correoelectronico: record.correoelectronico,\n              })\n              \n            } \n          }/>,\n        },\n      ];\n\n    const {  isLoading,personas, setPersonas } = usePersona();\n    const [persona, setpersona] = useState<Persona>({_id:'', identificacion:'', nombre:'', direccion:'', telefono:'', correoelectronico:''});\n    const [formulario, setformulario] = useState(false);\n    \n    return (\n        <>\n        <Row gutter={12} >\n          <Col span={12} offset={12}>\n            <Button type=\"primary\" shape=\"circle\" icon={<PlusOutlined />} size={'large'} onClick={crearPersona} />\n          </Col>\n        </Row>\n        <Divider orientation=\"left\">Clientes</Divider>\n        <Row gutter= {[16, 24]}>\n        <Table tableLayout='fixed'\n           loading= {isLoading}\n           rowKey='_id'\n           pagination={{ defaultPageSize: 5, showSizeChanger: true,\n           pageSizeOptions: ['5','10', '20', '30']}} \n           scroll={{ x: 1300 }}\n           dataSource={personas} columns={columns} />\n        </Row>\n        <ClienteComponente Forma={Forma}\n        persona={ persona} setpersona= {setpersona}\n         personas = {personas} setPersonas={setPersonas} \n         formulario={formulario} setformulario={setformulario}\n         />\n        \n      </>\n    )\n}","import { cafeApi } from \"../api/cafeApi\"\nimport { Paciente, FetchPacientes, Cita } from \"../interfaces/fetchPacientes\";\n\n\nexport const fetchpacientes = async (): Promise<Paciente[]> =>{\n    const resp= await  cafeApi.get<FetchPacientes>('/pacientes');\n    return resp.data.pacientes;\n}\nexport const fetchPacienteCita = async (idcitax:string): Promise<Paciente> =>{\n    const resp = await cafeApi.get<Paciente>(`/pacientes/cita/${idcitax}`);\n    return resp.data;\n}\nexport const fetchDescargar=async (idx:string) : Promise<any> =>{\n    const basej= (cafeApi.defaults.baseURL?.replace('api','') );\n    const resp =  await cafeApi.get<any>(`${basej}uploads/consultas/${idx}.pdf`, {responseType:'blob'});\n    window.open(URL.createObjectURL(resp.data));\n}\nexport const postpaciente= async (paciente: Paciente): Promise<Paciente> =>{\n    const token = localStorage.getItem('token') || '';\n\n    let resp;\n    try{\n\n        if (paciente._id.length>0)\n        {\n            resp = await cafeApi.put<Paciente>(`/pacientes/${paciente._id}`, paciente, { headers:{\n                'x-token':token\n            } } );\n        }\n        else\n        {\n            \n            resp = await cafeApi.post<Paciente>('/pacientes', paciente, { headers:{\n                'x-token':token\n            } } );\n        }\n        return resp.data;\n        \n    }\n    catch(error )\n    {\n        console.log(token)\n        console.log(error)\n        return paciente;\n        \n    }\n    \n}\nexport const getFilePaciente = (parametro:string):string=>{\n    return  `${cafeApi.defaults.baseURL?.substr(0, cafeApi.defaults.baseURL?.lastIndexOf(\"/\")) }/uploads/pacientes/${parametro}`;\n}\nexport const getFileCita = (parametro:string):string=>{\n    return  `${cafeApi.defaults.baseURL?.substr(0, cafeApi.defaults.baseURL?.lastIndexOf(\"/\")) }/uploads/citas/${parametro}`;\n}\nexport const postFilePaciente = async (idx:string, archivo:File ): Promise<Paciente>=>{\n    \n    let formData = new FormData();\n    formData.append(\"archivo\", archivo);\n\n    const resp =  await cafeApi.put(`/uploads/pacientes/${idx}`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n    })\n    return resp.data;\n}\nexport const postFileCita = async (idx:string, archivo:File): Promise<Cita>=>{\n    let formData = new FormData();\n    formData.append(\"archivo\", archivo);\n    const resp =  await cafeApi.put(`/uploads/citas/${idx}`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n    })\n    return resp.data;\n}\nexport const postcita = async (cita: Cita, idpacientex:string=\"\"): Promise<Cita> =>{\n    const token = localStorage.getItem('token') || '';\n    let resp;\n    if (cita._id.length>0)\n    {\n        resp = await cafeApi.put<Cita>(`/citas/${cita._id}`, cita, { headers:{\n            'x-token':token\n        } } );\n    }\n    else\n    {\n        \n        resp = await cafeApi.post<Cita>(`/citas/${idpacientex}`, cita, { headers:{\n            'x-token':token\n        } } );\n    }\n    return resp.data;\n}","import { useEffect, useState } from \"react\"\nimport { fetchpacientes } from \"../helpers/servicePacientes\";\nimport { Cita, Paciente } from \"../interfaces/fetchPacientes\";\n\nexport const usePaciente=()=>{\n const [isLoading, setIsLoading]=    useState(true);\n const [pacientes, setPacientes] = useState<Paciente[]>([]); \n const [citas, setCitas] =  useState<Cita[]>([]);\n useEffect(()=>{\n    fetchpacientes().then(pacientes=>{\n        setIsLoading(false);\n        setPacientes(pacientes);\n    });\n }, [] )\n return {\n    isLoading,\n    setIsLoading,\n    pacientes,\n    setPacientes,\n    citas,\n    setCitas\n }\n}","import {  Drawer, Button, Form, Input, Row, Col, DatePicker, Upload } from \"antd\";\nimport { SaveOutlined,  UploadOutlined } from '@ant-design/icons';\nimport { getFileCita } from \"../helpers/servicePacientes\";\n\nconst { TextArea } = Input;\n\ntype PersonaProps = {\n    paciente: any,\n    citaactual: any,\n    cita?:boolean,\n    setcita?:any,\n    FormaCita:any,\n    onFinishCita:any,\n    cambiarAdjuntoBefore:any\n  }\n\nexport const ConsultaComponente= (\n  {  paciente, citaactual, cita, setcita, FormaCita, onFinishCita, cambiarAdjuntoBefore }\n  : PersonaProps)=>{\n\n\n\nreturn (\n  <Drawer\n            title={ \"Consultas de: \" + paciente.nombre  }\n            width={720}\n            height={650}\n            onClose={()=>{ setcita(false); }}\n            visible={cita}\n            bodyStyle={{ paddingBottom: 60 }}\n            placement=\"bottom\"\n          >\n            <Form\n                form= {FormaCita}\n                name=\"formcita\"\n                labelCol={{ span: 8 }}\n                wrapperCol={{ span: 16 }}\n                size={\"small\"}\n                initialValues={{ remember: true }}\n                onFinish={ onFinishCita }\n                onFinishFailed={()=>{}}\n                autoComplete=\"off\">\n                  <Row>\n                  <Col xs={2} sm={4} md={6} lg={8} xl={12}>\n                  <Form.Item label=\"Fecha\" name=\"fecha\">\n                    <DatePicker \n                    showTime={{ format: 'HH:mm' }}\n                    format=\"YYYY-MM-DD HH:mm\"\n                    />\n                  </Form.Item>\n                  <Form.Item\n                    label=\"Motivo de la Consulta\"\n                    name=\"motivo\"\n                    rules={[{ required: true, message: 'Por favor ingrese motivo de la consulta' }]}>\n                    <Input />\n                  </Form.Item>\n                  <Form.Item\n                    label=\"Anamnesis\"\n                    name=\"anamnesis\"\n                    rules={[{ required: true, message: 'Por favor ingrese anamnesis' }]}>\n                    <TextArea />\n                  </Form.Item>\n                  <Form.Item\n                    label=\"Presión Arterial\"\n                    name=\"presionalterial\"\n                    rules={[{ required: true, message: 'Por favor ingrese presión alterial' }]}>\n                    <Input />\n                  </Form.Item>\n                  <Form.Item\n                    label=\"Pulso\"\n                    name=\"pulso\"\n                    rules={[{ required: true, message: 'Por favor ingrese pulso' }]}>\n                    <Input />\n                  </Form.Item>\n                  <Form.Item\n                    label=\"Estatura\"\n                    name=\"estatura\"\n                    rules={[{ required: true, message: 'Por favor ingrese estatura' }]}>\n                    <Input />\n                  </Form.Item>\n                  <Form.Item\n                    label=\"Peso\"\n                    name=\"peso\"\n                    rules={[{ required: true, message: 'Por favor ingrese peso' }]}>\n                    <Input />\n                  </Form.Item>\n                  <Form.Item\n                    label=\"IMC\"\n                    name=\"imc\"\n                    rules={[{ required: true, message: 'Por favor ingrese IMC' }]}>\n                    <Input />\n                  </Form.Item>\n                  <Form.Item\n                    label=\"Temperatura\"\n                    name=\"temperatura\"\n                    rules={[{ required: true, message: 'Por favor ingrese temperatura' }]}>\n                    <Input />\n                  </Form.Item>\n                  <Form.Item\n                    label=\"Hemoglucotest\"\n                    name=\"hemo\">\n                    <Input />\n                  </Form.Item>\n                  \n                  </Col>\n                  <Col xs={2} sm={4} md={6} lg={8} xl={10}>\n                  <Form.Item\n                    label=\"Saturación de Oxígeno\"\n                    name=\"saturacion\">\n                    <Input />\n                  </Form.Item>\n                  <Form.Item\n                    label=\"Examen Físico\"\n                    name=\"medicamento\"\n                    rules={[{ required: true, message: 'Por favor ingrese medicamento' }]}>\n                    <TextArea />\n                  </Form.Item>\n                  <Form.Item\n                    label=\"Diagnóstico\"\n                    name=\"diagnostico\"\n                    rules={[{ required: true, message: 'Por favor ingrese diagnóstico' }]}>\n                    <TextArea />\n                  </Form.Item>\n                  <Form.Item\n                    label=\"Tratamiento\"\n                    name=\"tratamiento\"\n                    rules={[{ required: true, message: 'Por favor ingrese tratamiento' }]}>\n                    <TextArea />\n                  </Form.Item>\n                  <Form.Item label=\"Próxima Atención\" name=\"fechaproximaatencion\">\n                    <DatePicker \n                    showTime={{ format: 'HH:mm' }}\n                    format=\"YYYY-MM-DD HH:mm\"\n                    />\n                  </Form.Item>\n                  <Form.Item label=\"Adjunto\" name=\"adjunto\">\n                      <Upload\n                        listType=\"text\"\n                        maxCount={1}\n                        showUploadList={true}\n                        beforeUpload= {cambiarAdjuntoBefore}\n                        >\n                        <Button icon={<UploadOutlined />}>Subir (Max: 1)</Button>\n                      </Upload>\n                    </Form.Item>\n                    {\n                      citaactual.img && \n                      <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n                            <Button type=\"link\" href={getFileCita(citaactual.img)}>Dar click</Button>\n                      </Form.Item>\n                    }\n                  <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n                    <Button type=\"primary\" htmlType=\"submit\" icon={<SaveOutlined />}>\n                      Guardar cita\n                    </Button>\n                  </Form.Item>\n                  </Col>\n                  </Row>\n            </Form>\n  </Drawer>\n)\n}","import { Table, Drawer, Button, Form, Input, message, Row, Col, Divider,\n   DatePicker, Upload, Image, InputNumber } from \"antd\";\n   import { SaveOutlined, PlusOutlined, EditOutlined, UploadOutlined, DownloadOutlined } from '@ant-design/icons';\n   import { tableColumnTextFilterConfig } from \"../helpers/tableUtils\";\n   import { Paciente, Cita } from \"../interfaces/fetchPacientes\";\n   import { usePaciente } from \"../hooks/usePaciente\";\n   import { useState } from \"react\";\n   import moment, { Moment } from \"moment\";\n   import { fetchDescargar, fetchPacienteCita, getFilePaciente, postcita, postFileCita, postFilePaciente, postpaciente } from \"../helpers/servicePacientes\";\nimport { ConsultaComponente } from \"../components/consulta\";\n\n   const { TextArea } = Input;\n\nexport const PacientesPage= ( )=>{\n  const devolverEdad=(parametro:Moment|null )=>{\n    const fechaActual= new Date();\n    let edadActual= (fechaActual.getFullYear()- (parametro?.year()??0)   )\n    Forma.setFieldsValue({\n      edad: edadActual\n    })\n  }\n  const cambiarFotoBefore=( archivo: File )=>{\n    setarchivo(archivo);\n  }\n  const cambiarAdjuntoBefore = (adjunto: File)=>{\n    setadjunto(adjunto);\n  }\n    const crearPaciente=()=>{\n      setarchivo(undefined);\n      Forma.resetFields();\n      setformulario(true);\n      setpaciente({_id:\"\", rut:\"\",nombre:\"\", direccion:\"\", telefono:\"\"\n     , alergia:\"\", citas:[], fechanacimiento: new Date(), sexo:\"\", nacionalidad:\"\"\n    , email:\"\", previsionsalud:\"\", otrosdatos:\"\", estadocivil:\"\" });\n    setCitas([]);\n      Forma.setFieldsValue({\n        rut:\"\",\n        nombre: \"\",\n        direccion:\"\",\n        telefono:\"\",\n        alergia:\"\",\n        citas:[],\n        fechanacimiento: moment(new Date() , \"YYYY-MM-DD\"),\n        sexo:\"\",\n        nacionalidad:\"\",\n        email:\"\",\n        previsionsalud:\"\",\n        otrosdatos:\"\",\n        estadocivil:\"\",\n      })\n    }\n    const crearCita=()=>{\n      setadjunto(undefined);\n      FormaCita.resetFields();\n      setidcita(\"\");\n      setcita(true);\n      setcitaactual({\n        _id:\"\", anamnesis:\"\", diagnostico:\"\", estatura:\"\", fechaproximaatencion:new Date(),\n        imc:\"\", medicamento:\"\", peso:'', presionalterial:'',pulso:'',temperatura:'', tratamiento:\"\",\n        fecha:new Date(), hemo:\"\", img:undefined, motivo:\"\", saturacion:\"\"\n      });\n      FormaCita.setFieldsValue({\n        estatura:\"\",\n        peso: \"\",\n        temperatura: \"\",\n        presionalterial: \"\",\n        imc: \"\",\n        pulso: \"\",\n        hemo: \"\",\n        fecha: moment(new Date() , \"YYYY-MM-DD\"),\n        anamnesis: \"\",\n        diagnostico: \"\",\n        tratamiento: \"\",\n        medicamento: \"\",\n        fechaproximaatencion: moment(new Date() , \"YYYY-MM-DD\"),\n      });\n      \n\n    }\n    const [Forma] = Form.useForm();\n    const [FormaCita] = Form.useForm();\n    const { pacientes, setPacientes, isLoading, citas, setCitas } = usePaciente();\n    const [archivo, setarchivo] = useState<File>();\n    const [adjunto, setadjunto] = useState<File>();\n    \n      const [paciente, setpaciente] = useState<Paciente>({_id:'', nombre:'', rut:'',direccion:'', telefono:''\n      , citas:[], fechanacimiento: new Date(), alergia:'', sexo:'', email:'', nacionalidad:'', previsionsalud:'', otrosdatos:'', estadocivil:''  });\n      const [citaactual, setcitaactual]= useState<Cita>({\n        _id:\"\", anamnesis:\"\", diagnostico:\"\", estatura:\"\", fechaproximaatencion:new Date(),\n        imc:\"\", medicamento:\"\", peso:'', presionalterial:'',pulso:'',temperatura:'', tratamiento:\"\",\n        fecha:new Date(), hemo:\"\", motivo:\"\", saturacion:\"\"\n      });\n      const [formulario, setformulario] = useState(false);\n      const [cita, setcita] = useState(false);\n      const [idcita, setidcita]= useState<string>(\"\");\n    const onFinishCita = async (values: {peso:string, estatura:string, temperatura:string, \n      presionalterial:string, imc:string, pulso:string, hemo:string, fecha:Moment, \n    anamnesis:string, diagnostico:string , tratamiento:string, medicamento:string, motivo:string,\n    saturacion:string,\n    fechaproximaatencion:Moment}) => {\n      const citax = {\n        _id: idcita,\n        peso: values.peso,\n        estatura: values.estatura,\n        temperatura: values.temperatura,\n        presionalterial: values.presionalterial,\n        imc: values.imc,\n        pulso: values.pulso,\n        hemo: values.hemo,\n        fecha:  new Date(values.fecha.toDate().toISOString() ),\n        anamnesis: values.anamnesis,\n        diagnostico: values.diagnostico,\n        tratamiento: values.tratamiento,\n        medicamento: values.medicamento,\n        motivo:values.motivo,\n        saturacion: values.saturacion,\n        fechaproximaatencion: new Date(values.fechaproximaatencion.toISOString() ),\n      };\n      let respuesta:Cita =  await postcita({...citax}, paciente._id );\n      let respuestaConAdjunto:Cita = { ...respuesta };\n        if (adjunto)\n        {\n          respuestaConAdjunto= await postFileCita(respuesta._id , adjunto! );\n          message.success(`Cita realizada en fecha ${respuestaConAdjunto.fecha.toString() } ahora tiene adjunto`)\n        }\n          if (idcita.length>0)\n          {\n            setPacientes( pacientes.map(ele =>{ \n              if (ele._id===paciente._id)\n              return {\n                ...ele, citas: ele.citas?.map(eled=>\n                  {\n                    if (eled._id===idcita) { return  {...eled, anamnesis: citax.anamnesis, fecha: citax.fecha  }} else { return eled;}\n                  })\n              } ;\n              else\n              return ele;\n            }) );\n            setCitas(citas.map(ele=>{ if (ele._id=== idcita) \n              return {...ele, anamnesis: citax.anamnesis, fecha: citax.fecha \n                , medicamento: values.medicamento, peso: values.peso,\n                presionalterial: values.presionalterial, estatura: values.estatura\n                , temperatura: values.temperatura, imc: values.imc, pulso: values.pulso\n                ,hemo: values.hemo,  fechaproximaatencion: new Date(values.fechaproximaatencion.toISOString().substr(0,10) ) \n              , img: respuestaConAdjunto.img  }; else return ele; }));\n          }\n          else\n          {\n            setPacientes( pacientes.map(ele =>{ \n              if (ele._id===paciente._id)\n              return {\n                ...ele, citas: [...ele.citas!, respuesta ]\n              } ;\n              else\n              return ele;\n            }) );\n            setCitas([ ...citas, respuestaConAdjunto  ]);\n          }\n          message.success(\"Se almacenó correctamente la cita\");\n          setcita(false);\n      }\n    const onFinish= async (values:{ rut:string, nombre:string, direccion:string, \n        telefono:string, alergia:string, sexo:string, email:string,\n      previsionsalud:string, otrosdatos:string, fechanacimiento:Moment, nacionalidad:string, estadocivil:string })=>{\n        const pacientex = {\n          _id: paciente._id,\n          rut: values.rut,\n          nombre: values.nombre,\n          direccion:values.direccion,\n          telefono: values.telefono,\n          fechanacimiento: new Date(values.fechanacimiento.toISOString().substr(0,10) ),\n          previsionsalud: values.previsionsalud,\n          otrosdatos: values.otrosdatos,\n          alergia:values.alergia,\n          sexo: values.sexo,\n          email: values.email,\n          nacionalidad: values.nacionalidad,\n          estadocivil: values.estadocivil,\n        };\n        setpaciente(pacientex);\n        let respuesta:Paciente = await  postpaciente(pacientex);\n        let respuestaConFoto:Paciente = { ...respuesta };\n        if (archivo)\n        {\n          respuestaConFoto= await postFilePaciente(respuesta._id , archivo! );\n          message.success(` ${respuestaConFoto.nombre} ahora tiene nueva foto`)\n        }\n        if (pacientex._id.length>0)\n        {\n          setPacientes( pacientes.map(ele=>{ if (ele._id===pacientex._id)\n            return {\n              ...ele, nombre: values.nombre, direccion: values.direccion,\n              telefono: values.telefono, otrosdatos:values.otrosdatos,\n              alergia: values.alergia, rut: values.rut\n              , fechanacimiento: new Date(values.fechanacimiento.toISOString().substr(0,10) ) ,\n              previsionsalud: values.previsionsalud, sexo: values.sexo,\n              nacionalidad: values.nacionalidad, email: values.email, estadocivil: values.estadocivil,\n              img: respuestaConFoto.img,\n            } ; else return ele;}) )\n        }\n        else\n        {\n          setPacientes([...pacientes, {...respuestaConFoto  }])\n        }\n        message.success(\"Se almacenó correctamente el paciente\");\n        setformulario(false);\n      }\n\n    const columnsc=[\n      {\n        title: 'Fecha',\n        dataIndex: 'fecha',\n        key: 'fecha',\n        width: \"10%\",\n        render: (valor: any) =>  (typeof(valor)===\"string\")?valor.substr(0,16).replace(\"T\",\" \") : moment(valor).format(\"YYYY-MM-DD hh:mm\")  ,\n      },\n      {\n        title: 'Usuario doctor',\n        dataIndex: ['usuario','nombre'],\n        key: 'usuario',\n        width: '10%',\n      },\n      {\n        title: 'Anamnesis',\n        dataIndex: 'anamnesis',\n        key: 'anamnesis',\n        width: '50%',\n      },\n      {\n        title: 'Acciones',\n        key: 'acciones',\n        width: \"10%\" ,\n        fixed:'right' as 'right',\n        render: ( record: Cita) => \n        <><Button type=\"primary\" shape=\"circle\" icon={ <EditOutlined/> } onClick=\n        { ()=>\n          { \n              setadjunto(undefined);\n              FormaCita.resetFields();\n              setidcita(record._id);\n              setcitaactual(record);\n              setcita(true);\n              FormaCita.setFieldsValue({\n              estatura:record.estatura,\n              peso: record.peso,\n              temperatura: record.temperatura,\n              presionalterial: record.presionalterial,\n              imc: record.imc,\n              pulso: record.pulso,\n              hemo: record.hemo,\n              fecha: moment(new Date(record.fecha), \"YYYY-MM-DD hh:mm:ss a\"),\n              anamnesis: record.anamnesis,\n              diagnostico: record.diagnostico,\n              tratamiento: record.tratamiento,\n              medicamento: record.medicamento,\n              saturacion: record.saturacion,\n              motivo: record.motivo,\n              fechaproximaatencion: moment(new Date(record.fechaproximaatencion), \"YYYY-MM-DD hh:mm:ss a\"),\n            });\n          } \n        }/>\n        <Button type=\"primary\" shape=\"circle\" icon={ <DownloadOutlined /> } onClick={()=>{\n          fetchPacienteCita(record._id).then(respuesta=>{\n            //window.open(`http://localhost/uploads/consultas/${record._id}.pdf`,'_blank');\n            fetchDescargar(record._id)\n          })\n        }}/>\n        </>,\n      },\n\n    ]\n    const columns = [\n        {\n          title: 'Nombre',\n          dataIndex: 'nombre',\n          key: 'nombre',\n          width: \"20%\",\n          render: (text: string) => text,\n          ...tableColumnTextFilterConfig<Paciente>(),\n          onFilter: (value: {}, record: Paciente  ):boolean => {\n            return record.nombre.toLowerCase().includes(value.toString().toLowerCase())\n          },\n          sorter: (a:Paciente, b:Paciente) => a.nombre.length - b.nombre.length,\n        },\n        {\n          title: 'Nro. Identificación',\n          dataIndex: 'rut',\n          key: 'rut',\n          width: \"20%\",\n          render: (text: string) => text,\n          ...tableColumnTextFilterConfig<Paciente>(),\n          onFilter: (value: {}, record: Paciente  ):boolean => {\n            return record.rut.toLowerCase().includes(value.toString().toLowerCase())\n          },\n          sorter: (a:Paciente, b:Paciente) => a.rut.length - b.rut.length,\n        },\n        {\n          title: 'Usuario',\n          dataIndex: ['usuario','nombre'],\n          key: 'usuario',\n          width: '10%',\n        },\n        {\n          title: 'Acciones',\n          key: 'acciones',\n          width:\"10%\",\n          fixed:'right' as 'right',\n          render: ( record: Paciente) => <Button type=\"primary\" shape=\"circle\" icon={ <EditOutlined/> } onClick=\n          { ()=>\n          \n            { \n              console.log(record.fechanacimiento);\n              setformulario(true); \n              setpaciente(record);\n              setarchivo(undefined);\n              Forma.resetFields();\n              setCitas(record.citas!);\n              Forma.setFieldsValue({\n                rut: record.rut,\n                nombre: record.nombre,\n                direccion: record.direccion,\n                telefono: record.telefono,\n                email: record.email,\n                sexo: record.sexo,\n                nacionalidad: record.nacionalidad,\n                alergia: record.alergia,\n                previsionsalud: record.previsionsalud,\n                otrosdatos: record.otrosdatos,\n                fechanacimiento: moment(new Date(record.fechanacimiento), \"YYYY-MM-DD\"),\n                edad: moment(new Date()).year() - moment(new Date(record.fechanacimiento), \"YYYY-MM-DD\").year() ,\n                estadocivil:record.estadocivil\n              })\n              \n              \n            } \n          }/>,\n        },\n      ];\n    return (\n        <>\n        <Row gutter={12} >\n          <Col span={12} offset={12}>\n            <Button type=\"primary\" shape=\"circle\" icon={<PlusOutlined />} size={'large'} onClick={crearPaciente} />\n          </Col>\n        </Row>\n        <Divider orientation=\"left\">Pacientes</Divider>\n        <Row gutter= {[16, 24]}>\n        <Table tableLayout='fixed'\n           loading= {isLoading}\n           rowKey='_id'\n           pagination={{ defaultPageSize: 5, showSizeChanger: true,\n           pageSizeOptions: ['5','10', '20', '30']}} \n           scroll={{ x: 1300 }}\n           dataSource={pacientes} columns={columns} />\n        </Row>\n        <Drawer\n          title=\"Datos del Paciente\"\n          width={720}\n          height={650}\n          onClose={()=>{ setformulario(false); }}\n          visible={formulario}\n          bodyStyle={{ paddingBottom: 60 }}\n          placement=\"bottom\"\n        >\n          <Row>\n          <Col xs={2} sm={4} md={6} lg={8} xl={12}>\n          <Form\n              form= {Forma}\n              name=\"formpaciente\"\n              labelCol={{ span: 6 }}\n              wrapperCol={{ span: 16 }}\n              size={\"small\"}\n              initialValues={{ remember: true }}\n              onFinish={ onFinish }\n              onFinishFailed={()=>{}}\n              autoComplete=\"off\">\n                <Form.Item label=\"Foto\" name=\"foto\">\n                    <Upload\n                      listType=\"picture\"\n                      maxCount={1}\n                      showUploadList={true}\n                      beforeUpload= {cambiarFotoBefore}\n                      >\n                      <Button icon={<UploadOutlined />}>Subir (Max: 1)</Button>\n                    </Upload>\n                  </Form.Item>\n                  {\n                    paciente.img && \n                    <Form.Item>\n                      <Image\n                        width={200}\n                        src={  getFilePaciente(paciente.img)  }\n                      />\n                    </Form.Item>\n                    }\n              <Form.Item  style={{ marginBottom: 0 }}  label=\"Nro. Identificación\">\n                <Form.Item\n                  name=\"rut\"\n                  rules={[{ required: true, message: 'Por favor ingrese el RUT' }]}\n                  style={{ display: 'inline-block', width: 'calc(50% - 12px)' }}\n                  >\n                  <Input style={{width:\"80%\", display:\"inline-block\" }} placeholder=\"RUT:(Ej. 12345678-9)\" />\n                </Form.Item>\n                <span\n                  style={{ display: 'inline-block', width: '200px', lineHeight: '32px', textAlign: 'left' }}\n                >\n                  (DNI, RUN, RUT, CI, PAS, etc.)\n                </span>\n              </Form.Item>\n                <Form.Item\n                  label=\"Nombre Completo\"\n                  name=\"nombre\"\n                  rules={[{ required: true, message: 'Por favor ingrese el Nombre' }]}>\n                  <Input style={{ width:\"70%\", textTransform: 'uppercase' }} placeholder=\"ESCRIBIR APELLIDOS LUEGO NOMBRES\" />\n                </Form.Item>\n                <Form.Item label=\"Fecha de Nacimiento\"\n                 name=\"fechanacimiento\"\n                 rules={[{ required: true, message: 'Por favor ingrese fecha de nacimiento' }]}>\n                  <DatePicker onChange={ devolverEdad } />\n                </Form.Item>\n                <Form.Item label=\"Edad\" name=\"edad\">\n                  <InputNumber />\n                </Form.Item>\n                <Form.Item\n                  label=\"Sexo\"\n                  name=\"sexo\"\n                  rules={[{ required: true, message: 'Por favor ingrese el sexo del paciente' }]}>\n                  <Input style={{width:\"10%\", textTransform: 'capitalize'}} />\n                </Form.Item>\n                <Form.Item\n                  label=\"Estado Civil\"\n                  name=\"estadocivil\">\n                  <Input style={{width:\"20%\", textTransform:\"capitalize\"}} />\n                </Form.Item>\n                <Form.Item\n                  label=\"Provisión de Salud\"\n                  name=\"previsionsalud\">\n                  <TextArea style={{width:\"80%\", textTransform: 'uppercase'}} />\n                </Form.Item>\n                <Form.Item\n                  label=\"e-mail\"\n                  name=\"email\"\n                  rules={\n                    [\n                      { required: true, message: 'Por favor ingrese el correo electrónico' },\n                      { type: 'email', message:'Debe ser un correo electrónico válido'}\n                      ]}>\n                  <Input style={{width:\"40%\"}} />\n                </Form.Item>\n                <Form.Item\n                  label=\"Dirección\"\n                  name=\"direccion\"\n                  rules={[{ required: true, message: 'Por favor ingrese la dirección' }]}>\n                  <TextArea style={{width:\"80%\"}} />\n                </Form.Item>\n                <Form.Item\n                  label=\"Teléfono\"\n                  name=\"telefono\"\n                  rules={[{ required: true, message: 'Por favor ingrese teléfono' }]}>\n                  <TextArea style={{width:\"50%\"}} />\n                </Form.Item>\n                <Form.Item\n                  label=\"Nacionalidad\"\n                  name=\"nacionalidad\">\n                  <Input style={{width:\"50%\", textTransform:'capitalize'}}  />\n                </Form.Item>\n                <Form.Item\n                  label=\"Alergia\"\n                  name=\"alergia\">\n                  <TextArea style={{width:\"80%\", textTransform: 'uppercase', color:\"red\"  }} />\n                </Form.Item>\n                \n                <Form.Item\n                  label=\"Otros Datos\"\n                  name=\"otrosdatos\">\n                  <TextArea style={{width:\"80%\", textTransform: 'uppercase'}} />\n                </Form.Item>\n                \n                <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n                  <Button type=\"primary\" htmlType=\"submit\" icon={<SaveOutlined />}>\n                    Guardar\n                  </Button>\n                </Form.Item>\n          </Form>\n          </Col>\n          <Col xs={2} sm={4} md={6} lg={8} xl={10}>\n          <Row gutter={12} >\n            <Col span={12} offset={12}>\n              <Button type=\"primary\" shape=\"circle\" disabled={paciente._id.length===0} icon={<PlusOutlined />} size={'large'} onClick={crearCita} />\n            </Col>\n          </Row>\n          <Divider orientation=\"left\">Consultas</Divider>\n          <Row gutter= {[16, 24]}>\n          <Table tableLayout='fixed'\n          size=\"small\"\n           loading= {isLoading}\n           rowKey='_id'\n           pagination={{ defaultPageSize: 5, showSizeChanger: true,\n           pageSizeOptions: ['5','10', '20', '30']}} \n           scroll={{ x: 1300 }}\n           dataSource={citas} columns={columnsc} />\n           </Row>\n          </Col>\n          </Row>\n        </Drawer>\n        <ConsultaComponente paciente={paciente} citaactual={ citaactual  } \n        cita={cita} setcita={ setcita } FormaCita={ FormaCita } \n        onFinishCita={ onFinishCita } cambiarAdjuntoBefore={cambiarAdjuntoBefore}  />\n        \n        </>\n    )\n}\n\n\n","\nimport {Chart as ChartJS,CategoryScale,LinearScale,BarElement,Title,Tooltip,Legend,} from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\n\nChartJS.register(CategoryScale,LinearScale,BarElement,Title,Tooltip,Legend);\n\n  export const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top' as const,\n      },\n      title: {\n        display: true,\n        text: 'Resúmen',\n      },\n    },\n  };\n  \n  const labels = ['Enero', 'Febrero', 'Marzo', 'Abril'];\n  export const data = {\n    labels,\n    datasets: [\n      {\n        label: 'Compras',\n        data: labels.map(() => 800  ),\n        backgroundColor: 'rgba(255, 99, 132, 0.5)',\n      },\n      {\n        label: 'Ventas',\n        data: labels.map(() => 700 ),\n        backgroundColor: 'rgba(53, 162, 235, 0.5)',\n      },\n    ],\n  };\n\n\nexport const HomePage= ()=>{\n  \n    return (\n        <>\n        <Bar options={options} data={data} />\n        \n        </>\n    )\n}","export const messages = {\n    allDay: 'Todo el día',\n    previous: '<',\n    next: '>',\n    today: 'Hoy',\n    month: 'Mes',\n    week: 'Semana',\n    day: 'Día',\n    agenda: 'Agenda',\n    date: 'Fecha',\n    time: 'Hora',\n    event: 'Evento',\n    noEventsInRange: 'No hay eventos en este rango',\n    showMore: (total:Number) => `+ Ver más (${total})`\n};","\nexport const CalendarEvent=({event}: any )=>{\n    const {title, name} = event;\n    return (\n        <>\n            <span> {title} </span>\n            <strong> {name} </strong>\n        </>\n    )\n}","import { cafeApi } from \"../api/cafeApi\"\nimport { Citasprevias, Citaspreviasplanas, FetchCitasprevias } from \"../interfaces/fetchCitasPrevias\";\n\n\nexport const fetchcitasprevias = async (): Promise<Citasprevias[]> =>{\n    const resp= await  cafeApi.get<FetchCitasprevias>('/citasprevias');\n    return resp.data.citasprevias;\n}\nexport const postcitaprevia= async (citaprevia: Citaspreviasplanas): Promise<Citasprevias> =>{\n    const token = localStorage.getItem('token') || '';\n    let resp;\n    if (citaprevia._id.length>0)\n    {\n         resp = await cafeApi.put<Citasprevias>(`/citasprevias/${citaprevia._id}`, citaprevia, { headers:{\n            'x-token':token\n        } } );\n    }\n    else\n    {\n         resp = await cafeApi.post<Citasprevias>('/citasprevias', citaprevia, { headers:{\n            'x-token':token\n        } } );\n    }\n    return resp.data;\n}","import { Calendar, momentLocalizer, Views } from 'react-big-calendar';\nimport 'moment/locale/es';\nimport { messages } from  '../helpers/calendarMessagesEs';\nimport { CalendarEvent } from '../components/calendarEvent';\nimport { useEffect, useState } from 'react';\nimport { Button, Col, Drawer, Row, Form, DatePicker, Input, Select, message } from 'antd';\nimport { PlusOutlined, SaveOutlined, SolutionOutlined } from '@ant-design/icons';\nimport moment, { Moment } from \"moment\";\nimport { Cita, Paciente } from '../interfaces/fetchPacientes';\nimport { usePaciente } from \"../hooks/usePaciente\";\nimport { useCitaprevia } from \"../hooks/useCitaprevia\";\nimport { postcitaprevia } from '../helpers/serviceCitasprevias';\nimport { ConsultaComponente } from '../components/consulta';\nimport { postcita, postFileCita } from '../helpers/servicePacientes';\nimport { Citasprevias, Citaspreviasplanas } from '../interfaces/fetchCitasPrevias';\n\n//FIXME que al modificar una cita no se duplique.\n  const  {TextArea} = Input;\n  const { Option } = Select;\n  const localizer = momentLocalizer(moment);\n  moment.locale('es');\n  const vistaActual = (parametro:String)=>{\n    switch (parametro.toUpperCase()) {\n        case \"WEEK\":\n            return Views.WEEK;\n        case \"MONTH\":\n            return Views.MONTH;\n        case \"AGENDA\":\n            return Views.AGENDA;\n        case \"WORK_WEEK\":\n            return Views.WORK_WEEK;\n        default:\n            return  Views.DAY\n    }\n    \n  }\n\ninterface ievento {\n  title:string\n  start: Date\n  end: Date\n  bgcolor:string\n  name:string\n  id:string\n}\nexport const CalendarioPage= ()=>{\n  const [adjunto, setadjunto] = useState<File>();\n\n  const cambiarAdjuntoBefore = (adjunto: File)=>{\n    setadjunto(adjunto);\n  }\n\n  const [FormaCita] = Form.useForm();\n  const [FormaCitaf] = Form.useForm();\n    const [citav, setcitav] = useState(false);\n    const [citav2, setcitav2] = useState(false);\n    const { citasprevias, setCitasprevias } = useCitaprevia();\n    \n    const [cita2] = useState<Cita>({ _id:\"\", imc:\"\", anamnesis:\"\", diagnostico:\"\"\n  , estatura:\"\", fecha:new Date(), fechaproximaatencion:new Date(), medicamento:\"\", motivo:\"\"\n, peso:\"\", presionalterial:\"\", pulso:\"\",saturacion:\"\", temperatura:\"\", tratamiento:\"\",\nhemo:\"\"  })\n\nconst [paciente,setpaciente] =  useState<Paciente>({\n  _id:\"\", alergia:\"\", email:\"\", fechanacimiento:new Date(),\n  nacionalidad:\"\", nombre:\"\", otrosdatos:\"\", previsionsalud:\"\",rut:\"\",sexo:\"\",\n  direccion:\"\", telefono:\"\"\n});\nconst [citaprevia, setCitaprevia]= useState<Citasprevias>({\n  _id:\"\", desde:new Date(), hasta:new Date(), motivo:\"\",paciente: paciente\n});\n    \n    const [eventlist, seteventlist] =  useState<ievento[]>([\n    ]);\n    useEffect(()=>{\n      if (citasprevias && citasprevias.length>0)\n      {\n        let auxeventos:ievento[]=[] ;\n        citasprevias.map(ele=>{\n          auxeventos.push({\n            title:ele.motivo,\n            //\n            start: ele.desde ,\n            end:   ele.hasta ,\n            bgcolor:\"#fafafa\",\n            name:ele.paciente.nombre,\n            id:ele._id\n          })\n          return true;\n        })\n        seteventlist(auxeventos);\n      }\n\n    },[citasprevias])\n    const [lastview, setlastview] = useState( localStorage.getItem('lastview')||'MONTH' );\n    const { pacientes } = usePaciente();\n\n\n  const onDoubleClick=(e:any) =>{\n    console.log(e);\n  }\n  const onSelectEvent = (e:any)=>{\n    let resultado =  citasprevias.find(p=>{return p._id=== e.id});\n    setcitav(true);\n    FormaCita.setFieldsValue({\n      id:resultado?._id ,\n      motivo:resultado?.motivo ,\n      paciente:resultado?.paciente._id,\n      \n      desde: moment(new Date(resultado?.desde!), \"YYYY-MM-DD hh:mm:ss a\"),\n      hasta: moment(new Date(resultado?.hasta!), \"YYYY-MM-DD hh:mm:ss a\"),\n    });\n    setpaciente({\n      _id:resultado?.paciente._id||\"\", alergia:\"\", email:\"\", fechanacimiento:new Date(),\n      nacionalidad:\"\", nombre:\"\", otrosdatos:\"\", previsionsalud:\"\",rut:\"\",sexo:\"\",\n      direccion:\"\", telefono:\"\"\n    });\n    \n    setCitaprevia(resultado! );\n  }\n  const onViewChange = (e:any)=>{\n    setlastview(e);\n    localStorage.setItem('lastView', e);\n  }\n  const agregarEvento= ()=>{\n\n    setcitav(true);\n    FormaCita.setFieldsValue({\n      id:\"\",\n      motivo:\"\",\n      paciente:\"\",\n      desde:moment(new Date() , \"YYYY-MM-DD\"),\n      hasta:moment(new Date() , \"YYYY-MM-DD\"),\n    })\n      \n      \n  }\n  const onFinishCita = async (values:{id:string, desde:Moment, hasta:Moment, motivo:string , paciente: string })=>{\n    \n    postcitaprevia({...values, _id: values.id, desde: new Date(values.desde.toDate().toISOString() ),\n       hasta: new Date(values.hasta.toDate().toISOString() )  })\n    .then(respuesta=>{\n      seteventlist([...eventlist, {\n        title:respuesta.motivo ,\n        start: respuesta.desde,\n        end: respuesta.hasta,\n        bgcolor:\"#fafafa\",\n        name:respuesta.paciente.nombre,\n        id:respuesta._id\n      }])\n      if (values.id.length===0)\n      {\n        setCitasprevias([...citasprevias, respuesta ]);\n      }\n      else\n      {\n        setCitasprevias(citasprevias.map(ele=>{\n          if (ele._id=== values.id)\n            return {\n              ...ele,\n              motivo: values.motivo,\n              desde: values.desde.toDate(),\n              hasta: values.hasta.toDate() ,\n\n             };\n          else\n            return ele;\n        }) );\n      }\n      message.success(\"Se almacenó correctamente la cita previa\");\n      setcitav(false);\n    })\n  }\n  const onFinishConsulta =async (values: {peso:string, estatura:string, temperatura:string, \n    presionalterial:string, imc:string, pulso:string, hemo:string, fecha:Moment, \n  anamnesis:string, diagnostico:string , tratamiento:string, medicamento:string, motivo:string,\n  saturacion:string,\n  fechaproximaatencion:Moment})=>\n  {\n    const citax = {\n      _id: citaprevia.cita?citaprevia.cita!._id:\"\",\n      peso: values.peso,\n      estatura: values.estatura,\n      temperatura: values.temperatura,\n      presionalterial: values.presionalterial,\n      imc: values.imc,\n      pulso: values.pulso,\n      hemo: values.hemo,\n      fecha:  new Date(values.fecha.toDate().toISOString() ),\n      anamnesis: values.anamnesis,\n      diagnostico: values.diagnostico,\n      tratamiento: values.tratamiento,\n      medicamento: values.medicamento,\n      motivo:values.motivo,\n      saturacion: values.saturacion,\n      fechaproximaatencion: new Date(values.fechaproximaatencion.toISOString() ),\n    };\n    let respuesta:Cita =  await postcita({...citax}, paciente._id );\n    let respuestaConAdjunto:Cita = { ...respuesta };\n    if (adjunto)\n    {\n      respuestaConAdjunto= await postFileCita(respuesta._id , adjunto! );\n      message.success(`Consulta realizada en fecha ${respuestaConAdjunto.fecha.toString() } ahora tiene adjunto`)\n    }\n    const citap: Citaspreviasplanas={\n      _id: FormaCita.getFieldValue(\"id\") ,\n      cita: respuestaConAdjunto._id ,\n      desde:FormaCita.getFieldValue(\"desde\").toDate() ,\n      hasta: FormaCita.getFieldValue(\"hasta\").toDate(),\n      motivo:FormaCita.getFieldValue(\"motivo\"),\n      paciente: FormaCita.getFieldValue(\"paciente\") ,\n    } \n    //console.log(citap)\n    await postcitaprevia(citap);\n    message.success(\"Se almacenó correctamente la consulta\");\n    setcitav2(false);\n\n\n  }\n  const cambiaDesde=(valor:Moment|null)=>{\n    if (valor)\n    {\n      FormaCita.setFieldsValue({\n        hasta:valor.clone().add(30,\"minutes\")\n      })\n    }\n  }\n  const eventStyleGetter = (event:any , start:any, end:any,isSelected:Boolean)=> {\n\n    const style={\n        backgroundColor:\"yellow\",\n        borderRadius:\"0px\",\n        opacity:0.8,\n        display:\"block\",\n        color:\"red\"\n      }\n      return {\n        style\n      }\n  }\n  const abrirCita=()=>{\n    agregarEvento()\n  }\n  return (\n    <>\n    <div className=\"calendar-screen\">\n        <Row gutter={12} >\n          <Col span={12} offset={12}>\n            <Button type=\"primary\" shape=\"circle\" icon={<PlusOutlined />} size={'large'} onClick={abrirCita} />\n          </Col>\n        </Row>\n    <Calendar localizer={localizer}\n    events={eventlist}\n    startAccessor=\"start\"\n    endAccessor=\"end\"\n    messages={messages}\n    eventPropGetter= {eventStyleGetter}\n    onDoubleClickEvent={onDoubleClick}\n    onSelectEvent = {onSelectEvent}\n    onView = {onViewChange}\n    view= { vistaActual(lastview) }\n    components = { {\n      event: CalendarEvent\n    } }\n    />\n  </div>\n  <Drawer\n    title=\"Cita\"\n    width={720}\n    height={500}\n    onClose={()=>{ setcitav(false); }}\n    visible={citav}\n    bodyStyle={{ paddingBottom: 60 }}\n    placement=\"bottom\"\n  >\n      <Form\n      form= {FormaCita}\n      name=\"formcita\"\n      labelCol={{ span: 2 }}\n      wrapperCol={{ span: 16 }}\n      size={\"small\"}\n      initialValues={{ remember: true }}\n      onFinish={ onFinishCita }\n      onFinishFailed={()=>{}}\n      autoComplete=\"off\">\n        <Form.Item\n                  label=\"Paciente\"\n                  name=\"paciente\">\n                  <Select\n                    showSearch\n                    style={{ width: 400 }}\n                    placeholder=\"Selecciona un paciente\"\n                    optionFilterProp=\"children\"\n                    onChange={()=>{}}\n                    onSearch={()=>{}}\n                    filterOption={(input, option) =>\n                      option?.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                    }>\n                    {\n                      pacientes.map(({ _id, nombre }: Paciente) =>{\n                        return (\n                          <Option key={_id} value={_id}>{nombre}</Option>\n                        )\n                      })\n                    }\n                  </Select>\n                  \n                </Form.Item>\n        <Form.Item label=\"Desde\" name=\"desde\">\n          <DatePicker \n            showTime={{ format: 'HH:mm' }}\n            format=\"YYYY-MM-DD HH:mm\"\n            onChange={cambiaDesde}\n          />\n        </Form.Item>\n        <Form.Item label=\"Hasta\" name=\"hasta\">\n          <DatePicker \n            showTime={{ format: 'HH:mm' }}\n            format=\"YYYY-MM-DD HH:mm\"\n          />\n        </Form.Item>\n        <Form.Item label=\"Motivo\" name=\"motivo\"\n        rules={[{ required: true, message: 'Por favor ingrese motivo de consulta' }]}>\n          <TextArea />\n        </Form.Item>\n        <Form.Item label=\"ID\" name=\"id\" hidden={true}>\n          <Input />\n        </Form.Item>\n        <Form.Item label=\"cita\" name=\"idcita\" hidden={true}>\n          <Input />\n        </Form.Item>\n        <Form.Item wrapperCol={{ offset: 8, span: 16,  }}>\n          <Button type=\"primary\" htmlType=\"submit\" icon={<SaveOutlined />} disabled={ !!(citaprevia.cita) } >\n            Guardar cita\n          </Button>\n        </Form.Item>\n        <Form.Item wrapperCol={{ offset: 8, span: 16,  }}>\n          <Button type=\"primary\" htmlType=\"button\"  icon={<SolutionOutlined />} onClick={()=>{\n            \n            setcitav2(true);\n            if (citaprevia.cita)\n            {\n              FormaCitaf.setFieldsValue({\n                fecha: moment(new Date(citaprevia.cita.fecha), \"YYYY-MM-DD hh:mm:ss a\"),\n                fechaproximaatencion: moment(new Date(citaprevia.cita.fechaproximaatencion ), \"YYYY-MM-DD hh:mm:ss a\"),\n                motivo: citaprevia.cita.motivo ,\n                anamnesis: citaprevia.cita.anamnesis ,\n                presionalterial: citaprevia.cita.presionalterial ,\n                pulso:  citaprevia.cita.presionalterial,\n                estatura: citaprevia.cita.estatura ,\n                peso: citaprevia.cita.peso,\n                imc: citaprevia.cita.imc ,\n                temperatura: citaprevia.cita.temperatura,\n                hemo: citaprevia.cita.hemo,\n                medicamento: citaprevia.cita.medicamento ,\n                diagnostico:citaprevia.cita.diagnostico,\n                tratamiento: citaprevia.cita.tratamiento ,\n                saturacion: citaprevia.cita.saturacion\n              })\n            }\n            else\n            {\n              FormaCitaf.setFieldsValue({\n                fecha: moment(new Date() , \"YYYY-MM-DD\"),\n                fechaproximaatencion: moment(new Date() , \"YYYY-MM-DD\"),\n                motivo:\"\",\n                anamnesis:\"\",\n                presionalterial:\"\",\n                pulso:\"\",\n                estatura:\"\",\n                peso:\"\",\n                imc:\"\",\n                temperatura:\"\",\n                hemo:\"\",\n                medicamento:\"\",\n                diagnostico:\"\",\n                tratamiento:\"\",\n                saturacion:\"\"\n              })\n            }\n          }} >\n            {!citaprevia.cita ? \"Generar consulta\": \"Mostrar consulta\"}\n          </Button>\n        </Form.Item>\n      </Form>\n  </Drawer>\n  <ConsultaComponente paciente={paciente} citaactual={ cita2  } \n        cita={citav2} setcita={ setcitav2 } FormaCita={ FormaCitaf } \n        onFinishCita={ onFinishConsulta } cambiarAdjuntoBefore={cambiarAdjuntoBefore}  />\n  </>\n  )\n}","import { useEffect, useState } from \"react\"\nimport { fetchcitasprevias } from \"../helpers/serviceCitasprevias\";\nimport { Citasprevias } from \"../interfaces/fetchCitasPrevias\";\n\nexport const useCitaprevia=()=>{\n const [isLoading, setIsLoading]=    useState(true);\n const [citasprevias, setCitasprevias] =  useState<Citasprevias[]>([]);\n useEffect(()=>{\n    fetchcitasprevias().then(citasprevias=>{\n        setIsLoading(false);\n        setCitasprevias(citasprevias);\n    });\n }, [] )\n return {\n    isLoading,\n    setIsLoading,\n    citasprevias,\n    setCitasprevias\n }\n}","import Icon from '@ant-design/icons';\n\nimport { Layout, Menu,  } from 'antd';\nimport {\n    BrowserRouter as Router,\n    Link\n  } from 'react-router-dom';\n\nimport {\n  TeamOutlined,\n  UserOutlined,\n  DollarOutlined,\n  SettingFilled,\n  BarcodeOutlined,\n  ShoppingCartOutlined,\n  MedicineBoxOutlined,\n  HomeOutlined\n} from '@ant-design/icons';\n\n\nimport {    ReactNode, SetStateAction, useContext, useEffect, useState } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom'\nimport { CategoriasPage } from '../pages/categoriasPage';\nimport { MovimientosPage } from '../pages/movimientosPage';\nimport { ProductosPage } from '../pages/productosPage';\nimport { ClientesPage } from '../pages/clientesPage';\nimport { AuthContext } from '../context/AuthContext';\nimport { PacientesPage } from '../pages/pacientesPage';\nimport { HomePage } from '../pages/homePage';\nimport { CalendarioPage } from '../pages/calendarioPage';\n\n\nconst { Header, Content, Footer, Sider } = Layout;\nconst { SubMenu } = Menu;\n\n\nconst HeartSvg = () => (\n  <svg width=\"1em\" height=\"1em\" fill=\"currentColor\" viewBox=\"0 0 1024 1024\">\n    <path d=\"M923 283.6c-13.4-31.1-32.6-58.9-56.9-82.8-24.3-23.8-52.5-42.4-84-55.5-32.5-13.5-66.9-20.3-102.4-20.3-49.3 0-97.4 13.5-139.2 39-10 6.1-19.5 12.8-28.5 20.1-9-7.3-18.5-14-28.5-20.1-41.8-25.5-89.9-39-139.2-39-35.5 0-69.9 6.8-102.4 20.3-31.4 13-59.7 31.7-84 55.5-24.4 23.9-43.5 51.7-56.9 82.8-13.9 32.3-21 66.6-21 101.9 0 33.3 6.8 68 20.3 103.3 11.3 29.5 27.5 60.1 48.2 91 32.8 48.9 77.9 99.9 133.9 151.6 92.8 85.7 184.7 144.9 188.6 147.3l23.7 15.2c10.5 6.7 24 6.7 34.5 0l23.7-15.2c3.9-2.5 95.7-61.6 188.6-147.3 56-51.7 101.1-102.7 133.9-151.6 20.7-30.9 37-61.5 48.2-91 13.5-35.3 20.3-70 20.3-103.3 0.1-35.3-7-69.6-20.9-101.9z\" />\n  </svg>\n);\nconst HeartIcon = (props: ReactNode ) => <Icon component={HeartSvg} style={{ color: 'hotpink' }}   />;\n\nexport const AppRouter=()=>{\n  \n  const mostrarIcono=(icono:string):ReactNode=>{\n    switch (icono) {\n      case \"UserOutlined\":\n        return <UserOutlined/>    \n      case \"DollarOutlined\":\n        return <DollarOutlined/>\n      case \"BarcodeOutlined\":\n        return <BarcodeOutlined />\n      case \"ShoppingCartOutlined\":\n        return <ShoppingCartOutlined />\n      case \"MedicineBoxOutlined\":\n        return <MedicineBoxOutlined/>\n      case \"HomeOutlined\":\n        return <HomeOutlined/>\n      default:\n        return <TeamOutlined/>\n    }\n    \n  }\n  const { logout, auth } = useContext( AuthContext );\n  useEffect(()=>{\n    console.log(auth)\n }, [auth] )\n    const salirApp=()=>{\n      logout();\n    }\n    const [colapsado, setcolapsado] = useState(false);\n    const onCollapse = (collapsed:SetStateAction<boolean>) => {\n        setcolapsado(collapsed );\n      };\n    return (\n        <Router>\n        <Layout style={{ minHeight: '100vh' }}>\n          <Sider collapsible collapsed={colapsado} onCollapse={onCollapse}>\n            <div className=\"logo\" />\n            <Menu theme=\"dark\" defaultSelectedKeys={['1']} mode=\"inline\">\n            {\n            auth.opciones?.map((elemento)=>{\n              return (elemento.clave.split(\"_\").length===1) &&\n              <SubMenu key={elemento.clave} icon= { mostrarIcono(elemento.ruta) } title={elemento.titulo }>\n                {\n                  auth.opciones?.filter(elementod=>{\n                    return elementod.clave.startsWith(elemento.clave+'_');\n                  }).map(opcion=>{\n                    if (opcion.clave.split(\"_\").length===2) \n                    {\n                      if (opcion.ruta.includes(\"/\")) \n                      { \n                        return <Menu.Item key={opcion.clave}><Link to={opcion.ruta}>{opcion.titulo}</Link></Menu.Item>\n                      }\n                      else\n                      { \n                        return <SubMenu key={opcion.clave} icon= { mostrarIcono(opcion.ruta) } title={opcion.titulo }>\n                          {\n                          auth.opciones?.filter(elementoe=>{\n                            return elementoe.clave.startsWith(opcion.clave+'_');\n                          })\n                          .map(opcionx=>{\n                            return <Menu.Item key={opcionx.clave}><Link to={opcionx.ruta}>{opcionx.titulo}</Link></Menu.Item>\n                          })\n                          }\n                        </SubMenu>\n                      }\n                    }\n                    return <h1>ok</h1>\n                  })\n                }\n              </SubMenu>\n              \n            })\n            }\n            <SubMenu key=\"sub3\" icon={<SettingFilled />} title=\"Configurar\">\n              <Menu.Item key=\"11\" onClick={salirApp} icon={<HeartIcon   />} >Salir de la App </Menu.Item>\n            </SubMenu>\n          </Menu>\n          </Sider>\n          <Layout className=\"site-layout\">\n            <Header className=\"site-layout-background\" style={{ padding: 0 }} />\n            <Content style={{ margin: '16px 16px' }}>\n                <Switch>\n                    <Route exact path=\"/app/home\" component={HomePage }/>\n                    <Route exact path=\"/app/categorias\" component={CategoriasPage }/>\n                    <Route exact path=\"/app/productos\" component={ProductosPage }/>\n                    <Route exact path=\"/app/clientes\" component={ClientesPage }/>\n                    <Route exact path=\"/app/movimientos\" component={MovimientosPage }/>\n                    <Route exact path=\"/app/pacientes\" component={PacientesPage }/>\n                    <Route exact path=\"/app/calendario\" component={CalendarioPage }/>\n                    <Redirect to =\"/app/movimientos\"/>\n                </Switch>\n            </Content>\n            <Footer style={{ textAlign: 'center' }}>Software Manta ©2018 Created by ManTalents</Footer>\n          </Layout>\n        </Layout>\n        </Router>\n    )\n}","import {\n  Form,\n  Input,\n  Button,\n} from 'antd';\nconst formItemLayout = {\n    labelCol: {\n      xs: { span: 24 },\n      sm: { span: 8 },\n    },\n    wrapperCol: {\n      xs: { span: 24 },\n      sm: { span: 16 },\n    },\n  };\n  const tailFormItemLayout = {\n    wrapperCol: {\n      xs: {\n        span: 24,\n        offset: 0,\n      },\n      sm: {\n        span: 16,\n        offset: 8,\n      },\n    },\n  };\n\nexport const RegisterPage = ()=>{\n    const [form] = Form.useForm();\n\n    const onFinish = (values: any) => {\n        console.log('Received values of form: ', values);\n    };\n\n    return (\n        <Form\n          {...formItemLayout}\n          form={form}\n          name=\"register\"\n          onFinish={onFinish}\n          initialValues={{\n            residence: ['zhejiang', 'hangzhou', 'xihu'],\n            prefix: '86',\n          }}\n          scrollToFirstError\n        >\n          <Form.Item\n            name=\"email\"\n            label=\"E-mail\"\n            rules={[\n              {\n                type: 'email',\n                message: 'The input is not valid E-mail!',\n              },\n              {\n                required: true,\n                message: 'Please input your E-mail!',\n              },\n            ]}\n          >\n            <Input />\n          </Form.Item>\n    \n          <Form.Item\n            name=\"password\"\n            label=\"Password\"\n            rules={[\n              {\n                required: true,\n                message: 'Please input your password!',\n              },\n            ]}\n            hasFeedback\n          >\n            <Input.Password />\n          </Form.Item>\n    \n          <Form.Item\n            name=\"confirm\"\n            label=\"Confirm Password\"\n            dependencies={['password']}\n            hasFeedback\n            rules={[\n              {\n                required: true,\n                message: 'Please confirm your password!',\n              },\n              ({ getFieldValue }) => ({\n                validator(_, value) {\n                  if (!value || getFieldValue('password') === value) {\n                    return Promise.resolve();\n                  }\n                  return Promise.reject(new Error('The two passwords that you entered do not match!'));\n                },\n              }),\n            ]}\n          >\n            <Input.Password />\n          </Form.Item>\n    \n          <Form.Item\n            name=\"nickname\"\n            label=\"Nickname\"\n            tooltip=\"What do you want others to call you?\"\n            rules={[{ required: true, message: 'Please input your nickname!', whitespace: true }]}\n          >\n            <Input />\n          </Form.Item>\n          <Form.Item {...tailFormItemLayout}>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Register\n            </Button>\n          </Form.Item>\n        </Form>\n      );\n}","import { Redirect, Route, RouteProps } from 'react-router-dom'\n\ninterface PublicRouteProps extends RouteProps {\n    isAuthenticated: boolean;\n    component: any;\n}\n\n\nexport const PublicRoute = (props: PublicRouteProps) => {\n    const { component: Component, isAuthenticated, ...rest } = props;\n    return (\n        <Route { ...rest }\n            render={ (props) => (\n                ( !isAuthenticated )\n                    ? <Component { ...props } />\n                    : <Redirect to=\"/app\" />\n            )} \n        />\n    )\n}\n\n\n\n","import { Redirect, Route, RouteProps } from 'react-router-dom'\n\ninterface PrivateRouteProps extends RouteProps {\n    isAuthenticated: boolean;\n    component: any;\n}\n\n\nexport const PrivateRoute = (props: PrivateRouteProps) => {\n    const { component: Component, isAuthenticated, ...rest } = props;\n    return (\n        <Route { ...rest }\n            render={ (props) => (\n                ( isAuthenticated )\n                    ? <Component { ...props } />\n                    : <Redirect to=\"/auth\" />\n            )} \n        />\n    )\n}\n\n\n\n","import {  Switch, Redirect } from 'react-router-dom'\nimport { LoginPage } from '../pages/loginPage';\nimport { AppRouter } from './AppRouter';\nimport {\n    BrowserRouter as Router,\n  } from 'react-router-dom';\nimport { RegisterPage } from '../pages/registerPage';\nimport { PublicRoute } from './PublicRoute';\nimport { PrivateRoute } from './PrivateRoute';\nimport { useContext, useEffect } from 'react';\nimport { AuthContext } from '../context/AuthContext';\n\nexport const AuthRouter=()=>{\n    const { auth, verificaToken } = useContext( AuthContext );\n\n\n    useEffect( () => {\n        verificaToken();\n    },[verificaToken])\n\n    \n    return (\n        <Router>\n            <Switch>\n                <PrivateRoute isAuthenticated={auth.logged }  path=\"/app\" component={AppRouter }/ >\n                <PublicRoute isAuthenticated={auth.logged} exact path=\"/auth/login\" component={LoginPage }/>\n                <PublicRoute isAuthenticated={auth.logged} exact path=\"/auth/register\" component={RegisterPage }/>\n                <Redirect to =\"/auth/login\"/>\n            </Switch>\n        </Router>\n    )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { AuthProvider } from './context/AuthContext';\nimport './index.css';\nimport './styles.css';\nimport { AuthRouter } from './Routers/AuthRouter';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AuthProvider>\n    <AuthRouter />\n    </AuthProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}