{"version":3,"sources":["api/cafeApi.tsx","helpers/serviceLogin.tsx","context/AuthContext.tsx","pages/loginPage.tsx","helpers/serviceCategorias.tsx","hooks/useCafe.tsx","helpers/tableUtils.tsx","pages/categoriasPage.tsx","helpers/serviceMovimientos.tsx","helpers/servicePersonas.tsx","helpers/serviceProductos.tsx","hooks/useProducto.tsx","pages/movimientosPage.tsx","hooks/useMovimiento.tsx","hooks/usePersona.tsx","pages/productosPage.tsx","Routers/AppRouter.tsx","pages/registerPage.tsx","Routers/PublicRoute.tsx","Routers/PrivateRoute.tsx","Routers/AuthRouter.tsx","index.tsx"],"names":["cafeApi","axios","create","baseURL","token","localStorage","getItem","postlogin","usuario","clave","a","post","correo","password","resp","data","renovartoken","get","headers","AuthContext","createContext","auth","uid","checking","logged","name","email","opciones","_id","ruta","titulo","login","verificaToken","logout","initialState","AuthProvider","children","useState","setAuth","setItem","console","log","nombre","useCallback","undefined","Provider","value","removeItem","LoginPage","useContext","onFinish","values","username","ok","labelCol","span","wrapperCol","initialValues","remember","onFinishFailed","errorInfo","autoComplete","Item","label","rules","required","message","Password","valuePropName","offset","type","htmlType","fetchcategorias","categorias","postcategoria","categoria","length","put","useCafe","isLoading","setIsLoading","setCategorias","useEffect","then","tableColumnTextFilterConfig","searchInputHolder","current","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","style","padding","ref","node","placeholder","onChange","e","target","onPressEnter","width","marginBottom","display","onClick","icon","SearchOutlined","size","marginRight","filterIcon","filtered","color","onFilterDropdownVisibleChange","visible","setTimeout","select","CategoriasPage","Form","useForm","Forma","columns","title","dataIndex","key","render","text","onFilter","record","toLowerCase","includes","toString","sorter","b","fixed","shape","EditOutlined","setformulario","setcategoria","setFieldsValue","formulario","gutter","PlusOutlined","orientation","tableLayout","loading","rowKey","pagination","defaultPageSize","showSizeChanger","pageSizeOptions","scroll","x","dataSource","height","onClose","bodyStyle","paddingBottom","placement","form","respuesta","map","ele","success","catch","error","SaveOutlined","fetchmovimientos","movimientos","postmovimiento","idx","movimiento","fetchpersonas","personas","fetchproductos","productos","postproducto","producto","id","useProducto","setProductos","Option","Select","MovimientosPage","codigo","valor","substr","moment","format","setmovimiento","auxiliar","forEach","elemento","push","item","cantidad","precio","total","cliente","subtotal","iva","descuento","fecha","setMovimientos","useMovimiento","Date","setPersonas","usePersona","onValuesChange","_","rowsCopy","totalAuxiliar","fieldGroup","index","splice","toISOString","estado","clienteAuxiliar","filter","p","toDate","direccion","telefono","identificacion","correoelectronico","showSearch","optionFilterProp","onSearch","filterOption","input","option","indexOf","List","fields","add","remove","field","align","fieldKey","noStyle","disabled","MinusCircleOutlined","block","ProductosPage","setproducto","nombreCategoria","min","Header","Layout","Content","Footer","Sider","SubMenu","Menu","HeartSvg","fill","viewBox","d","HeartIcon","props","Icon","component","AppRouter","mostrarIcono","icono","UserOutlined","DollarOutlined","BarcodeOutlined","ShoppingCartOutlined","TeamOutlined","colapsado","setcolapsado","minHeight","collapsible","collapsed","onCollapse","className","theme","defaultSelectedKeys","mode","split","elementod","startsWith","opcion","to","elementoe","opcionx","SettingFilled","margin","exact","path","textAlign","formItemLayout","xs","sm","tailFormItemLayout","RegisterPage","residence","prefix","scrollToFirstError","hasFeedback","dependencies","getFieldValue","validator","Promise","reject","Error","resolve","tooltip","whitespace","PublicRoute","Component","isAuthenticated","rest","PrivateRoute","AuthRouter","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3b39c4f7.chunk.js","sourcesContent":["import axios from 'axios'\n\n\nexport const cafeApi = axios.create(\n    {\n        baseURL: 'https://jomilimon.herokuapp.com/api'\n        //baseURL: 'http://localhost:8080/api'\n        //baseURL: 'http://192.168.100.24:8080/api'\n    }\n)","import { cafeApi } from \"../api/cafeApi\"\nimport { PostLogin } from \"../interfaces/postLogin\";\n\nconst token = localStorage.getItem('token') || '';\n\nexport const postlogin= async (usuario: string, clave:string): Promise<PostLogin> =>{\n    let resp;\n    resp = await cafeApi.post<PostLogin>(`/auth/login`, { correo:usuario, password:clave } );\n    return resp.data;\n}\nexport const renovartoken = async ():Promise<PostLogin>=>{\n    let resp;\n    resp = await cafeApi.get<PostLogin>(`/auth`, { headers:{\n        'x-token':token\n    } } );\n    return resp.data;\n}","import React, { createContext, useCallback, useState } from 'react';\nimport { postlogin, renovartoken } from '../helpers/serviceLogin';\n\n\ntype TipoMetodo = (email: string, password:string) => Promise<boolean>;\ntype TipoMetodo2 = () => Promise<boolean>;\ntype TipoMetodo3 = () => boolean;\n\ninterface auth{  \n        uid?:string,\n        checking:boolean,\n        logged:boolean,\n        name?:string,\n        email?:string,\n        opciones?:\n            {\n                _id: string,\n                clave:string,\n                ruta:string,\n                titulo:string,\n            }[]\n        \n}\n\ninterface respuesta{\n    auth:auth,\n    login: TipoMetodo,\n    verificaToken: TipoMetodo2,\n    logout: TipoMetodo3\n}\n\nexport const AuthContext = createContext<respuesta>({auth: {uid: '',\nchecking: true,\nlogged: true,\nname: '',\nemail: '',\nopciones:[{_id:'',clave:'', ruta:'', titulo:''}]\n} \n, login: async (email:string, password:string)=>{return false;},\nverificaToken:  async () => {return false;}   ,\nlogout: ()=> {return true;} });\n\nconst initialState = {\n    uid: '',\n    checking: true,\n    logged: false,\n    name: '',\n    email: '',\n    opciones: [{_id:'',clave:'', ruta:'', titulo:''}]\n};\n\n\nexport const AuthProvider: React.FC = ({ children }) => {\n\n    const [ auth, setAuth ] = useState<auth>(initialState)\n\n    const login = async( email:string, password :string) => {\n\n\n        const resp = await postlogin(email, password );\n\n        if ( resp.usuario ) {\n            localStorage.setItem('token', resp.token );\n            const { usuario } = resp;\n\n            console.log(usuario.opciones)\n\n            setAuth({\n                uid: usuario.uid ,\n                checking: false,\n                logged: true,\n                name: usuario.nombre,\n                email: usuario.correo,\n                opciones: usuario.opciones,\n            });\n\n        }\n\n        return true;\n\n    }\n    const verificaToken = useCallback( async() => {\n\n        const token = localStorage.getItem('token');\n        // Si token no existe\n        if ( !token ) {\n            setAuth({\n                uid: undefined,\n                checking: false,\n                logged: false,\n                name: undefined,\n                email: undefined,\n                opciones:[]\n            })\n\n            return false;\n        }\n\n        const resp = await renovartoken();\n        if ( resp ) {\n            localStorage.setItem('token', resp.token );\n            const { usuario } = resp;\n\n            setAuth({\n                uid: usuario.uid,\n                checking: false,\n                logged: true,\n                name: usuario.nombre,\n                email: usuario.correo,\n                opciones: usuario.opciones\n            });\n\n            return true;\n        } else {\n            setAuth({\n                uid: undefined,\n                checking: false,\n                logged: false,\n                name: undefined,\n                email: undefined,\n            });\n\n            return false;\n        }\n\n    }, [])\n\n    const logout = () => {\n        localStorage.removeItem('token');\n        setAuth({\n            checking: false,\n            logged: false,\n        });\n        return true;\n    }\n\n\n    \n\n\n    return (\n        <AuthContext.Provider value ={{\n            auth,\n            login,\n            verificaToken,\n            logout\n        }}>\n            { children }\n        </AuthContext.Provider>\n    )\n}\n\n","import { Form, Input, Button, Checkbox } from 'antd';\nimport { useContext } from 'react';\nimport { AuthContext } from '../context/AuthContext';\n\n\nexport const LoginPage = ()=>{\n  const { login } = useContext( AuthContext );\n    const onFinish = async (values: any) =>  {\n      const ok = await login( values.username, values.password );\n      console.log(ok)\n    };\n    \n      const onFinishFailed = (errorInfo: any) => {\n        console.log('Failed:', errorInfo);\n      };\n    return (\n        <Form\n      name=\"basic\"\n      \n      labelCol={{ span:6 }}\n      wrapperCol={{ span: 8 }}\n      initialValues={{ remember: true }}\n      onFinish={onFinish}\n      onFinishFailed={onFinishFailed}\n      autoComplete=\"off\"\n    >\n      <Form.Item\n        label=\"Username\"\n        name=\"username\"\n        rules={[{ required: true, message: 'Please input your username!' }]}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item\n        label=\"Password\"\n        name=\"password\"\n        rules={[{ required: true, message: 'Please input your password!' }]}\n      >\n        <Input.Password />\n      </Form.Item>\n\n      <Form.Item name=\"remember\" valuePropName=\"checked\" wrapperCol={{ offset: 8, span: 16 }}>\n        <Checkbox>Remember me</Checkbox>\n      </Form.Item>\n\n      <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Submit\n        </Button>\n      </Form.Item>\n    </Form>\n    )\n\n}","import { cafeApi } from \"../api/cafeApi\"\nimport { Categoria, FetchCategorias } from \"../interfaces/fetchCategorias\";\nconst token = localStorage.getItem('token') || '';\n\nexport const fetchcategorias = async (): Promise<Categoria[]> =>{\n    const resp= await  cafeApi.get<FetchCategorias>('/categorias');\n    return resp.data.categorias;\n}\nexport const postcategoria= async (categoria: Categoria): Promise<Categoria> =>{\n    let resp;\n    if (categoria._id.length>0)\n    {\n         resp = await cafeApi.put<Categoria>(`/categorias/${categoria._id}`, categoria, { headers:{\n            'x-token':token\n        } } );\n    }\n    else\n    {\n         resp = await cafeApi.post<Categoria>('/categorias', categoria, { headers:{\n            'x-token':token\n        } } );\n    }\n    return resp.data;\n}","import { useEffect, useState } from \"react\"\nimport { fetchcategorias } from \"../helpers/serviceCategorias\";\nimport { Categoria } from \"../interfaces/fetchCategorias\";\n\nexport const useCafe=()=>{\n const [isLoading, setIsLoading]=    useState(true);\n const [categorias, setCategorias] = useState<Categoria[]>([]); \n useEffect(()=>{\n    fetchcategorias().then(categorias=>{\n        setIsLoading(false);\n        setCategorias(categorias);\n    });\n }, [] )\n return {\n    isLoading,\n    setIsLoading,\n    categorias,\n    setCategorias\n }\n}","import {SearchOutlined} from '@ant-design/icons';\nimport {Button, Input} from 'antd';\nimport {ColumnType} from 'antd/lib/table';\n\nexport function tableColumnTextFilterConfig<T>(): ColumnType<T> {\n  const searchInputHolder: { current: Input | null } = {current: null};\n\n  return {\n    filterDropdown: ({setSelectedKeys, selectedKeys, confirm, clearFilters}) => {\n      return <div style={{padding: 8}}>\n        <Input\n          ref={node => searchInputHolder.current = node}\n          placeholder={'Search'}\n          value={selectedKeys[0]}\n          onChange={(e) => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n          onPressEnter={()=>confirm}\n          style={{width: 188, marginBottom: 8, display: 'block'}}\n        />\n        <Button\n          type=\"primary\"\n          onClick={()=>confirm()}\n          icon={<SearchOutlined/>}\n          size=\"small\"\n          style={{width: 90, marginRight: 8}}>\n          Buscar\n        </Button>\n        <Button size=\"small\" style={{width: 90}} onClick={clearFilters}>\n          Resetear\n        </Button>\n      </div>\n    },\n    filterIcon: filtered => <SearchOutlined style={{color: filtered ? '#1890ff' : undefined}}/>,\n    onFilterDropdownVisibleChange: (visible) => {\n      if (visible) {\n        setTimeout(() => searchInputHolder.current?.select());\n      }\n    },\n  }\n}","import { Table, Drawer, Button, Form, Input, message, Row, Col, Divider } from \"antd\";\nimport { SaveOutlined, PlusOutlined, EditOutlined } from '@ant-design/icons';\nimport { useState } from \"react\";\nimport { useCafe } from \"../hooks/useCafe\";\nimport { postcategoria } from \"../helpers/serviceCategorias\";\nimport { Categoria } from \"../interfaces/fetchCategorias\";\nimport { tableColumnTextFilterConfig } from \"../helpers/tableUtils\"\n\n\nexport const CategoriasPage= ()=>{\n    const crearCategoria=()=>{\n      setformulario(true);\n      setcategoria({_id:\"\", nombre:\"\"});\n      Forma.setFieldsValue({\n        nombre: \"\"\n      })\n    }\n    const [Forma] = Form.useForm();\n\n    const columns = [\n        {\n          title: 'Nombre',\n          dataIndex: 'nombre',\n          key: 'nombre',\n          render: (text: string) => text,\n          ...tableColumnTextFilterConfig<Categoria>(),\n          onFilter: (value: {}, record: Categoria  ):boolean => {\n            return record.nombre.toLowerCase().includes(value.toString().toLowerCase())\n          },\n          sorter: (a:Categoria, b:Categoria) => a.nombre.length - b.nombre.length,\n        },\n        {\n          title: 'Usuario',\n          dataIndex: ['usuario','nombre'],\n          key: 'usuario',\n        },\n        {\n          title: 'Acciones',\n          key: 'acciones',\n          width:200,\n          fixed:'right' as 'right',\n          render: ( record: Categoria) => <Button type=\"primary\" shape=\"circle\" icon={ <EditOutlined/> } onClick=\n          { ()=>\n          \n            { \n              setformulario(true); \n              setcategoria(record);\n              Forma.setFieldsValue({\n                nombre: record.nombre\n              })\n              \n            } \n          }/>,\n        },\n      ];\n      const { categorias, setCategorias, isLoading } = useCafe();\n      const [categoria, setcategoria] = useState<Categoria>({_id:'', nombre:''});\n      const [formulario, setformulario] = useState(false);\n      const onFinish = (values: {nombre:string}) => {\n        setcategoria({\n          _id: categoria._id,\n          nombre: values.nombre\n        })\n        postcategoria({...values, _id:categoria._id }).then(respuesta=>{\n          if (categoria._id.length>0)\n            setCategorias( categorias.map(ele=>{ if (ele._id===categoria._id) return {...ele, nombre: values.nombre  } ; else return ele;}) )\n          else\n            setCategorias([...categorias, respuesta])\n          message.success(\"Se almacenó correctamente la categoría\");\n          setformulario(false);\n        }).catch(error=>{\n          message.error(\"Se presentaron errores al intentar almacenar las categorias\");\n        });\n      };\n    return (\n      <>\n        <Row gutter={12} >\n          <Col span={12} offset={12}>\n            <Button type=\"primary\" shape=\"circle\" icon={<PlusOutlined />} size={'large'} onClick={crearCategoria} />\n          </Col>\n        </Row>\n        <Divider orientation=\"left\">Categorias/Grupos</Divider>\n        <Row gutter= {[16, 24]}>\n        <Table tableLayout='fixed'\n           loading= {isLoading}\n           rowKey='_id'\n           pagination={{ defaultPageSize: 5, showSizeChanger: true,\n           pageSizeOptions: ['5','10', '20', '30']}} \n           scroll={{ x: 1300 }}\n           dataSource={categorias} columns={columns} />\n        </Row>\n        <Drawer\n          title=\"Categoría\"\n          width={720}\n          height={300}\n          onClose={()=>{ setformulario(false); }}\n          visible={formulario}\n          bodyStyle={{ paddingBottom: 120 }}\n          placement=\"bottom\"\n        >\n          <Form\n              form= {Forma}\n              name=\"formcategoria\"\n              labelCol={{ span: 4 }}\n              wrapperCol={{ span: 12 }}\n              initialValues={{ remember: true }}\n              onFinish={ onFinish }\n              onFinishFailed={()=>{}}\n              autoComplete=\"off\">\n                <Form.Item\n                  label=\"Descripción\"\n                  name=\"nombre\"\n                  rules={[{ required: true, message: 'Por favor ingrese la descripción' }]}>\n                  <Input />\n                </Form.Item>\n                <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n                  <Button type=\"primary\" htmlType=\"submit\" icon={<SaveOutlined />}>\n                    Guardar\n                  </Button>\n                </Form.Item>\n              </Form>\n        </Drawer>\n      </>\n    )\n}","import { cafeApi } from \"../api/cafeApi\"\nimport { Movimiento, FetchMovimientos } from \"../interfaces/fetchMovimientos\";\nimport { PostMovimiento } from \"../interfaces/postMovimiento\";\n\nconst token = localStorage.getItem('token') || '';\n\nexport const fetchmovimientos = async (): Promise<Movimiento[]> =>{\n    const resp= await  cafeApi.get<FetchMovimientos>('/movimientos');\n    return resp.data.movimientos;\n}\nexport const postmovimiento= async (idx: string, movimiento: PostMovimiento): Promise<Movimiento> =>{\n    //console.log(JSON.stringify(movimiento) )\n    let resp;\n    if (idx.length>0)\n    {\n         resp = await cafeApi.put<Movimiento>(`/movimientos/${idx}`, movimiento, { headers:{\n            'x-token':token\n        } } );\n    }\n    else\n    {\n         resp = await cafeApi.post<Movimiento>('/movimientos', movimiento, { headers:{\n            'x-token':token\n        } } );\n    }\n    return resp.data;\n}","import { cafeApi } from \"../api/cafeApi\"\nimport { Persona, FetchPersonas } from \"../interfaces/fetchPersonas\";\n\nexport const fetchpersonas = async (): Promise<Persona[]> =>{\n    const resp= await  cafeApi.get<FetchPersonas>('/personas');\n    return resp.data.personas;\n}\n","import { cafeApi } from \"../api/cafeApi\"\nimport { Producto, FetchProductos, ProductoPlano } from \"../interfaces/fetchProductos\";\n\nconst token = localStorage.getItem('token') || '';\n\nexport const fetchproductos = async (): Promise<Producto[]> =>{\n    const resp= await  cafeApi.get<FetchProductos>('/productos');\n    return resp.data.productos;\n}\nexport const postproducto= async (producto: ProductoPlano): Promise<Producto> =>{\n    let resp;\n    console.log(producto);\n    if (producto.id.length>0)\n    {\n         resp = await cafeApi.put<Producto>(`/productos/${producto.id}`, producto, { headers:{\n            'x-token':token\n        } } );\n    }\n    else\n    {\n         resp = await cafeApi.post<Producto>('/productos', producto, { headers:{\n            'x-token':token\n        } } );\n    }\n    return resp.data;\n}","import { useEffect, useState } from \"react\"\nimport { fetchproductos } from \"../helpers/serviceProductos\";\nimport { Producto } from \"../interfaces/fetchProductos\";\n\nexport const useProducto=()=>{\n const [isLoading, setIsLoading]=    useState(true);\n const [productos, setProductos] = useState<Producto[]>([]); \n useEffect(()=>{\n    fetchproductos().then(productos=>{\n        setIsLoading(false);\n        setProductos(productos);\n    });\n }, [] )\n return {\n    isLoading,\n    setIsLoading,\n    productos,\n    setProductos\n }\n}","import { Table, Drawer, Button, Form, Input, message, Row, \n  Col, Divider, DatePicker, Select, Space, InputNumber,  } from \"antd\";\nimport { SaveOutlined, PlusOutlined, EditOutlined, MinusCircleOutlined } from '@ant-design/icons';\nimport { useState } from \"react\";\nimport { useMovimiento } from \"../hooks/useMovimiento\";\nimport { postmovimiento } from \"../helpers/serviceMovimientos\";\nimport {  Movimiento } from \"../interfaces/fetchMovimientos\";\nimport { tableColumnTextFilterConfig } from \"../helpers/tableUtils\"\nimport { usePersona } from \"../hooks/usePersona\";\nimport { useProducto } from \"../hooks/useProducto\";\nimport { Persona } from \"../interfaces/fetchPersonas\";\nimport { Producto } from \"../interfaces/fetchProductos\";\nimport { Producto as Productom } from \"../interfaces/fetchMovimientos\";\n\nimport { PostProducto } from \"../interfaces/postMovimiento\";\nimport moment, { Moment } from \"moment\";\n\nconst { Option } = Select;\n\nexport const MovimientosPage= ()=>{\n    const crearMovimiento=()=>{\n      setformulario(true);\n      setmovimiento({_id:\"\", fecha: new Date() , codigo:\"\", subtotal:0, iva:0, total:0, descuento:0});\n      Forma.setFieldsValue({\n        codigo: \"\",\n        cliente: \"\",\n        subtotal: 0,\n        iva: 0,\n        descuento: 0,\n        total: 0,\n        fecha: moment(\"2021-01-01\", \"YYYY-MM-DD\"),\n        productos: [{ item:\"\" , cantidad:1, precio:0 }]\n      })\n    }\n    const calcularTotal=(_:any ,values:{productos:PostProducto[]})=>{\n      const rowsCopy = [...values.productos ];\n      let totalAuxiliar=0;\n      values.productos.forEach((fieldGroup, index) => {\n        if (fieldGroup && fieldGroup.cantidad && fieldGroup.precio) {\n          fieldGroup.total = fieldGroup.cantidad * fieldGroup.precio;\n          totalAuxiliar+= fieldGroup.total;\n          rowsCopy.splice(index, 1, fieldGroup)\n          Forma.setFieldsValue({ productos: rowsCopy })\n        }\n      });\n      Forma.setFieldsValue(\n        { \n          subtotal: totalAuxiliar,\n          iva: totalAuxiliar*0.12,\n          total: totalAuxiliar*1.12\n        });\n    }\n    const [Forma] = Form.useForm();\n\n    const columns = [\n        {\n          title: 'Código',\n          dataIndex: 'codigo',\n          key: 'codigo',\n          width:150,\n          render: (text: string) => text,\n          ...tableColumnTextFilterConfig<Movimiento>(),\n          onFilter: (value: {}, record: Movimiento  ):boolean => {\n            return record.codigo.toLowerCase().includes(value.toString().toLowerCase())\n          },\n          sorter: (a:Movimiento, b:Movimiento) => a.codigo.length - b.codigo.length,\n        },\n        {\n            title:'Fecha',\n            dataIndex:'fecha',\n            key:'fecha',\n            width:200,\n            render: (valor: any) =>  (typeof(valor)===\"string\")?valor.substr(0,10) : moment(valor).format(\"YYYY-MM-DD\")  ,\n        },\n        {\n          title: 'Cliente',\n          dataIndex: ['cliente','nombre'],\n          key: 'cliente',\n        },\n        {\n          title: 'Acciones',\n          key: 'acciones',\n          width:200,\n          fixed:'right' as 'right',\n          render: ( record: Movimiento) => <Button type=\"primary\" shape=\"circle\" icon={ <EditOutlined/> } onClick=\n          { ()=>\n            \n            {\n              console.log(record) \n              setformulario(true); \n              setmovimiento(record);\n              let auxiliar: PostProducto[]=[] ;\n              record.productos?.forEach(\n                elemento=>{\n                  auxiliar.push({ item:elemento.item._id,\n                     cantidad: elemento.cantidad, precio: elemento.precio, total: elemento.cantidad*elemento.precio })\n                }\n              )\n              Forma.setFieldsValue({\n                codigo: record.codigo,\n                cliente: record.cliente?._id,\n                subtotal: record.subtotal,\n                iva: record.iva,\n                descuento: record.descuento,\n                total: record.total,\n                fecha: moment(record.fecha, \"YYYY-MM-DD\"),\n                productos: auxiliar\n              })\n              \n            } \n          }/>,\n        },\n      ];\n      const { movimientos, setMovimientos, isLoading } = useMovimiento();\n      const [movimiento, setmovimiento] = useState<Movimiento>({_id:'', fecha: new Date() , iva:0, descuento:0, subtotal:0, total:0, codigo:\"\",  });\n      const { personas } = usePersona();\n      const { productos } = useProducto();\n      const [formulario, setformulario] = useState(false);\n      const onFinish = (values: {codigo:string, fecha:Moment, subtotal:number, iva:number, descuento:number, cliente:string ,total:number, productos: PostProducto[]}) => {\n        setmovimiento({\n          _id: movimiento._id,\n          codigo: values.codigo,\n          fecha: new Date(values.fecha.toISOString().substr(0,10) ) ,\n          subtotal:values.subtotal,\n          iva:values.iva,\n          descuento:values.descuento,\n          total:values.total\n        })\n        let auxiliar:Productom[]=[];\n        values.productos.forEach(ele=>{\n          auxiliar.push(\n            { \n              cantidad: ele.cantidad, precio: ele.precio,\n               item:{ _id:ele.item , nombre:\"\", categoria:\"\", precio:0, estado:true }  ,\n               _id:\"\" \n            })\n        })\n\n        let clienteAuxiliar:Persona= personas.filter(p=>{return p._id===values.cliente})[0];\n\n        postmovimiento( movimiento._id, { codigo: values.codigo , fecha: values.fecha.toISOString().substr(0,10)  , cliente: values.cliente, productos: values.productos, subtotal: values.subtotal , iva: values.iva, descuento:values.descuento, total: values.total   } ).then(respuesta=>{\n          console.log(respuesta)\n          if (movimiento._id.length>0)\n            setMovimientos( movimientos.map(ele=>{ if (ele._id===movimiento._id)\n               return {\n                      ...ele, codigo: values.codigo,\n                      fecha: moment(values.fecha, \"YYYY-MM-DD\").toDate() ,\n                      cliente: { _id: clienteAuxiliar._id, nombre: clienteAuxiliar.nombre\n                      ,direccion: clienteAuxiliar.direccion, telefono:clienteAuxiliar.telefono\n                    , identificacion: clienteAuxiliar.identificacion, correoelectronico: clienteAuxiliar.correoelectronico,\n                     estado:true  }  ,\n                      descuento: values.descuento ,\n                      iva: values.iva, \n                      subtotal: values.subtotal, \n                      total: values.total ,\n                      productos: auxiliar,\n                      } ; else return ele;}) )\n          else\n            setMovimientos([...movimientos, {...respuesta, cliente:{ _id: clienteAuxiliar._id, nombre: clienteAuxiliar.nombre\n              ,direccion: clienteAuxiliar.direccion, telefono:clienteAuxiliar.telefono\n            , identificacion: clienteAuxiliar.identificacion, correoelectronico: clienteAuxiliar.correoelectronico,\n             estado:true  }}])\n          message.success(\"Se almacenó correctamente el movimiento\");\n          setformulario(false);\n        }).catch(error=>{\n          message.error(\"Se presentaron errores al intentar almacenar los movimientos\");\n        });\n      };\n    return (\n      <>\n        <Row gutter={12} >\n          <Col span={12} offset={12}>\n            <Button type=\"primary\" shape=\"circle\" icon={<PlusOutlined />} size={'large'} onClick={crearMovimiento} />\n          </Col>\n        </Row>\n        <Divider orientation=\"left\">Movimientos</Divider>\n        <Row gutter= {[16, 24]}>\n        <Table tableLayout='fixed' \n           loading= {isLoading}\n           rowKey='_id'\n           key=\"_id\"\n           pagination={{ defaultPageSize: 5, showSizeChanger: true,\n           pageSizeOptions: ['5','10', '20', '30']}} \n           scroll={{ x: 1300 }}\n           dataSource={movimientos} columns={columns} />\n        </Row>\n        <Drawer\n          title=\"Movimiento\"\n          width={720}\n          height={600}\n          onClose={()=>{ setformulario(false); }}\n          visible={formulario}\n          bodyStyle={{ paddingBottom: 120 }}\n          placement=\"bottom\"\n        >\n          <Form\n              form= {Forma}\n              name=\"formmovimiento\"\n              //labelCol={{ span: 2 }}\n              //wrapperCol={{ span: 6 }}\n              initialValues={{ remember: true }}\n              onValuesChange={calcularTotal}\n              onFinish={ onFinish }\n              onFinishFailed={()=>{}}\n              autoComplete=\"off\">\n                <Form.Item\n                  label=\"Código\"\n                  name=\"codigo\"\n                  style={{ width: 300 }}\n                  rules={[{ required: true, message: 'Por favor ingrese el código' }]}>\n                  <Input />\n                </Form.Item>\n                <Form.Item label=\"Fecha\" name=\"fecha\">\n                  <DatePicker/>\n                </Form.Item>\n                <Form.Item\n                  label=\"Cliente\"\n                  name=\"cliente\">\n                  <Select\n                    showSearch\n                    style={{ width: 400 }}\n                    placeholder=\"Selecciona una persona\"\n                    optionFilterProp=\"children\"\n                    onChange={()=>{}}\n                    onSearch={()=>{}}\n                    filterOption={(input, option) =>\n                      option?.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                    }>\n                    {\n                      personas.map(({ _id, nombre }: Persona) =>{\n                        return (\n                          <Option key={_id} value={_id}>{nombre}</Option>\n                        )\n                      })\n                    }\n                  </Select>\n                </Form.Item>\n                <Form.List name=\"productos\">\n                {(fields, { add, remove }) => (\n                <>\n                  {fields.map(field => (\n                    <Space key={field.key} style={{ display: 'flex', marginBottom: 8 }}  align=\"baseline\">\n                    <Form.Item\n                      name={[field.name, 'item']}\n                      fieldKey={[field.fieldKey, 'item']}\n                      >\n                      <Select\n                        showSearch\n                        style={{ width: 400 }}\n                        placeholder=\"Seleccione producto\"\n                        optionFilterProp=\"children\"\n                        onChange={()=>{}}\n                        onSearch={()=>{}}\n                        filterOption={(input, option) =>\n                          option?.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                        }>\n                        {\n                          productos.map(({ _id, nombre }: Producto) =>{\n                            return (\n                              <Option key={_id} value={_id}>{nombre}</Option>\n                            )\n                          })\n                        }\n                      </Select>\n                    </Form.Item>\n                    <Form.Item\n                      {...field}\n                      name={[field.name, 'cantidad']}\n                      fieldKey={[field.fieldKey, 'cantidad']}\n                      rules={[{ required: true, message: 'Debe ubicar el cantidad' }]}>\n                      <InputNumber placeholder=\"Cantidad\"  />\n                    </Form.Item>\n                    <Form.Item\n                      {...field}\n                      name={[field.name, 'precio']}\n                      fieldKey={[field.fieldKey, 'precio']}\n                      rules={[{ required: true, message: 'Debe ubicar el precio' }]}>\n                      <InputNumber placeholder=\"Precio\"  />\n                    </Form.Item>\n                    <Form.Item\n                    noStyle\n                    {...field}\n                    name={[field.name, 'total']}\n                    fieldKey={[field.fieldKey, 'total']}\n                  >\n                    <Input disabled placeholder=\"Total\" />\n                    </Form.Item>\n                    <MinusCircleOutlined onClick={() => {remove(field.name);  } } />\n                    </Space>\n                    ))}\n                    <Form.Item>\n                    <Button type=\"dashed\" onClick={() => add()} block icon={<PlusOutlined />}>\n                      Agregar\n                    </Button>\n                  </Form.Item>\n                </>\n                )}\n                </Form.List>\n                <Form.Item\n                  label=\"Subtotal\"\n                  name=\"subtotal\"\n                  style={{ width: 300 }}\n                  >\n                  <Input />\n                </Form.Item>\n                <Form.Item\n                  label=\"Iva\"\n                  name=\"iva\"\n                  style={{ width: 300 }}\n                  >\n                  <Input />\n                </Form.Item>\n                <Form.Item\n                  label=\"Descuento\"\n                  name=\"descuento\"\n                  style={{ width: 300 }}\n                  >\n                  <Input />\n                </Form.Item>\n                <Form.Item\n                  label=\"Total\"\n                  name=\"total\"\n                  style={{ width: 300 }}\n                  >\n                  <Input />\n                </Form.Item>\n                <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n                  <Button type=\"primary\" htmlType=\"submit\" icon={<SaveOutlined />}>\n                    Guardar\n                  </Button>\n                </Form.Item>\n          </Form>\n        </Drawer>\n      </>\n    )\n}","import { useEffect, useState } from \"react\"\nimport { fetchmovimientos } from \"../helpers/serviceMovimientos\";\nimport { Movimiento } from \"../interfaces/fetchMovimientos\";\n\nexport const useMovimiento=()=>{\n const [isLoading, setIsLoading]=    useState(true);\n const [movimientos, setMovimientos] = useState<Movimiento[]>([]); \n useEffect(()=>{\n    fetchmovimientos().then(movimientos=>{\n        setIsLoading(false);\n        setMovimientos(movimientos);\n    });\n }, [] )\n return {\n    isLoading,\n    setIsLoading,\n    movimientos,\n    setMovimientos\n }\n}","import { useEffect, useState } from \"react\"\nimport { fetchpersonas } from \"../helpers/servicePersonas\";\nimport { Persona } from \"../interfaces/fetchPersonas\";\n\nexport const usePersona=()=>{\n const [isLoading, setIsLoading]=    useState(true);\n const [personas, setPersonas] = useState<Persona[]>([]); \n useEffect(()=>{\n    fetchpersonas().then(personas=>{\n        setIsLoading(false);\n        setPersonas(personas);\n    });\n }, [] )\n return {\n    isLoading,\n    setIsLoading,\n    personas,\n    setPersonas\n }\n}","import { Table, Drawer, Button, Form, Input, message, Row, Col, Divider, \n  InputNumber, Select } from \"antd\";\nimport { SaveOutlined, PlusOutlined, EditOutlined } from '@ant-design/icons';\nimport { useState } from \"react\";\nimport { postproducto } from \"../helpers/serviceProductos\";\nimport { Producto } from \"../interfaces/fetchProductos\";\nimport { tableColumnTextFilterConfig } from \"../helpers/tableUtils\"\nimport { useProducto } from \"../hooks/useProducto\";\nimport { Categoria } from \"../interfaces/fetchCategorias\";\nimport { useCafe } from \"../hooks/useCafe\";\nconst { Option } = Select;\n\n\nexport const ProductosPage= ()=>{\n    \n    const crearProducto=()=>{\n      setformulario(true);\n      setproducto({_id:\"\", nombre:\"\", precio:0, categoria:{_id:\"\", nombre:\"\"}});\n      Forma.setFieldsValue({\n        nombre: \"\",\n        precio:0,\n        categoria:\"\"\n      })\n    }\n    const [Forma] = Form.useForm();\n\n    const columns = [\n        {\n          title: 'Nombre',\n          dataIndex: 'nombre',\n          key: 'nombre',\n          render: (text: string) => text,\n          ...tableColumnTextFilterConfig<Producto>(),\n          onFilter: (value: {}, record: Producto  ):boolean => {\n            return record.nombre.toLowerCase().includes(value.toString().toLowerCase())\n          },\n          sorter: (a:Producto, b:Producto) => a.nombre.length - b.nombre.length,\n        },\n        {\n            title: 'Categoria',\n            dataIndex: ['categoria','nombre'],\n            key: 'categoria',\n        },\n        {\n          title: 'Precio',\n          dataIndex: 'precio',\n          key: 'precio',\n        },\n        {\n          title: 'Acciones',\n          key: 'acciones',\n          width:200,\n          fixed:'right' as 'right',\n          render: ( record: Producto) => <Button type=\"primary\" shape=\"circle\" icon={ <EditOutlined/> } onClick=\n          { ()=>\n          \n            { \n              setformulario(true); \n              setproducto(record);\n              Forma.setFieldsValue({\n                nombre: record.nombre,\n                precio: record.precio,\n                categoria: record.categoria._id\n              })\n              \n            } \n          }/>,\n        },\n      ];\n      const { productos, setProductos, isLoading } = useProducto();\n      const { categorias } = useCafe();\n      const [producto, setproducto] = useState<Producto>({_id:'', nombre:'', precio:0, categoria:{_id:\"\", nombre:\"\"}});\n      const [formulario, setformulario] = useState(false);\n      const onFinish = (values: {nombre:string, precio:number, categoria: string}) => {\n        setproducto({\n          _id: producto._id,\n          nombre: values.nombre,\n          precio:values.precio,\n          categoria:{_id: values.categoria , nombre:\"\"}\n        })\n        let nombreCategoria=\"\";\n        if (values.categoria && values.categoria.length>0 )\n        {\n          nombreCategoria= categorias.filter(ele=>{\n            return ele._id=== values.categoria;\n          })[0].nombre;\n        }\n        postproducto({...values , categoria :values.categoria ,  id:producto._id }).then(respuesta=>{\n          if (producto._id.length>0)\n            setProductos( \n              productos.map(ele=>{ if (ele._id===producto._id)\n                 return {...ele, nombre: values.nombre, precio: values.precio, \n                  categoria: {_id:values.categoria, nombre:nombreCategoria}  } ; else return ele;}) )\n          else\n            setProductos([...productos, respuesta])\n          message.success(\"Se almacenó correctamente el producto\");\n          setformulario(false);\n        }).catch(error=>{\n          message.error(\"Se presentaron errores al intentar almacenar los productos\");\n        });\n      };\n      \n      \n    return (\n      <>\n        <Row gutter={12} >\n          <Col span={12} offset={12}>\n            <Button type=\"primary\" shape=\"circle\" icon={<PlusOutlined />} size={'large'} onClick={crearProducto} />\n          </Col>\n        </Row>\n        <Divider orientation=\"left\">Productos</Divider>\n        <Row gutter= {[16, 24]}>\n        <Table tableLayout='fixed'\n           loading= {isLoading}\n           rowKey='_id'\n           key=\"_id\"\n           pagination={{ defaultPageSize: 5, showSizeChanger: true,\n           pageSizeOptions: ['5','10', '20', '30']}} \n           scroll={{ x: 1300 }}\n           dataSource={productos} columns={columns} />\n        </Row>\n        <Drawer\n          title=\"Items\"\n          width={720}\n          height={300}\n          onClose={()=>{ setformulario(false); }}\n          visible={formulario}\n          bodyStyle={{ paddingBottom: 120 }}\n          placement=\"bottom\"\n        >\n          <Form\n              form= {Forma}\n              name=\"formcategoria\"\n              labelCol={{ span: 4 }}\n              wrapperCol={{ span: 12 }}\n              initialValues={{ remember: true }}\n              onFinish={ onFinish }\n              onFinishFailed={()=>{}}\n              autoComplete=\"off\">\n                <Form.Item\n                  label=\"Descripción\"\n                  name=\"nombre\"\n                  rules={[{ required: true, message: 'Por favor ingrese la descripción' }]}>\n                  <Input />\n                </Form.Item>\n                <Form.Item label=\"Precio\" name=\"precio\">\n                    <InputNumber min=\"0.01\"/>\n                </Form.Item>\n                \n                <Form.Item label=\"Categoria\" name=\"categoria\">\n                <Select\n                    showSearch\n                    style={{ width: 400 }}\n                    placeholder=\"Select a person\"\n                    optionFilterProp=\"children\"\n                    onChange={()=>{}}\n                    onSearch={()=>{}}\n                    filterOption={(input, option) =>\n                      option?.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                    }>\n                    {\n                      categorias.map(({ _id, nombre }: Categoria) =>{\n                        return (\n                          <Option key={_id} value={_id}>{nombre}</Option>\n                        )\n                      })\n                    }\n                  </Select>\n                  </Form.Item>\n                  <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n                  <Button type=\"primary\" htmlType=\"submit\" icon={<SaveOutlined />}>\n                    Guardar\n                  </Button>\n                </Form.Item>\n              </Form>\n        </Drawer>\n      </>\n    )\n}","import Icon from '@ant-design/icons';\n\nimport { Layout, Menu,  } from 'antd';\nimport {\n    BrowserRouter as Router,\n    Link\n  } from 'react-router-dom';\n\nimport {\n  TeamOutlined,\n  UserOutlined,\n  DollarOutlined,\n  SettingFilled,\n  //CloseCircleOutlined,\n  BarcodeOutlined,\n  ShoppingCartOutlined,\n} from '@ant-design/icons';\n\n\nimport {    ReactNode, SetStateAction, useContext, useEffect, useState } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom'\nimport { CategoriasPage } from '../pages/categoriasPage';\nimport { MovimientosPage } from '../pages/movimientosPage';\nimport { ProductosPage } from '../pages/productosPage';\nimport { AuthContext } from '../context/AuthContext';\n\n\nconst { Header, Content, Footer, Sider } = Layout;\nconst { SubMenu } = Menu;\n\n\nconst HeartSvg = () => (\n  <svg width=\"1em\" height=\"1em\" fill=\"currentColor\" viewBox=\"0 0 1024 1024\">\n    <path d=\"M923 283.6c-13.4-31.1-32.6-58.9-56.9-82.8-24.3-23.8-52.5-42.4-84-55.5-32.5-13.5-66.9-20.3-102.4-20.3-49.3 0-97.4 13.5-139.2 39-10 6.1-19.5 12.8-28.5 20.1-9-7.3-18.5-14-28.5-20.1-41.8-25.5-89.9-39-139.2-39-35.5 0-69.9 6.8-102.4 20.3-31.4 13-59.7 31.7-84 55.5-24.4 23.9-43.5 51.7-56.9 82.8-13.9 32.3-21 66.6-21 101.9 0 33.3 6.8 68 20.3 103.3 11.3 29.5 27.5 60.1 48.2 91 32.8 48.9 77.9 99.9 133.9 151.6 92.8 85.7 184.7 144.9 188.6 147.3l23.7 15.2c10.5 6.7 24 6.7 34.5 0l23.7-15.2c3.9-2.5 95.7-61.6 188.6-147.3 56-51.7 101.1-102.7 133.9-151.6 20.7-30.9 37-61.5 48.2-91 13.5-35.3 20.3-70 20.3-103.3 0.1-35.3-7-69.6-20.9-101.9z\" />\n  </svg>\n);\nconst HeartIcon = (props: ReactNode ) => <Icon component={HeartSvg} style={{ color: 'hotpink' }}   />;\n\nexport const AppRouter=()=>{\n  \n  const mostrarIcono=(icono:string):ReactNode=>{\n    switch (icono) {\n      case \"UserOutlined\":\n        return <UserOutlined/>    \n      case \"DollarOutlined\":\n        return <DollarOutlined/>\n      case \"BarcodeOutlined\":\n        return <BarcodeOutlined />\n      case \"ShoppingCartOutlined\":\n        return <ShoppingCartOutlined />\n      default:\n        return <TeamOutlined/>\n    }\n    \n  }\n  const { logout, auth } = useContext( AuthContext );\n  useEffect(()=>{\n    console.log(auth)\n }, [auth] )\n    const salirApp=()=>{\n      logout();\n    }\n    const [colapsado, setcolapsado] = useState(false);\n    const onCollapse = (collapsed:SetStateAction<boolean>) => {\n        setcolapsado(collapsed );\n      };\n    return (\n        <Router>\n        <Layout style={{ minHeight: '100vh' }}>\n          <Sider collapsible collapsed={colapsado} onCollapse={onCollapse}>\n            <div className=\"logo\" />\n            <Menu theme=\"dark\" defaultSelectedKeys={['1']} mode=\"inline\">\n            {\n            auth.opciones?.map((elemento)=>{\n              return (elemento.clave.split(\"_\").length===1) &&\n              <SubMenu key={elemento.clave} icon= { mostrarIcono(elemento.ruta) } title={elemento.titulo }>\n                {\n                  auth.opciones?.filter(elementod=>{\n                    return elementod.clave.startsWith(elemento.clave+'_');\n                  }).map(opcion=>{\n                    if (opcion.clave.split(\"_\").length===2) \n                    {\n                      if (opcion.ruta.includes(\"/\")) \n                      { \n                        return <Menu.Item key={opcion.clave}><Link to={opcion.ruta}>{opcion.titulo}</Link></Menu.Item>\n                      }\n                      else\n                      { \n                        return <SubMenu key={opcion.clave} icon= { mostrarIcono(opcion.ruta) } title={opcion.titulo }>\n                          {\n                          auth.opciones?.filter(elementoe=>{\n                            return elementoe.clave.startsWith(opcion.clave+'_');\n                          })\n                          .map(opcionx=>{\n                            return <Menu.Item key={opcionx.clave}><Link to={opcionx.ruta}>{opcionx.titulo}</Link></Menu.Item>\n                          })\n                          }\n                        </SubMenu>\n                      }\n                    }\n                    return <h1>ok</h1>\n                  })\n                }\n              </SubMenu>\n              \n            })\n            }\n            <SubMenu key=\"sub3\" icon={<SettingFilled />} title=\"Configurar\">\n              <Menu.Item key=\"11\" onClick={salirApp} icon={<HeartIcon   />} >Salir de la App </Menu.Item>\n            </SubMenu>\n          </Menu>\n          </Sider>\n          <Layout className=\"site-layout\">\n            <Header className=\"site-layout-background\" style={{ padding: 0 }} />\n            <Content style={{ margin: '16px 16px' }}>\n                <Switch>\n                    <Route exact path=\"/app/categorias\" component={CategoriasPage }/>\n                    <Route exact path=\"/app/productos\" component={ProductosPage }/>\n                    <Route exact path=\"/app/movimientos\" component={MovimientosPage }/>\n                    <Redirect to =\"/app/movimientos\"/>\n                </Switch>\n            </Content>\n            <Footer style={{ textAlign: 'center' }}>Software Manta ©2018 Created by ManTalents</Footer>\n          </Layout>\n        </Layout>\n        </Router>\n    )\n}","import {\n  Form,\n  Input,\n  Button,\n} from 'antd';\nconst formItemLayout = {\n    labelCol: {\n      xs: { span: 24 },\n      sm: { span: 8 },\n    },\n    wrapperCol: {\n      xs: { span: 24 },\n      sm: { span: 16 },\n    },\n  };\n  const tailFormItemLayout = {\n    wrapperCol: {\n      xs: {\n        span: 24,\n        offset: 0,\n      },\n      sm: {\n        span: 16,\n        offset: 8,\n      },\n    },\n  };\n\nexport const RegisterPage = ()=>{\n    const [form] = Form.useForm();\n\n    const onFinish = (values: any) => {\n        console.log('Received values of form: ', values);\n    };\n\n    return (\n        <Form\n          {...formItemLayout}\n          form={form}\n          name=\"register\"\n          onFinish={onFinish}\n          initialValues={{\n            residence: ['zhejiang', 'hangzhou', 'xihu'],\n            prefix: '86',\n          }}\n          scrollToFirstError\n        >\n          <Form.Item\n            name=\"email\"\n            label=\"E-mail\"\n            rules={[\n              {\n                type: 'email',\n                message: 'The input is not valid E-mail!',\n              },\n              {\n                required: true,\n                message: 'Please input your E-mail!',\n              },\n            ]}\n          >\n            <Input />\n          </Form.Item>\n    \n          <Form.Item\n            name=\"password\"\n            label=\"Password\"\n            rules={[\n              {\n                required: true,\n                message: 'Please input your password!',\n              },\n            ]}\n            hasFeedback\n          >\n            <Input.Password />\n          </Form.Item>\n    \n          <Form.Item\n            name=\"confirm\"\n            label=\"Confirm Password\"\n            dependencies={['password']}\n            hasFeedback\n            rules={[\n              {\n                required: true,\n                message: 'Please confirm your password!',\n              },\n              ({ getFieldValue }) => ({\n                validator(_, value) {\n                  if (!value || getFieldValue('password') === value) {\n                    return Promise.resolve();\n                  }\n                  return Promise.reject(new Error('The two passwords that you entered do not match!'));\n                },\n              }),\n            ]}\n          >\n            <Input.Password />\n          </Form.Item>\n    \n          <Form.Item\n            name=\"nickname\"\n            label=\"Nickname\"\n            tooltip=\"What do you want others to call you?\"\n            rules={[{ required: true, message: 'Please input your nickname!', whitespace: true }]}\n          >\n            <Input />\n          </Form.Item>\n          <Form.Item {...tailFormItemLayout}>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Register\n            </Button>\n          </Form.Item>\n        </Form>\n      );\n}","import { Redirect, Route, RouteProps } from 'react-router-dom'\n\ninterface PublicRouteProps extends RouteProps {\n    isAuthenticated: boolean;\n    component: any;\n}\n\n\nexport const PublicRoute = (props: PublicRouteProps) => {\n    const { component: Component, isAuthenticated, ...rest } = props;\n    return (\n        <Route { ...rest }\n            render={ (props) => (\n                ( !isAuthenticated )\n                    ? <Component { ...props } />\n                    : <Redirect to=\"/app\" />\n            )} \n        />\n    )\n}\n\n\n\n","import { Redirect, Route, RouteProps } from 'react-router-dom'\n\ninterface PrivateRouteProps extends RouteProps {\n    isAuthenticated: boolean;\n    component: any;\n}\n\n\nexport const PrivateRoute = (props: PrivateRouteProps) => {\n    const { component: Component, isAuthenticated, ...rest } = props;\n    return (\n        <Route { ...rest }\n            render={ (props) => (\n                ( isAuthenticated )\n                    ? <Component { ...props } />\n                    : <Redirect to=\"/auth\" />\n            )} \n        />\n    )\n}\n\n\n\n","import {  Switch, Redirect } from 'react-router-dom'\nimport { LoginPage } from '../pages/loginPage';\nimport { AppRouter } from './AppRouter';\nimport {\n    BrowserRouter as Router,\n  } from 'react-router-dom';\nimport { RegisterPage } from '../pages/registerPage';\nimport { PublicRoute } from './PublicRoute';\nimport { PrivateRoute } from './PrivateRoute';\nimport { useContext, useEffect } from 'react';\nimport { AuthContext } from '../context/AuthContext';\n\nexport const AuthRouter=()=>{\n    const { auth, verificaToken } = useContext( AuthContext );\n\n\n    useEffect( () => {\n        verificaToken();\n    },[verificaToken])\n\n    \n    return (\n        <Router>\n            <Switch>\n                <PrivateRoute isAuthenticated={auth.logged }  path=\"/app\" component={AppRouter }/ >\n                <PublicRoute isAuthenticated={auth.logged} exact path=\"/auth/login\" component={LoginPage }/>\n                <PublicRoute isAuthenticated={auth.logged} exact path=\"/auth/register\" component={RegisterPage }/>\n                <Redirect to =\"/auth/login\"/>\n            </Switch>\n        </Router>\n    )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { AuthProvider } from './context/AuthContext';\nimport './index.css';\nimport { AuthRouter } from './Routers/AuthRouter';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AuthProvider>\n    <AuthRouter />\n    </AuthProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}